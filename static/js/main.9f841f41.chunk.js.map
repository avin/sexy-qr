{"version":3,"sources":["../../src/QR8bitByte.ts","../../src/QRMode.ts","../../src/QRRSBlock.ts","../../src/QRErrorCorrectLevel.ts","../../src/QRBitBuffer.ts","../../src/QRMath.ts","../../src/QRPolynomial.ts","../../src/QRUtil.ts","../../src/QRMaskPattern.ts","../../src/QRCodeModel.ts","../../src/QRCodeLimitLength.ts","../../src/utils.ts","../../src/QRSvg.ts","../../src/QRCode.ts","components/App/GitHubLink/GitHubLink.js","components/App/App.js","index.js","components/App/App.module.scss","components/App/GitHubLink/styles.module.scss"],"names":["QR8bitByte","data","mode","parsedData","this","i","l","length","code","charCodeAt","push","Array","prototype","concat","apply","unshift","getLength","write","buffer","put","QRRSBlock","totalCount","dataCount","getRSBlocks","typeNumber","errorCorrectLevel","rsBlock","getRsBlockTable","Error","list","count","j","RS_BLOCK_TABLE","QRBitBuffer","get","index","bufIndex","Math","floor","num","putBit","getLengthInBits","bit","EXP_TABLE","LOG_TABLE","glog","n","gexp","QRPolynomial","shift","offset","multiply","e","QRMath","mod","ratio","PATTERN_POSITION_TABLE","getBCHDigit","digit","getMask","maskPattern","getErrorCorrectPolynomial","errorCorrectLength","a","type","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","darkCount","abs","QRCodeModel","modules","dataCache","dataList","addData","newData","make","makeImpl","getBestMaskPattern","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","QRUtil","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y","x","beginFill","moveTo","lineTo","endFill","pos","bits","d","inc","bitIndex","byteIndex","rsBlocks","totalDataCount","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","modPoly","modIndex","totalCodeCount","QRCodeLimitLength","getProp","object","keys","defaultVal","isArray","split","slice","round","val","precision","neighborOffsets","contour","findNeighbors","matrix","cell","pride","expectCells","neighborCoord","find","neighborCell","QGSvg","qrModules","options","size","radiusFactor","roundExternalCorners","roundInternalCorners","cornerBlocksAsCircles","fill","matrixSize","lines","lastUniqId","pointSize","cr","result","min","forEach","rowIdx","idx","blockId","isCornerBlock","detectBlocks","detectLines","currCell","cells","_this","getUniqId","_this2","p1","p2","Object","key","line","proc","py","px","oCell","resultSeg","nextSeg","filter","seg","processed","sort","b","crops","checkCrops","notProcessedSeg","cropResult","reverse","map","op2","getDir","getSubPath","prevSeg","xmcr","xpcr","ymcr","ypcr","segDir","prevSegDir","path","String","generate","paths","entries","f","lineIdx","segIdx","_this3","oy","centerX","centerY","outerRadius","innerRadius","join","QRCode","background","ecl","content","qrcode","encodeURI","toString","replace","limit","len","table","svg","GitHubLink","className","styles","main","href","target","rel","octicon","viewBox","version","aria-hidden","fillRule","App","useState","setContent","setSize","color","setColor","circles","setCircles","setEcl","setRadiusFactor","handleChangeColor","useCallback","value","handleChangeCircles","handleChangeContent","handleChangeSize","handleChangeEcl","handleChangeRadiusFactor","svgCode","useMemo","QrCode","Number","qrCodeSrc","btoa","handleDownload","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","title","container","controls","width","htmlFor","id","onChange","input","placeholder","name","select","v","toFixed","imageContainer","dangerouslySetInnerHTML","__html","downloadContainer","onClick","downloadButton","notice","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,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","file":"static/js/main.9f841f41.chunk.js","sourcesContent":["import { QRMode } from './QRMode';\n\nexport class QR8bitByte {\n  mode = QRMode.MODE_8BIT_BYTE;\n\n  data: string;\n\n  parsedData: (number[] | number)[] = [];\n\n  constructor(data) {\n    this.data = data;\n\n    // Added to support UTF-8 Characters\n    let i = 0;\n    const l = this.data.length;\n    for (; i < l; i++) {\n      const code = this.data.charCodeAt(i);\n\n      let byteArray: number[];\n      if (code > 0x10000) {\n        // prettier-ignore\n        byteArray = [\n          0xf0 | ((code & 0x1c0000) >>> 18),\n          0x80 | ((code & 0x3f000) >>> 12),\n          0x80 | ((code & 0xfc0) >>> 6),\n          0x80 | (code & 0x3f),\n        ];\n      } else if (code > 0x800) {\n        // prettier-ignore\n        byteArray = [\n          0xe0 | ((code & 0xf000) >>> 12),\n          0x80 | ((code & 0xfc0) >>> 6),\n          0x80 | (code & 0x3f),\n        ]\n      } else if (code > 0x80) {\n        // prettier-ignore\n        byteArray = [\n          0xc0 | ((code & 0x7c0) >>> 6),\n          0x80 | (code & 0x3f),\n        ]\n      } else {\n        byteArray = [code];\n      }\n\n      this.parsedData.push(byteArray);\n    }\n\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n    if (this.parsedData.length !== this.data.length) {\n      this.parsedData.unshift(191);\n      this.parsedData.unshift(187);\n      this.parsedData.unshift(239);\n    }\n  }\n\n  getLength() {\n    return this.parsedData.length;\n  }\n\n  write(buffer) {\n    let i = 0;\n    const l = this.parsedData.length;\n    for (; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  }\n}\n","export const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n};\n\nexport type QRMode = typeof QRMode[keyof typeof QRMode];\n","import { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\n\nexport class QRRSBlock {\n  totalCount!: number;\n  dataCount!: number;\n\n  constructor(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n  }\n\n  static RS_BLOCK_TABLE = [\n    [1, 26, 19],\n    [1, 26, 16],\n    [1, 26, 13],\n    [1, 26, 9],\n    [1, 44, 34],\n    [1, 44, 28],\n    [1, 44, 22],\n    [1, 44, 16],\n    [1, 70, 55],\n    [1, 70, 44],\n    [2, 35, 17],\n    [2, 35, 13],\n    [1, 100, 80],\n    [2, 50, 32],\n    [2, 50, 24],\n    [4, 25, 9],\n    [1, 134, 108],\n    [2, 67, 43],\n    [2, 33, 15, 2, 34, 16],\n    [2, 33, 11, 2, 34, 12],\n    [2, 86, 68],\n    [4, 43, 27],\n    [4, 43, 19],\n    [4, 43, 15],\n    [2, 98, 78],\n    [4, 49, 31],\n    [2, 32, 14, 4, 33, 15],\n    [4, 39, 13, 1, 40, 14],\n    [2, 121, 97],\n    [2, 60, 38, 2, 61, 39],\n    [4, 40, 18, 2, 41, 19],\n    [4, 40, 14, 2, 41, 15],\n    [2, 146, 116],\n    [3, 58, 36, 2, 59, 37],\n    [4, 36, 16, 4, 37, 17],\n    [4, 36, 12, 4, 37, 13],\n    [2, 86, 68, 2, 87, 69],\n    [4, 69, 43, 1, 70, 44],\n    [6, 43, 19, 2, 44, 20],\n    [6, 43, 15, 2, 44, 16],\n    [4, 101, 81],\n    [1, 80, 50, 4, 81, 51],\n    [4, 50, 22, 4, 51, 23],\n    [3, 36, 12, 8, 37, 13],\n    [2, 116, 92, 2, 117, 93],\n    [6, 58, 36, 2, 59, 37],\n    [4, 46, 20, 6, 47, 21],\n    [7, 42, 14, 4, 43, 15],\n    [4, 133, 107],\n    [8, 59, 37, 1, 60, 38],\n    [8, 44, 20, 4, 45, 21],\n    [12, 33, 11, 4, 34, 12],\n    [3, 145, 115, 1, 146, 116],\n    [4, 64, 40, 5, 65, 41],\n    [11, 36, 16, 5, 37, 17],\n    [11, 36, 12, 5, 37, 13],\n    [5, 109, 87, 1, 110, 88],\n    [5, 65, 41, 5, 66, 42],\n    [5, 54, 24, 7, 55, 25],\n    [11, 36, 12],\n    [5, 122, 98, 1, 123, 99],\n    [7, 73, 45, 3, 74, 46],\n    [15, 43, 19, 2, 44, 20],\n    [3, 45, 15, 13, 46, 16],\n    [1, 135, 107, 5, 136, 108],\n    [10, 74, 46, 1, 75, 47],\n    [1, 50, 22, 15, 51, 23],\n    [2, 42, 14, 17, 43, 15],\n    [5, 150, 120, 1, 151, 121],\n    [9, 69, 43, 4, 70, 44],\n    [17, 50, 22, 1, 51, 23],\n    [2, 42, 14, 19, 43, 15],\n    [3, 141, 113, 4, 142, 114],\n    [3, 70, 44, 11, 71, 45],\n    [17, 47, 21, 4, 48, 22],\n    [9, 39, 13, 16, 40, 14],\n    [3, 135, 107, 5, 136, 108],\n    [3, 67, 41, 13, 68, 42],\n    [15, 54, 24, 5, 55, 25],\n    [15, 43, 15, 10, 44, 16],\n    [4, 144, 116, 4, 145, 117],\n    [17, 68, 42],\n    [17, 50, 22, 6, 51, 23],\n    [19, 46, 16, 6, 47, 17],\n    [2, 139, 111, 7, 140, 112],\n    [17, 74, 46],\n    [7, 54, 24, 16, 55, 25],\n    [34, 37, 13],\n    [4, 151, 121, 5, 152, 122],\n    [4, 75, 47, 14, 76, 48],\n    [11, 54, 24, 14, 55, 25],\n    [16, 45, 15, 14, 46, 16],\n    [6, 147, 117, 4, 148, 118],\n    [6, 73, 45, 14, 74, 46],\n    [11, 54, 24, 16, 55, 25],\n    [30, 46, 16, 2, 47, 17],\n    [8, 132, 106, 4, 133, 107],\n    [8, 75, 47, 13, 76, 48],\n    [7, 54, 24, 22, 55, 25],\n    [22, 45, 15, 13, 46, 16],\n    [10, 142, 114, 2, 143, 115],\n    [19, 74, 46, 4, 75, 47],\n    [28, 50, 22, 6, 51, 23],\n    [33, 46, 16, 4, 47, 17],\n    [8, 152, 122, 4, 153, 123],\n    [22, 73, 45, 3, 74, 46],\n    [8, 53, 23, 26, 54, 24],\n    [12, 45, 15, 28, 46, 16],\n    [3, 147, 117, 10, 148, 118],\n    [3, 73, 45, 23, 74, 46],\n    [4, 54, 24, 31, 55, 25],\n    [11, 45, 15, 31, 46, 16],\n    [7, 146, 116, 7, 147, 117],\n    [21, 73, 45, 7, 74, 46],\n    [1, 53, 23, 37, 54, 24],\n    [19, 45, 15, 26, 46, 16],\n    [5, 145, 115, 10, 146, 116],\n    [19, 75, 47, 10, 76, 48],\n    [15, 54, 24, 25, 55, 25],\n    [23, 45, 15, 25, 46, 16],\n    [13, 145, 115, 3, 146, 116],\n    [2, 74, 46, 29, 75, 47],\n    [42, 54, 24, 1, 55, 25],\n    [23, 45, 15, 28, 46, 16],\n    [17, 145, 115],\n    [10, 74, 46, 23, 75, 47],\n    [10, 54, 24, 35, 55, 25],\n    [19, 45, 15, 35, 46, 16],\n    [17, 145, 115, 1, 146, 116],\n    [14, 74, 46, 21, 75, 47],\n    [29, 54, 24, 19, 55, 25],\n    [11, 45, 15, 46, 46, 16],\n    [13, 145, 115, 6, 146, 116],\n    [14, 74, 46, 23, 75, 47],\n    [44, 54, 24, 7, 55, 25],\n    [59, 46, 16, 1, 47, 17],\n    [12, 151, 121, 7, 152, 122],\n    [12, 75, 47, 26, 76, 48],\n    [39, 54, 24, 14, 55, 25],\n    [22, 45, 15, 41, 46, 16],\n    [6, 151, 121, 14, 152, 122],\n    [6, 75, 47, 34, 76, 48],\n    [46, 54, 24, 10, 55, 25],\n    [2, 45, 15, 64, 46, 16],\n    [17, 152, 122, 4, 153, 123],\n    [29, 74, 46, 14, 75, 47],\n    [49, 54, 24, 10, 55, 25],\n    [24, 45, 15, 46, 46, 16],\n    [4, 152, 122, 18, 153, 123],\n    [13, 74, 46, 32, 75, 47],\n    [48, 54, 24, 14, 55, 25],\n    [42, 45, 15, 32, 46, 16],\n    [20, 147, 117, 4, 148, 118],\n    [40, 75, 47, 7, 76, 48],\n    [43, 54, 24, 22, 55, 25],\n    [10, 45, 15, 67, 46, 16],\n    [19, 148, 118, 6, 149, 119],\n    [18, 75, 47, 31, 76, 48],\n    [34, 54, 24, 34, 55, 25],\n    [20, 45, 15, 61, 46, 16],\n  ];\n\n  static getRSBlocks(typeNumber, errorCorrectLevel) {\n    const rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n    if (rsBlock === undefined) {\n      throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);\n    }\n    const length = rsBlock.length / 3;\n    const list: QRRSBlock[] = [];\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n      for (let j = 0; j < count; j++) {\n        list.push(new QRRSBlock(totalCount, dataCount));\n      }\n    }\n    return list;\n  }\n\n  static getRsBlockTable(typeNumber, errorCorrectLevel) {\n    switch (errorCorrectLevel) {\n      case QRErrorCorrectLevel.L:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4];\n      case QRErrorCorrectLevel.M:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectLevel.Q:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectLevel.H:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default:\n        return undefined;\n    }\n  }\n}\n","export const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n};\n\nexport type QRErrorCorrectLevel = typeof QRErrorCorrectLevel[keyof typeof QRErrorCorrectLevel];\n","export class QRBitBuffer {\n  buffer: number[] = [];\n\n  length = 0;\n\n  constructor() {}\n\n  get(index) {\n    const bufIndex = Math.floor(index / 8);\n    return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) === 1;\n  }\n\n  put(num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  getLengthInBits() {\n    return this.length;\n  }\n\n  putBit(bit) {\n    const bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  }\n}\n","export const [EXP_TABLE, LOG_TABLE] = (() => {\n  const EXP_TABLE = new Array(256);\n  const LOG_TABLE = new Array(256);\n\n  for (let i = 0; i < 8; i++) {\n    EXP_TABLE[i] = 1 << i;\n  }\n  for (let i = 8; i < 256; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n  }\n  for (let i = 0; i < 255; i++) {\n    LOG_TABLE[EXP_TABLE[i]] = i;\n  }\n\n  return [EXP_TABLE, LOG_TABLE];\n})();\n\nexport const glog = (n) => {\n  if (n < 1) {\n    throw new Error('glog(' + n + ')');\n  }\n  return LOG_TABLE[n];\n};\n\nexport const gexp = (n) => {\n  while (n < 0) {\n    n += 255;\n  }\n  while (n >= 256) {\n    n -= 255;\n  }\n  return EXP_TABLE[n];\n};\n","import * as QRMath from './QRMath';\n\nexport class QRPolynomial {\n  num: number[];\n\n  constructor(num, shift) {\n    if (num.length === undefined) {\n      throw new Error(num.length + '/' + shift);\n    }\n    let offset = 0;\n    while (offset < num.length && num[offset] === 0) {\n      offset++;\n    }\n    this.num = new Array(num.length - offset + shift);\n    for (let i = 0; i < num.length - offset; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  get(index) {\n    return this.num[index];\n  }\n\n  getLength() {\n    return this.num.length;\n  }\n\n  multiply(e) {\n    const num = new Array(this.getLength() + e.getLength() - 1);\n    for (let i = 0; i < this.getLength(); i++) {\n      for (let j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n      }\n    }\n    return new QRPolynomial(num, 0);\n  }\n\n  mod(e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n    const ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n    const num = new Array(this.getLength());\n    for (let i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n    for (let i = 0; i < e.getLength(); i++) {\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n    }\n    return new QRPolynomial(num, 0).mod(e);\n  }\n}\n","import { QRMaskPattern } from './QRMaskPattern';\nimport { QRPolynomial } from './QRPolynomial';\nimport { QRMode } from './QRMode';\nimport * as QRMath from './QRMath';\n\nexport const PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\n\nexport const G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n\nexport const G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n\nexport const G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\nexport const getBCHDigit = (data) => {\n  let digit = 0;\n  while (data !== 0) {\n    digit++;\n    data >>>= 1;\n  }\n  return digit;\n};\n\nexport const getBCHTypeInfo = (data) => {\n  let d = data << 10;\n  while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n    d ^= G15 << (getBCHDigit(d) - getBCHDigit(G15));\n  }\n  return ((data << 10) | d) ^ G15_MASK;\n};\n\nexport const getBCHTypeNumber = (data) => {\n  let d = data << 12;\n  while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n    d ^= G18 << (getBCHDigit(d) - getBCHDigit(G18));\n  }\n  return (data << 12) | d;\n};\n\nexport const getPatternPosition = (typeNumber) => {\n  return PATTERN_POSITION_TABLE[typeNumber - 1];\n};\n\nexport const getMask = (maskPattern, i, j) => {\n  switch (maskPattern) {\n    case QRMaskPattern.PATTERN000:\n      return (i + j) % 2 === 0;\n    case QRMaskPattern.PATTERN001:\n      return i % 2 === 0;\n    case QRMaskPattern.PATTERN010:\n      return j % 3 === 0;\n    case QRMaskPattern.PATTERN011:\n      return (i + j) % 3 === 0;\n    case QRMaskPattern.PATTERN100:\n      return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN101:\n      return ((i * j) % 2) + ((i * j) % 3) === 0;\n    case QRMaskPattern.PATTERN110:\n      return (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN111:\n      return (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n    default:\n      throw new Error('bad maskPattern:' + maskPattern);\n  }\n};\n\nexport const getErrorCorrectPolynomial = (errorCorrectLength) => {\n  let a = new QRPolynomial([1], 0);\n  for (let i = 0; i < errorCorrectLength; i++) {\n    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n  }\n  return a;\n};\n\nexport const getLengthInBits = (mode, type) => {\n  if (1 <= type && type < 10) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 10;\n      case QRMode.MODE_ALPHA_NUM:\n        return 9;\n      case QRMode.MODE_8BIT_BYTE:\n        return 8;\n      case QRMode.MODE_KANJI:\n        return 8;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 27) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 12;\n      case QRMode.MODE_ALPHA_NUM:\n        return 11;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 10;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 41) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 14;\n      case QRMode.MODE_ALPHA_NUM:\n        return 13;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 12;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else {\n    throw new Error('type:' + type);\n  }\n};\n\nexport const getLostPoint = (qrCode) => {\n  const moduleCount = qrCode.getModuleCount();\n  let lostPoint = 0;\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount; col++) {\n      let sameCount = 0;\n      const dark = qrCode.isDark(row, col);\n      for (let r = -1; r <= 1; r++) {\n        if (row + r < 0 || moduleCount <= row + r) {\n          continue;\n        }\n        for (let c = -1; c <= 1; c++) {\n          if (col + c < 0 || moduleCount <= col + c) {\n            continue;\n          }\n          if (r === 0 && c === 0) {\n            continue;\n          }\n          if (dark === qrCode.isDark(row + r, col + c)) {\n            sameCount++;\n          }\n        }\n      }\n      if (sameCount > 5) {\n        lostPoint += 3 + sameCount - 5;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount - 1; row++) {\n    for (let col = 0; col < moduleCount - 1; col++) {\n      let count = 0;\n      if (qrCode.isDark(row, col)) count++;\n      if (qrCode.isDark(row + 1, col)) count++;\n      if (qrCode.isDark(row, col + 1)) count++;\n      if (qrCode.isDark(row + 1, col + 1)) count++;\n      if (count === 0 || count === 4) {\n        lostPoint += 3;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount - 6; col++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row, col + 1) &&\n        qrCode.isDark(row, col + 2) &&\n        qrCode.isDark(row, col + 3) &&\n        qrCode.isDark(row, col + 4) &&\n        !qrCode.isDark(row, col + 5) &&\n        qrCode.isDark(row, col + 6)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount - 6; row++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row + 1, col) &&\n        qrCode.isDark(row + 2, col) &&\n        qrCode.isDark(row + 3, col) &&\n        qrCode.isDark(row + 4, col) &&\n        !qrCode.isDark(row + 5, col) &&\n        qrCode.isDark(row + 6, col)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  let darkCount = 0;\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount; row++) {\n      if (qrCode.isDark(row, col)) {\n        darkCount++;\n      }\n    }\n  }\n  const ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n  lostPoint += ratio * 10;\n  return lostPoint;\n};\n","export const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n};\n\nexport type QRMaskPattern = typeof QRMaskPattern[keyof typeof QRMaskPattern];\n","import { QR8bitByte } from './QR8bitByte';\nimport { QRRSBlock } from './QRRSBlock';\nimport { QRBitBuffer } from './QRBitBuffer';\nimport { QRPolynomial } from './QRPolynomial';\nimport * as QRUtil from './QRUtil';\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\nexport class QRCodeModel {\n  typeNumber!: number;\n  errorCorrectLevel!: number;\n  modules: (boolean | null)[][] = [];\n  moduleCount = 0;\n  dataCache: number[] | null = null;\n  dataList: QR8bitByte[] = [];\n\n  constructor(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n  }\n\n  addData(data) {\n    const newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  }\n\n  isDark(row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + ',' + col);\n    }\n    return this.modules[row][col];\n  }\n\n  getModuleCount() {\n    return this.moduleCount;\n  }\n\n  make() {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n\n  makeImpl(test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for (let row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n      for (let col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null;\n      }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n    if (this.dataCache == null) {\n      this.dataCache = this.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  setupPositionProbePattern(row, col) {\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n        this.modules[row + r][col + c] =\n          (0 <= r && r <= 6 && (c === 0 || c === 6)) ||\n          (0 <= c && c <= 6 && (r === 0 || r === 6)) ||\n          (2 <= r && r <= 4 && 2 <= c && c <= 4);\n      }\n    }\n  }\n\n  getBestMaskPattern() {\n    let minLostPoint = 0;\n    let pattern = 0;\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      const lostPoint = QRUtil.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n    return pattern;\n  }\n\n  createMovieClip(target_mc, instance_name, depth) {\n    const qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    const cs = 1;\n    this.make();\n    for (let row = 0; row < this.modules.length; row++) {\n      const y = row * cs;\n      for (let col = 0; col < this.modules[row].length; col++) {\n        const x = col * cs;\n        const dark = this.modules[row][col];\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n    return qr_mc;\n  }\n\n  setupTimingPattern() {\n    for (let r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n      this.modules[r][6] = r % 2 === 0;\n    }\n    for (let c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n      this.modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  setupPositionAdjustPattern() {\n    const pos = QRUtil.getPatternPosition(this.typeNumber);\n    for (let i = 0; i < pos.length; i++) {\n      for (let j = 0; j < pos.length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            if (r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0)) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  setupTypeNumber(test) {\n    const bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    for (let i = 0; i < 18; i++) {\n      this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = !test && ((bits >> i) & 1) === 1;\n    }\n    for (let i = 0; i < 18; i++) {\n      this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = !test && ((bits >> i) & 1) === 1;\n    }\n  }\n\n  setupTypeInfo(test, maskPattern) {\n    const data = (this.errorCorrectLevel << 3) | maskPattern;\n    const bits = QRUtil.getBCHTypeInfo(data);\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    }\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    }\n    this.modules[this.moduleCount - 8][8] = !test;\n  }\n\n  mapData(data, maskPattern) {\n    let inc = -1;\n    let row = this.moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n    for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col === 6) col--;\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            let dark = false;\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n            const mask = QRUtil.getMask(maskPattern, row, col - c);\n            if (mask) {\n              dark = !dark;\n            }\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n        row += inc;\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  createData(typeNumber, errorCorrectLevel, dataList) {\n    const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new QRBitBuffer();\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n      buffer.put(data.mode, 4);\n      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');\n    }\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n      buffer.put(0, 4);\n    }\n    while (buffer.getLengthInBits() % 8 !== 0) {\n      buffer.putBit(false);\n    }\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  createBytes(buffer, rsBlocks) {\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n    const dcdata = new Array(rsBlocks.length);\n    const ecdata = new Array(rsBlocks.length);\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n      dcdata[r] = new Array(dcCount);\n      for (let i = 0; i < dcdata[r].length; i++) {\n        dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n      }\n      offset += dcCount;\n      const rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n      ecdata[r] = new Array(rsPoly.getLength() - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.getLength() - ecdata[r].length;\n        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n      }\n    }\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n    const data = new Array(totalCodeCount);\n    let index = 0;\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n    return data;\n  }\n}\n","export const QRCodeLimitLength = [\n  [17, 14, 11, 7],\n  [32, 26, 20, 14],\n  [53, 42, 32, 24],\n  [78, 62, 46, 34],\n  [106, 84, 60, 44],\n  [134, 106, 74, 58],\n  [154, 122, 86, 64],\n  [192, 152, 108, 84],\n  [230, 180, 130, 98],\n  [271, 213, 151, 119],\n  [321, 251, 177, 137],\n  [367, 287, 203, 155],\n  [425, 331, 241, 177],\n  [458, 362, 258, 194],\n  [520, 412, 292, 220],\n  [586, 450, 322, 250],\n  [644, 504, 364, 280],\n  [718, 560, 394, 310],\n  [792, 624, 442, 338],\n  [858, 666, 482, 382],\n  [929, 711, 509, 403],\n  [1003, 779, 565, 439],\n  [1091, 857, 611, 461],\n  [1171, 911, 661, 511],\n  [1273, 997, 715, 535],\n  [1367, 1059, 751, 593],\n  [1465, 1125, 805, 625],\n  [1528, 1190, 868, 658],\n  [1628, 1264, 908, 698],\n  [1732, 1370, 982, 742],\n  [1840, 1452, 1030, 790],\n  [1952, 1538, 1112, 842],\n  [2068, 1628, 1168, 898],\n  [2188, 1722, 1228, 958],\n  [2303, 1809, 1283, 983],\n  [2431, 1911, 1351, 1051],\n  [2563, 1989, 1423, 1093],\n  [2699, 2099, 1499, 1139],\n  [2809, 2213, 1579, 1219],\n  [2953, 2331, 1663, 1273],\n];\n","export const getProp = (object, keys, defaultVal = undefined) => {\n  keys = Array.isArray(keys) ? keys : keys.split('.');\n  object = object[keys[0]];\n  if (object && keys.length > 1) {\n    return getProp(object, keys.slice(1));\n  }\n  return object === undefined ? defaultVal : object;\n};\n\nexport const round = (val: number, precision = 1e1) => {\n  return Math.round(val * precision) / precision;\n};\n\nexport const neighborOffsets = [\n  [-1, 0],\n  [0, -1],\n  [1, 0],\n  [0, 1],\n];\n\nexport const contour = [\n  [\n    [0, 0],\n    [0, 1],\n  ],\n  [\n    [0, 0],\n    [1, 0],\n  ],\n  [\n    [1, 0],\n    [1, 1],\n  ],\n  [\n    [0, 1],\n    [1, 1],\n  ],\n];\n\nexport const getUTF8Length = (content) => {\n  const result = encodeURI(content)\n    .toString()\n    .replace(/%[0-9a-fA-F]{2}/g, 'a');\n  return result.length + (result.length !== content ? 3 : 0);\n};\n","import { getProp, round, neighborOffsets, contour } from './utils';\n\ntype QGSvgOptions = {\n  size: number;\n  radiusFactor: number;\n  roundExternalCorners: boolean;\n  roundInternalCorners: boolean;\n  cornerBlocksAsCircles: boolean;\n  fill: string;\n};\n\ntype Pride = 1 | 0;\n\ntype Cell = {\n  pride: Pride;\n  x: number;\n  y: number;\n  blockId?: string;\n  isCornerBlock: boolean;\n};\n\nconst findNeighbors = (matrix: Cell[][], cell: Cell, pride: Pride, expectCells: Cell[] = []) => {\n  expectCells.push(cell);\n\n  for (const offset of neighborOffsets) {\n    const neighborCoord = { x: cell.x + offset[0], y: cell.y + offset[1] };\n\n    if (!expectCells.find((i) => i.x === neighborCoord.x && i.y === neighborCoord.y)) {\n      const neighborCell = getProp(matrix, [neighborCoord.y, neighborCoord.x]);\n\n      if (neighborCell && neighborCell.pride === pride) {\n        const pride = neighborCell.pride;\n        findNeighbors(matrix, neighborCell, pride, expectCells);\n      }\n    }\n  }\n};\n\nexport class QGSvg {\n  options: QGSvgOptions = {\n    size: 0,\n    radiusFactor: 0.75,\n    roundExternalCorners: true,\n    roundInternalCorners: true,\n    cornerBlocksAsCircles: false,\n    fill: 'currentColor',\n  };\n\n  matrix!: Cell[][];\n\n  matrixSize!: number;\n\n  lines: Record<string, any> = {};\n\n  lastUniqId = 0;\n\n  pointSize = 0;\n\n  cr = 0;\n\n  constructor(qrModules: (boolean | null)[][] = [], options: Partial<QGSvgOptions>) {\n    for (const i in options) {\n      this.options[i] = options[i];\n    }\n\n    if (!(this.options.size > 0)) {\n      throw new Error(\"Expected 'size' value to be higher than zero!\");\n    }\n\n    this.matrixSize = qrModules.length;\n    this.pointSize = this.options.size / this.matrixSize;\n    this.cr = (this.pointSize / 2) * Math.min(this.options.radiusFactor, 10);\n\n    this.matrix = (() => {\n      const result: Cell[][] = [];\n      qrModules.forEach((row, rowIdx) => {\n        result[rowIdx] = [];\n        row.forEach((val, idx) => {\n          result[rowIdx][idx] = {\n            pride: val ? 1 : 0,\n            x: idx,\n            y: rowIdx,\n            blockId: undefined,\n            isCornerBlock: false,\n          } as Cell;\n        });\n      });\n      return result;\n    })();\n\n    this.detectBlocks();\n    this.detectLines();\n  }\n\n  detectBlocks() {\n    const { matrixSize, matrix } = this;\n\n    for (let y = 0; y < matrixSize; y++) {\n      for (let x = 0; x < matrixSize; x++) {\n        const currCell = matrix[y][x];\n        if (currCell.blockId === undefined && currCell.pride === 1) {\n          const cells: Cell[] = [];\n          findNeighbors(matrix, currCell, 1, cells);\n          const blockId = this.getUniqId();\n          cells.forEach((cell) => {\n            const { x, y } = cell;\n            cell.blockId = blockId;\n\n            if ((x < 8 && y < 8) || (x > this.matrixSize - 8 && y < 8) || (x < 8 && y > this.matrixSize - 8)) {\n              cell.isCornerBlock = true;\n            }\n          });\n        }\n      }\n    }\n  }\n\n  detectLines() {\n    const { lines, matrixSize, matrix } = this;\n\n    for (let y = 0; y < matrixSize; y++) {\n      for (let x = 0; x < matrixSize; x++) {\n        const cell = matrix[y][x];\n        if (cell.blockId === undefined) {\n          continue;\n        }\n\n        if (cell.isCornerBlock && this.options.cornerBlocksAsCircles) {\n          continue;\n        }\n\n        neighborOffsets.forEach((offset, idx) => {\n          const neighborCell = getProp(matrix, [y + offset[0], x + offset[1]]);\n          if (!neighborCell || neighborCell.blockId !== cell.blockId) {\n            if (cell.blockId) {\n              lines[cell.blockId] = lines[cell.blockId] || [];\n              lines[cell.blockId].push({\n                p1: { y: y + contour[idx][0][0], x: x + contour[idx][0][1] },\n                p2: { y: y + contour[idx][1][0], x: x + contour[idx][1][1] },\n                cell,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    Object.keys(lines).forEach((key) => {\n      const line = lines[key];\n\n      const proc = (py, px, result, oCell) => {\n        const nextSegs = line\n          .filter((seg) => {\n            if (!seg.processed) {\n              if ((seg.p1.y === py && seg.p1.x === px) || (seg.p2.y === py && seg.p2.x === px)) {\n                return true;\n              }\n            }\n            return false;\n          })\n          .sort((a, b) => {\n            if (a.cell === oCell) {\n              return -1;\n            }\n            return 1;\n          });\n\n        const nextSeg = nextSegs[0];\n\n        if (nextSeg) {\n          nextSeg.processed = true;\n          let resultSeg;\n          if (nextSeg.p1.y === py && nextSeg.p1.x === px) {\n            resultSeg = { p1: nextSeg.p1, p2: nextSeg.p2 };\n          } else if (nextSeg.p2.y === py && nextSeg.p2.x === px) {\n            resultSeg = { p1: nextSeg.p2, p2: nextSeg.p1 };\n          }\n          result.push(resultSeg);\n          proc(resultSeg.p2.y, resultSeg.p2.x, result, nextSeg.cell);\n        }\n      };\n      line[0].processed = true;\n      const result = [line[0]];\n      proc(line[0].p2.y, line[0].p2.x, result, line[0].cell);\n      lines[key] = result;\n      lines[key].crops = [];\n\n      let checkCrops = true;\n      while (checkCrops) {\n        const notProcessedSeg = line.find((i) => !i.processed);\n        if (notProcessedSeg) {\n          notProcessedSeg.processed = true;\n          const cropResult = [notProcessedSeg];\n          proc(notProcessedSeg.p2.y, notProcessedSeg.p2.x, cropResult, notProcessedSeg.cell);\n          cropResult.reverse();\n          cropResult.map((seg) => {\n            const op2 = seg.p2;\n            seg.p2 = seg.p1;\n            seg.p1 = op2;\n            return seg;\n          });\n          lines[key].crops.push(cropResult);\n        } else {\n          checkCrops = false;\n        }\n      }\n    });\n  }\n\n  getDir(seg) {\n    if (seg.p1.x === seg.p2.x) {\n      if (seg.p1.y > seg.p2.y) {\n        return 'sn';\n      }\n      return 'ns';\n    }\n    if (seg.p1.y === seg.p2.y) {\n      if (seg.p1.x > seg.p2.x) {\n        return 'ew';\n      }\n      return 'we';\n    }\n  }\n\n  getSubPath(seg, prevSeg, roundExternalCorners, roundInternalCorners) {\n    const { pointSize, cr } = this;\n\n    let {\n      p1: { x, y },\n    } = seg;\n\n    x = x * pointSize;\n    y = y * pointSize;\n\n    const xmcr = round(x - cr);\n    const xpcr = round(x + cr);\n\n    const ymcr = round(y - cr);\n    const ypcr = round(y + cr);\n\n    x = round(x);\n    y = round(y);\n\n    const segDir = this.getDir(seg);\n    const prevSegDir = this.getDir(prevSeg);\n\n    let path = '';\n    if (cr && roundExternalCorners && prevSegDir === 'we' && segDir === 'ns') {\n      path += `L${xmcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ypcr}`;\n    } else if (cr && roundExternalCorners && prevSegDir === 'ns' && segDir === 'ew') {\n      path += `L${x} ${ymcr} `;\n      path += `Q${x} ${y} ${xmcr} ${y}`;\n    } else if (cr && roundExternalCorners && prevSegDir === 'ew' && segDir === 'sn') {\n      path += `L${xpcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ymcr}`;\n    } else if (cr && roundExternalCorners && prevSegDir === 'sn' && segDir === 'we') {\n      path += `L${x} ${ypcr} `;\n      path += `Q${x} ${y} ${xpcr} ${y}`;\n    } else if (cr && roundInternalCorners && prevSegDir === 'sn' && segDir === 'ew') {\n      path += `L${x} ${ypcr} `;\n      path += `Q${x} ${y} ${xmcr} ${y}`;\n    } else if (cr && roundInternalCorners && prevSegDir === 'ew' && segDir === 'ns') {\n      path += `L${xpcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ypcr}`;\n    } else if (cr && roundInternalCorners && prevSegDir === 'ns' && segDir === 'we') {\n      path += `L${x} ${ymcr} `;\n      path += `Q${x} ${y} ${xpcr} ${y}`;\n    } else if (cr && roundInternalCorners && prevSegDir === 'we' && segDir === 'sn') {\n      path += `L${xmcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ymcr}`;\n    } else {\n      path += `L${x} ${y} `;\n    }\n    return path;\n  }\n\n  getUniqId() {\n    return String(this.lastUniqId++);\n  }\n\n  generate() {\n    const {\n      pointSize,\n      cr,\n      options: { roundExternalCorners, roundInternalCorners, size, fill, cornerBlocksAsCircles },\n    } = this;\n\n    const { lines } = this;\n    const paths: string[] = [];\n    const circles: string[] = [];\n\n    Object.keys(lines).forEach((key) => {\n      let path = '';\n      for (const [lineIdx, line] of [lines[key], ...lines[key].crops].entries()) {\n        for (const [segIdx, seg] of line.entries()) {\n          let {\n            p1: { x, y },\n          } = seg;\n\n          x = x * pointSize;\n          y = y * pointSize;\n\n          const xpcr = round(x + cr);\n          const ypcr = round(y + cr);\n\n          x = round(x);\n          y = round(y);\n\n          const prevSeg = line[segIdx - 1] || line[line.length - 1];\n          const nextSeg = line[segIdx + 1] || line[0];\n\n          const segDir = this.getDir(seg);\n          const prevSegDir = this.getDir(prevSeg);\n\n          if (segIdx === 0) {\n            if (roundExternalCorners) {\n              if (lineIdx === 0) {\n                path += `M${xpcr} ${y} `;\n              } else {\n                path += `M${x} ${ypcr} `;\n              }\n            } else {\n              path += `M${x} ${y} `;\n            }\n          } else if (segIdx === line.length - 1) {\n            path += this.getSubPath(seg, prevSeg, roundExternalCorners, roundInternalCorners);\n            path += this.getSubPath(nextSeg, seg, roundExternalCorners, roundInternalCorners);\n            path += 'Z';\n          } else if (prevSegDir !== segDir) {\n            path += this.getSubPath(seg, prevSeg, roundExternalCorners, roundInternalCorners);\n          }\n        }\n      }\n      paths.push(`<path d=\"${path}\"/>`);\n    });\n\n    if (cornerBlocksAsCircles) {\n      [\n        [0, 0],\n        [this.pointSize * this.matrixSize - this.pointSize * 7, 0],\n        [0, this.pointSize * this.matrixSize - this.pointSize * 7],\n      ].forEach(([ox, oy]) => {\n        const centerX = round((this.pointSize * 7) / 2 + ox);\n        const centerY = round((this.pointSize * 7) / 2 + oy);\n\n        let outerRadius = round((this.pointSize * 7) / 2);\n        const innerRadius = round((this.pointSize * 7) / 2 - this.pointSize);\n\n        // Big circle\n        paths.push(`<path d=\"\\\nM ${centerX} ${centerY - outerRadius} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY + outerRadius)} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY - outerRadius)} \\\nZ \\\nM ${centerX} ${centerY - innerRadius} \\\nA ${innerRadius} ${innerRadius} 0 1 1 ${centerX} ${round(centerY + innerRadius)} \\\nA ${innerRadius} ${innerRadius} 0 1 1 ${centerX} ${round(centerY - innerRadius)} \\\nZ\" />`);\n\n        // Small circle\n        outerRadius = round((this.pointSize * 7) / 2 - this.pointSize * 2);\n        paths.push(`<path d=\"\\\nM ${centerX} ${centerY - outerRadius} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY + outerRadius)} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY - outerRadius)} \\\nZ\" />`);\n      });\n    }\n\n    return `\\\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${size} ${size}\" width=\"${size}\" height=\"${size}\" fill=\"${fill}\">\n  ${paths.join('\\n  ')}\n  ${circles.join('\\n  ')}\n</svg>`;\n  }\n}\n","import { QRCodeModel } from './QRCodeModel';\nimport { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\nimport { QRCodeLimitLength } from './QRCodeLimitLength';\nimport { QGSvg } from './QRSvg';\nimport { getUTF8Length } from './utils';\n\ntype QRCodeOptions = {\n  size: number;\n  cornerBlocksAsCircles: boolean;\n  typeNumber: number;\n  fill: string;\n  background: string;\n  ecl: string;\n  radiusFactor: number;\n  content: string;\n  roundExternalCorners: boolean;\n  roundInternalCorners: boolean;\n};\n\nexport class QRCode {\n  options: QRCodeOptions = {\n    size: 256,\n    cornerBlocksAsCircles: false,\n    typeNumber: 4,\n    fill: 'currentColor',\n    background: '#ffffff',\n    ecl: 'M',\n    radiusFactor: 0.5,\n    content: '',\n    roundExternalCorners: true,\n    roundInternalCorners: true,\n  };\n\n  qrcode: QRCodeModel;\n\n  constructor(options: Partial<QRCodeOptions>) {\n    for (const i in options) {\n      this.options[i] = options[i];\n    }\n\n    if (this.options.content.length === 0 /* || this.options.content.length > 7089 */) {\n      throw new Error(\"Expected 'content' to be non-empty!\");\n    }\n\n    if (!(this.options.size > 0)) {\n      throw new Error(\"Expected 'size' value to be higher than zero!\");\n    }\n\n    //Gets the error correction level\n    function _getErrorCorrectLevel(ecl) {\n      switch (ecl) {\n        case 'L':\n          return QRErrorCorrectLevel.L;\n\n        case 'M':\n          return QRErrorCorrectLevel.M;\n\n        case 'Q':\n          return QRErrorCorrectLevel.Q;\n\n        case 'H':\n          return QRErrorCorrectLevel.H;\n\n        default:\n          throw new Error('Unknwon error correction level: ' + ecl);\n      }\n    }\n\n    // Get type number\n    function _getTypeNumber(content, ecl) {\n      const length = getUTF8Length(content);\n\n      let type = 1;\n      let limit = 0;\n      let i = 0;\n      const len = QRCodeLimitLength.length;\n      for (; i <= len; i++) {\n        const table = QRCodeLimitLength[i];\n        if (!table) {\n          throw new Error('Content too long: expected ' + limit + ' but got ' + length);\n        }\n\n        switch (ecl) {\n          case 'L':\n            limit = table[0];\n            break;\n\n          case 'M':\n            limit = table[1];\n            break;\n\n          case 'Q':\n            limit = table[2];\n            break;\n\n          case 'H':\n            limit = table[3];\n            break;\n\n          default:\n            throw new Error('Unknwon error correction level: ' + ecl);\n        }\n\n        if (length <= limit) {\n          break;\n        }\n\n        type++;\n      }\n\n      if (type > QRCodeLimitLength.length) {\n        throw new Error('Content too long');\n      }\n\n      return type;\n    }\n\n\n\n    //Generate QR Code matrix\n    const content = this.options.content;\n    const type = _getTypeNumber(content, this.options.ecl);\n    const ecl = _getErrorCorrectLevel(this.options.ecl);\n    this.qrcode = new QRCodeModel(type, ecl);\n    this.qrcode.addData(content);\n    this.qrcode.make();\n  }\n\n  svg() {\n    const options = this.options;\n    const modules = this.qrcode.modules;\n\n    const qrSvg = new QGSvg(modules, {\n      size: options.size,\n      radiusFactor: options.radiusFactor,\n      roundExternalCorners: options.roundExternalCorners,\n      roundInternalCorners: options.roundInternalCorners,\n      cornerBlocksAsCircles: options.cornerBlocksAsCircles,\n      fill: options.fill,\n    });\n\n    return qrSvg.generate();\n\n    // const pretty = options.pretty;\n    // const indent = pretty ? '  ' : '';\n    // const EOL = pretty ? '\\r\\n' : '';\n    // const width = options.size;\n    // const height = options.size;\n    // const length = modules.length;\n    // const xsize = width / length;\n    // const ysize = height / length;\n    //\n    // //Apply <?xml...?> declaration in SVG?\n    // const xmlDeclaration = options.xmlDeclaration;\n    //\n    // //Rectangles representing modules\n    // let modrect = '';\n    //\n    // for (let y = 0; y < length; y++) {\n    //   for (let x = 0; x < length; x++) {\n    //     if (this.options.circleCorners) {\n    //       if ((x < 8 && y < 8) || (x > length - 8 && y < 8) || (x < 8 && y > length - 8)) {\n    //         continue;\n    //       }\n    //     }\n    //\n    //     const module = modules[x][y];\n    //     if (module) {\n    //       let px = x * xsize;\n    //       let py = y * ysize;\n    //\n    //       // Round corners checking neighbors\n    //       let nc1 = !(getProp(modules, [x - 1, y]) || getProp(modules, [x, y - 1]));\n    //       let nc2 = !(getProp(modules, [x + 1, y]) || getProp(modules, [x, y - 1]));\n    //       let nc3 = !(getProp(modules, [x + 1, y]) || getProp(modules, [x, y + 1]));\n    //       let nc4 = !(getProp(modules, [x - 1, y]) || getProp(modules, [x, y + 1]));\n    //\n    //       const rv = (v) => Math.floor(v * 100) / 100;\n    //\n    //       const rightRoundedRect = (x, y, width, height, radius, corners) => {\n    //         x = rv(x);\n    //         y = rv(y);\n    //         radius = rv(radius);\n    //\n    //         let result = 'M' + x + ',' + y;\n    //         result += 'h' + rv(width - corners[1] * radius);\n    //         if (corners[1]) {\n    //           result += 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius;\n    //         }\n    //         result += 'v' + rv(height - (corners[1] + corners[2]) * radius);\n    //         if (corners[2]) {\n    //           result += 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius;\n    //         }\n    //         result += 'h' + -1 * rv(width - (corners[2] + corners[3]) * radius);\n    //         if (corners[3]) {\n    //           result += 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius;\n    //         }\n    //         result += 'v' + -rv(height - (corners[3] + corners[0]) * radius);\n    //         if (corners[0]) {\n    //           result += 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n    //         }\n    //\n    //         result += 'z';\n    //\n    //         return result;\n    //       };\n    //\n    //       const r = this.options.dotRadius;\n    //       const radiusFactor = Math.max(100 / r, 2);\n    //       modrect +=\n    //         indent +\n    //         `<path d=\"${rightRoundedRect(\n    //           px - xsize * 0.025,\n    //           py - ysize * 0.025,\n    //           xsize + xsize * 0.05,\n    //           ysize + ysize * 0.05,\n    //           (xsize + xsize * 0.05) / radiusFactor,\n    //           [nc1, nc2, nc3, nc4],\n    //         )}\"/>${EOL}`;\n    //     }\n    //   }\n    // }\n    //\n    // let svg = '';\n    // if (xmlDeclaration) {\n    //   svg += `<?xml version=\"1.0\" standalone=\"yes\"?>${EOL}`;\n    // }\n    // svg += `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"${width}\" height=\"${height}\" fill=\"${options.color}\">${EOL}`;\n    //\n    // svg += modrect;\n    //\n    // /* Circles in corners */\n    //\n    // // prettier-ignore\n    // if (this.options.circleCorners) {\n    //   // TopLeft\n    //   svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n    //   svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\"/>`;\n    //\n    //   // TopRight\n    //   svg += `<circle cx=\"${length * xsize - (xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n    //   svg += `<circle cx=\"${length * xsize - (xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\"/>`;\n    //\n    //   // BottomLeft\n    //   svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${length * xsize - (xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n    //   svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${length * xsize - (xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\"/>`;\n    // }\n    //\n    // svg += '</svg>';\n    //\n    // return svg;\n  }\n}\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst GitHubLink = () => {\n  return (\n    <div className={styles.main}>\n      <a href=\"https://github.com/avin/sexy-qr\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <svg className={styles.octicon} viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n          />\n        </svg>\n      </a>\n    </div>\n  );\n};\nexport default GitHubLink;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport QrCode from 'sexy-qr';\nimport styles from './App.module.scss';\nimport GitHubLink from './GitHubLink/GitHubLink';\n\nconst App = () => {\n  const [content, setContent] = useState('https://github.com/avin/sexy-qr');\n  const [size, setSize] = useState('380');\n  const [color, setColor] = useState('#182026');\n  const [circles, setCircles] = useState('true');\n  const [ecl, setEcl] = useState('M');\n  const [radiusFactor, setRadiusFactor] = useState(0.7);\n\n  const handleChangeColor = useCallback((e) => {\n    setColor(e.target.value);\n  }, []);\n  const handleChangeCircles = useCallback((e) => {\n    setCircles(e.target.value);\n  }, []);\n  const handleChangeContent = useCallback((e) => {\n    setContent(e.target.value);\n  }, []);\n\n  const handleChangeSize = useCallback((e) => {\n    setSize(e.target.value);\n  }, []);\n\n  const handleChangeEcl = useCallback((e) => {\n    setEcl(e.target.value);\n  }, []);\n  const handleChangeRadiusFactor = useCallback((e) => {\n    setRadiusFactor(e.target.value);\n  }, []);\n\n  const svgCode = useMemo(() => {\n    if (!content) {\n      return null;\n    }\n    return new QrCode({\n      content,\n      ecl,\n      join: true,\n      fill: color,\n      cornerBlocksAsCircles: circles === 'true',\n      size: Number(size) || 1,\n      radiusFactor,\n    }).svg();\n  }, [content, ecl, radiusFactor, size, circles, color]);\n\n  const qrCodeSrc = useMemo(() => {\n    if (!svgCode) {\n      return null;\n    }\n    return `data:image/svg+xml;base64,${btoa(svgCode)}`;\n  }, [svgCode]);\n\n  const handleDownload = useCallback(() => {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(svgCode));\n    element.setAttribute('download', 'qrcode.svg');\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }, [svgCode]);\n\n  return (\n    <div>\n      <div className={styles.title}>\n        <a href=\"https://github.com/avin/sexy-qr\">Sexy-QR</a>\n      </div>\n\n      <div className={styles.container}>\n        <div className={styles.controls}>\n          <div style={{ width: '100%' }}>\n            <label htmlFor=\"content\">Content:</label>\n            <input\n              id=\"content\"\n              type=\"text\"\n              onChange={handleChangeContent}\n              value={content}\n              className={styles.input}\n              placeholder=\"Encoding string...\"\n            />\n          </div>\n        </div>\n\n        <div className={styles.controls}>\n          <div>\n            <label htmlFor=\"circles\">Circles:</label>\n            <select\n              name=\"circles\"\n              id=\"circles\"\n              className={styles.select}\n              onChange={handleChangeCircles}\n              value={circles}\n            >\n              <option value=\"true\">Yes</option>\n              <option value=\"false\">No</option>\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"ecl\">ECL:</label>\n            <select name=\"ecl\" id=\"ecl\" className={styles.select} onChange={handleChangeEcl} value={ecl}>\n              {['L', 'M', 'Q', 'H'].map((v) => (\n                <option value={v} key={v}>\n                  {v}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"radiusFactor\">RadiusFactor:</label>\n            <select\n              name=\"radiusFactor\"\n              id=\"radiusFactor\"\n              className={styles.select}\n              onChange={handleChangeRadiusFactor}\n              value={radiusFactor}\n            >\n              {[0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0].map((v) => (\n                <option value={v} key={v}>\n                  {v.toFixed(1)}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"size\">Size:</label>\n            <input\n              id=\"size\"\n              type=\"tel\"\n              onChange={handleChangeSize}\n              value={size}\n              className={styles.input}\n              placeholder=\"Size\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"color\">Color:</label>\n            <input\n              id=\"color\"\n              type=\"color\"\n              onChange={handleChangeColor}\n              value={color}\n              className={styles.input}\n              placeholder=\"#000\"\n            />\n          </div>\n        </div>\n\n        <div className={styles.imageContainer}>\n          {qrCodeSrc ? (\n            // <img src={qrCodeSrc} alt=\"QR\" className={styles.qr} />\n            <div>\n              <div dangerouslySetInnerHTML={{ __html: svgCode }} />\n\n              <div className={styles.downloadContainer}>\n                <button onClick={handleDownload} className={styles.downloadButton}>\n                  Download SVG\n                </button>\n              </div>\n            </div>\n          ) : (\n            <div className={styles.notice}>Type string to encode</div>\n          )}\n        </div>\n\n        <GitHubLink />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2C-7r\",\"container\":\"App_container__2i36C\",\"controls\":\"App_controls__26tu4\",\"label\":\"App_label__LI5Ny\",\"input\":\"App_input__1k4p7\",\"select\":\"App_select__3olHI\",\"imageContainer\":\"App_imageContainer__G3bKt\",\"notice\":\"App_notice__29bU7\",\"downloadContainer\":\"App_downloadContainer__3KHbY\",\"downloadButton\":\"App_downloadButton__3Zk_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__1dPbY\",\"octicon\":\"styles_octicon__u8VXb\"};"],"sourceRoot":""}