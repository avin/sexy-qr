{"version":3,"sources":["../../src/index.js","components/App/GitHubLink/GitHubLink.js","components/App/App.js","index.js","components/App/App.module.scss","components/App/GitHubLink/styles.module.scss"],"names":["getProp","object","keys","defaultVal","Array","isArray","split","length","slice","QR8bitByte","data","this","mode","QRMode","MODE_8BIT_BYTE","parsedData","i","l","byteArray","code","charCodeAt","push","prototype","concat","apply","unshift","QRCodeModel","typeNumber","errorCorrectLevel","modules","moduleCount","dataCache","dataList","getLength","buffer","write","put","addData","newData","isDark","row","col","Error","getModuleCount","make","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","c","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y","x","beginFill","moveTo","lineTo","endFill","pos","getPatternPosition","j","bits","getBCHTypeNumber","mod","Math","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","dark","getMask","PAD0","PAD1","rsBlocks","QRRSBlock","getRSBlocks","QRBitBuffer","getLengthInBits","totalDataCount","dataCount","putBit","createBytes","offset","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","totalCount","max","rsPoly","getErrorCorrectPolynomial","modPoly","QRPolynomial","modIndex","get","totalCodeCount","index","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","QRMath","gexp","type","qrCode","sameCount","count","darkCount","abs","glog","n","LOG_TABLE","EXP_TABLE","num","shift","undefined","e","ratio","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","bit","QRCodeLimitLength","QRCode","options","padding","width","height","color","background","ecl","content","result","encodeURI","toString","replace","limit","len","table","qrcode","svg","px","py","nc1","nc2","nc3","nc4","rv","pretty","indent","EOL","xsize","ysize","xmlDeclaration","modrect","v","radius","corners","GitHubLink","className","styles","main","href","target","rel","octicon","viewBox","version","aria-hidden","fillRule","App","useState","link","setLink","handleChangeLink","useCallback","value","qrCodeSrc","useMemo","btoa","QrCode","join","container","onChange","input","placeholder","imageContainer","src","alt","qr","notice","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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AAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,G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","file":"static/js/main.1da4577e.chunk.js","sourcesContent":["// Based on\n// https://github.com/papnkukn/qrcode-svg/blob/master/lib/qrcode.js\n\nfunction getProp(object, keys, defaultVal) {\n  keys = Array.isArray(keys) ? keys : keys.split('.');\n  object = object[keys[0]];\n  if (object && keys.length > 1) {\n    return getProp(object, keys.slice(1));\n  }\n  return object === undefined ? defaultVal : object;\n}\n\nfunction QR8bitByte(data) {\n  this.mode = QRMode.MODE_8BIT_BYTE;\n  this.data = data;\n  this.parsedData = [];\n\n  // Added to support UTF-8 Characters\n  let i = 0;\n  const l = this.data.length;\n  for (; i < l; i++) {\n    const byteArray = [];\n    const code = this.data.charCodeAt(i);\n\n    if (code > 0x10000) {\n      byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n      byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n      byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n      byteArray[3] = 0x80 | (code & 0x3f);\n    } else if (code > 0x800) {\n      byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n      byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n      byteArray[2] = 0x80 | (code & 0x3f);\n    } else if (code > 0x80) {\n      byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n      byteArray[1] = 0x80 | (code & 0x3f);\n    } else {\n      byteArray[0] = code;\n    }\n\n    this.parsedData.push(byteArray);\n  }\n\n  this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n  if (this.parsedData.length != this.data.length) {\n    this.parsedData.unshift(191);\n    this.parsedData.unshift(187);\n    this.parsedData.unshift(239);\n  }\n}\n\nQR8bitByte.prototype = {\n  getLength: function (buffer) {\n    return this.parsedData.length;\n  },\n  write: function (buffer) {\n    let i = 0;\n    const l = this.parsedData.length;\n    for (; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  },\n};\n\nfunction QRCodeModel(typeNumber, errorCorrectLevel) {\n  this.typeNumber = typeNumber;\n  this.errorCorrectLevel = errorCorrectLevel;\n  this.modules = null;\n  this.moduleCount = 0;\n  this.dataCache = null;\n  this.dataList = [];\n}\n\nQRCodeModel.prototype = {\n  addData: function (data) {\n    const newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  },\n  isDark: function (row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + ',' + col);\n    }\n    return this.modules[row][col];\n  },\n  getModuleCount: function () {\n    return this.moduleCount;\n  },\n  make: function () {\n    this.makeImpl(false, this.getBestMaskPattern());\n  },\n  makeImpl: function (test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for (let row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n      for (let col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null;\n      }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n    if (this.dataCache == null) {\n      this.dataCache = QRCodeModel.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n  },\n  setupPositionProbePattern: function (row, col) {\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n        if (\n          (0 <= r && r <= 6 && (c == 0 || c == 6)) ||\n          (0 <= c && c <= 6 && (r == 0 || r == 6)) ||\n          (2 <= r && r <= 4 && 2 <= c && c <= 4)\n        ) {\n          this.modules[row + r][col + c] = true;\n        } else {\n          this.modules[row + r][col + c] = false;\n        }\n      }\n    }\n  },\n  getBestMaskPattern: function () {\n    let minLostPoint = 0;\n    let pattern = 0;\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      const lostPoint = QRUtil.getLostPoint(this);\n      if (i == 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n    return pattern;\n  },\n  createMovieClip: function (target_mc, instance_name, depth) {\n    const qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    const cs = 1;\n    this.make();\n    for (let row = 0; row < this.modules.length; row++) {\n      const y = row * cs;\n      for (let col = 0; col < this.modules[row].length; col++) {\n        const x = col * cs;\n        const dark = this.modules[row][col];\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n    return qr_mc;\n  },\n  setupTimingPattern: function () {\n    for (let r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n      this.modules[r][6] = r % 2 == 0;\n    }\n    for (let c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n      this.modules[6][c] = c % 2 == 0;\n    }\n  },\n  setupPositionAdjustPattern: function () {\n    const pos = QRUtil.getPatternPosition(this.typeNumber);\n    for (let i = 0; i < pos.length; i++) {\n      for (let j = 0; j < pos.length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            if (r == -2 || r == 2 || c == -2 || c == 2 || (r == 0 && c == 0)) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  },\n  setupTypeNumber: function (test) {\n    const bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    for (var i = 0; i < 18; i++) {\n      var mod = !test && ((bits >> i) & 1) == 1;\n      this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = mod;\n    }\n    for (var i = 0; i < 18; i++) {\n      var mod = !test && ((bits >> i) & 1) == 1;\n      this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n    }\n  },\n  setupTypeInfo: function (test, maskPattern) {\n    const data = (this.errorCorrectLevel << 3) | maskPattern;\n    const bits = QRUtil.getBCHTypeInfo(data);\n    for (var i = 0; i < 15; i++) {\n      var mod = !test && ((bits >> i) & 1) == 1;\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    }\n    for (var i = 0; i < 15; i++) {\n      var mod = !test && ((bits >> i) & 1) == 1;\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    }\n    this.modules[this.moduleCount - 8][8] = !test;\n  },\n  mapData: function (data, maskPattern) {\n    let inc = -1;\n    let row = this.moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n    for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col == 6) col--;\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            let dark = false;\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) == 1;\n            }\n            const mask = QRUtil.getMask(maskPattern, row, col - c);\n            if (mask) {\n              dark = !dark;\n            }\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n            if (bitIndex == -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n        row += inc;\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  },\n};\nQRCodeModel.PAD0 = 0xec;\nQRCodeModel.PAD1 = 0x11;\nQRCodeModel.createData = function (typeNumber, errorCorrectLevel, dataList) {\n  const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n  const buffer = new QRBitBuffer();\n  for (var i = 0; i < dataList.length; i++) {\n    const data = dataList[i];\n    buffer.put(data.mode, 4);\n    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n    data.write(buffer);\n  }\n  let totalDataCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalDataCount += rsBlocks[i].dataCount;\n  }\n  if (buffer.getLengthInBits() > totalDataCount * 8) {\n    throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');\n  }\n  if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n    buffer.put(0, 4);\n  }\n  while (buffer.getLengthInBits() % 8 != 0) {\n    buffer.putBit(false);\n  }\n  while (true) {\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCodeModel.PAD0, 8);\n    if (buffer.getLengthInBits() >= totalDataCount * 8) {\n      break;\n    }\n    buffer.put(QRCodeModel.PAD1, 8);\n  }\n  return QRCodeModel.createBytes(buffer, rsBlocks);\n};\nQRCodeModel.createBytes = function (buffer, rsBlocks) {\n  let offset = 0;\n  let maxDcCount = 0;\n  let maxEcCount = 0;\n  const dcdata = new Array(rsBlocks.length);\n  const ecdata = new Array(rsBlocks.length);\n  for (var r = 0; r < rsBlocks.length; r++) {\n    const dcCount = rsBlocks[r].dataCount;\n    const ecCount = rsBlocks[r].totalCount - dcCount;\n    maxDcCount = Math.max(maxDcCount, dcCount);\n    maxEcCount = Math.max(maxEcCount, ecCount);\n    dcdata[r] = new Array(dcCount);\n    for (var i = 0; i < dcdata[r].length; i++) {\n      dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n    }\n    offset += dcCount;\n    const rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n    const rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n    const modPoly = rawPoly.mod(rsPoly);\n    ecdata[r] = new Array(rsPoly.getLength() - 1);\n    for (var i = 0; i < ecdata[r].length; i++) {\n      const modIndex = i + modPoly.getLength() - ecdata[r].length;\n      ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n    }\n  }\n  let totalCodeCount = 0;\n  for (var i = 0; i < rsBlocks.length; i++) {\n    totalCodeCount += rsBlocks[i].totalCount;\n  }\n  const data = new Array(totalCodeCount);\n  let index = 0;\n  for (var i = 0; i < maxDcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < dcdata[r].length) {\n        data[index++] = dcdata[r][i];\n      }\n    }\n  }\n  for (var i = 0; i < maxEcCount; i++) {\n    for (var r = 0; r < rsBlocks.length; r++) {\n      if (i < ecdata[r].length) {\n        data[index++] = ecdata[r][i];\n      }\n    }\n  }\n  return data;\n};\nvar QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n};\nconst QRErrorCorrectLevel = { L: 1, M: 0, Q: 3, H: 2 };\nconst QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n};\nvar QRUtil = {\n  PATTERN_POSITION_TABLE: [\n    [],\n    [6, 18],\n    [6, 22],\n    [6, 26],\n    [6, 30],\n    [6, 34],\n    [6, 22, 38],\n    [6, 24, 42],\n    [6, 26, 46],\n    [6, 28, 50],\n    [6, 30, 54],\n    [6, 32, 58],\n    [6, 34, 62],\n    [6, 26, 46, 66],\n    [6, 26, 48, 70],\n    [6, 26, 50, 74],\n    [6, 30, 54, 78],\n    [6, 30, 56, 82],\n    [6, 30, 58, 86],\n    [6, 34, 62, 90],\n    [6, 28, 50, 72, 94],\n    [6, 26, 50, 74, 98],\n    [6, 30, 54, 78, 102],\n    [6, 28, 54, 80, 106],\n    [6, 32, 58, 84, 110],\n    [6, 30, 58, 86, 114],\n    [6, 34, 62, 90, 118],\n    [6, 26, 50, 74, 98, 122],\n    [6, 30, 54, 78, 102, 126],\n    [6, 26, 52, 78, 104, 130],\n    [6, 30, 56, 82, 108, 134],\n    [6, 34, 60, 86, 112, 138],\n    [6, 30, 58, 86, 114, 142],\n    [6, 34, 62, 90, 118, 146],\n    [6, 30, 54, 78, 102, 126, 150],\n    [6, 24, 50, 76, 102, 128, 154],\n    [6, 28, 54, 80, 106, 132, 158],\n    [6, 32, 58, 84, 110, 136, 162],\n    [6, 26, 54, 82, 110, 138, 166],\n    [6, 30, 58, 86, 114, 142, 170],\n  ],\n  G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n  G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n  G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n  getBCHTypeInfo: function (data) {\n    let d = data << 10;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n      d ^= QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15));\n    }\n    return ((data << 10) | d) ^ QRUtil.G15_MASK;\n  },\n  getBCHTypeNumber: function (data) {\n    let d = data << 12;\n    while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n      d ^= QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18));\n    }\n    return (data << 12) | d;\n  },\n  getBCHDigit: function (data) {\n    let digit = 0;\n    while (data != 0) {\n      digit++;\n      data >>>= 1;\n    }\n    return digit;\n  },\n  getPatternPosition: function (typeNumber) {\n    return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n  },\n  getMask: function (maskPattern, i, j) {\n    switch (maskPattern) {\n      case QRMaskPattern.PATTERN000:\n        return (i + j) % 2 == 0;\n      case QRMaskPattern.PATTERN001:\n        return i % 2 == 0;\n      case QRMaskPattern.PATTERN010:\n        return j % 3 == 0;\n      case QRMaskPattern.PATTERN011:\n        return (i + j) % 3 == 0;\n      case QRMaskPattern.PATTERN100:\n        return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n      case QRMaskPattern.PATTERN101:\n        return ((i * j) % 2) + ((i * j) % 3) == 0;\n      case QRMaskPattern.PATTERN110:\n        return (((i * j) % 2) + ((i * j) % 3)) % 2 == 0;\n      case QRMaskPattern.PATTERN111:\n        return (((i * j) % 3) + ((i + j) % 2)) % 2 == 0;\n      default:\n        throw new Error('bad maskPattern:' + maskPattern);\n    }\n  },\n  getErrorCorrectPolynomial: function (errorCorrectLength) {\n    let a = new QRPolynomial([1], 0);\n    for (let i = 0; i < errorCorrectLength; i++) {\n      a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n    }\n    return a;\n  },\n  getLengthInBits: function (mode, type) {\n    if (1 <= type && type < 10) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 10;\n        case QRMode.MODE_ALPHA_NUM:\n          return 9;\n        case QRMode.MODE_8BIT_BYTE:\n          return 8;\n        case QRMode.MODE_KANJI:\n          return 8;\n        default:\n          throw new Error('mode:' + mode);\n      }\n    } else if (type < 27) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 12;\n        case QRMode.MODE_ALPHA_NUM:\n          return 11;\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n        case QRMode.MODE_KANJI:\n          return 10;\n        default:\n          throw new Error('mode:' + mode);\n      }\n    } else if (type < 41) {\n      switch (mode) {\n        case QRMode.MODE_NUMBER:\n          return 14;\n        case QRMode.MODE_ALPHA_NUM:\n          return 13;\n        case QRMode.MODE_8BIT_BYTE:\n          return 16;\n        case QRMode.MODE_KANJI:\n          return 12;\n        default:\n          throw new Error('mode:' + mode);\n      }\n    } else {\n      throw new Error('type:' + type);\n    }\n  },\n  getLostPoint: function (qrCode) {\n    const moduleCount = qrCode.getModuleCount();\n    let lostPoint = 0;\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount; col++) {\n        let sameCount = 0;\n        const dark = qrCode.isDark(row, col);\n        for (let r = -1; r <= 1; r++) {\n          if (row + r < 0 || moduleCount <= row + r) {\n            continue;\n          }\n          for (let c = -1; c <= 1; c++) {\n            if (col + c < 0 || moduleCount <= col + c) {\n              continue;\n            }\n            if (r == 0 && c == 0) {\n              continue;\n            }\n            if (dark == qrCode.isDark(row + r, col + c)) {\n              sameCount++;\n            }\n          }\n        }\n        if (sameCount > 5) {\n          lostPoint += 3 + sameCount - 5;\n        }\n      }\n    }\n    for (var row = 0; row < moduleCount - 1; row++) {\n      for (var col = 0; col < moduleCount - 1; col++) {\n        let count = 0;\n        if (qrCode.isDark(row, col)) count++;\n        if (qrCode.isDark(row + 1, col)) count++;\n        if (qrCode.isDark(row, col + 1)) count++;\n        if (qrCode.isDark(row + 1, col + 1)) count++;\n        if (count == 0 || count == 4) {\n          lostPoint += 3;\n        }\n      }\n    }\n    for (var row = 0; row < moduleCount; row++) {\n      for (var col = 0; col < moduleCount - 6; col++) {\n        if (\n          qrCode.isDark(row, col) &&\n          !qrCode.isDark(row, col + 1) &&\n          qrCode.isDark(row, col + 2) &&\n          qrCode.isDark(row, col + 3) &&\n          qrCode.isDark(row, col + 4) &&\n          !qrCode.isDark(row, col + 5) &&\n          qrCode.isDark(row, col + 6)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount - 6; row++) {\n        if (\n          qrCode.isDark(row, col) &&\n          !qrCode.isDark(row + 1, col) &&\n          qrCode.isDark(row + 2, col) &&\n          qrCode.isDark(row + 3, col) &&\n          qrCode.isDark(row + 4, col) &&\n          !qrCode.isDark(row + 5, col) &&\n          qrCode.isDark(row + 6, col)\n        ) {\n          lostPoint += 40;\n        }\n      }\n    }\n    let darkCount = 0;\n    for (var col = 0; col < moduleCount; col++) {\n      for (var row = 0; row < moduleCount; row++) {\n        if (qrCode.isDark(row, col)) {\n          darkCount++;\n        }\n      }\n    }\n    const ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n    lostPoint += ratio * 10;\n    return lostPoint;\n  },\n};\nvar QRMath = {\n  glog: function (n) {\n    if (n < 1) {\n      throw new Error('glog(' + n + ')');\n    }\n    return QRMath.LOG_TABLE[n];\n  },\n  gexp: function (n) {\n    while (n < 0) {\n      n += 255;\n    }\n    while (n >= 256) {\n      n -= 255;\n    }\n    return QRMath.EXP_TABLE[n];\n  },\n  EXP_TABLE: new Array(256),\n  LOG_TABLE: new Array(256),\n};\nfor (let i = 0; i < 8; i++) {\n  QRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (let i = 8; i < 256; i++) {\n  QRMath.EXP_TABLE[i] =\n    QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n}\nfor (let i = 0; i < 255; i++) {\n  QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\nfunction QRPolynomial(num, shift) {\n  if (num.length == undefined) {\n    throw new Error(num.length + '/' + shift);\n  }\n  let offset = 0;\n  while (offset < num.length && num[offset] == 0) {\n    offset++;\n  }\n  this.num = new Array(num.length - offset + shift);\n  for (let i = 0; i < num.length - offset; i++) {\n    this.num[i] = num[i + offset];\n  }\n}\nQRPolynomial.prototype = {\n  get: function (index) {\n    return this.num[index];\n  },\n  getLength: function () {\n    return this.num.length;\n  },\n  multiply: function (e) {\n    const num = new Array(this.getLength() + e.getLength() - 1);\n    for (let i = 0; i < this.getLength(); i++) {\n      for (let j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n      }\n    }\n    return new QRPolynomial(num, 0);\n  },\n  mod: function (e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n    const ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n    const num = new Array(this.getLength());\n    for (var i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n    for (var i = 0; i < e.getLength(); i++) {\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n    }\n    return new QRPolynomial(num, 0).mod(e);\n  },\n};\nfunction QRRSBlock(totalCount, dataCount) {\n  this.totalCount = totalCount;\n  this.dataCount = dataCount;\n}\nQRRSBlock.RS_BLOCK_TABLE = [\n  [1, 26, 19],\n  [1, 26, 16],\n  [1, 26, 13],\n  [1, 26, 9],\n  [1, 44, 34],\n  [1, 44, 28],\n  [1, 44, 22],\n  [1, 44, 16],\n  [1, 70, 55],\n  [1, 70, 44],\n  [2, 35, 17],\n  [2, 35, 13],\n  [1, 100, 80],\n  [2, 50, 32],\n  [2, 50, 24],\n  [4, 25, 9],\n  [1, 134, 108],\n  [2, 67, 43],\n  [2, 33, 15, 2, 34, 16],\n  [2, 33, 11, 2, 34, 12],\n  [2, 86, 68],\n  [4, 43, 27],\n  [4, 43, 19],\n  [4, 43, 15],\n  [2, 98, 78],\n  [4, 49, 31],\n  [2, 32, 14, 4, 33, 15],\n  [4, 39, 13, 1, 40, 14],\n  [2, 121, 97],\n  [2, 60, 38, 2, 61, 39],\n  [4, 40, 18, 2, 41, 19],\n  [4, 40, 14, 2, 41, 15],\n  [2, 146, 116],\n  [3, 58, 36, 2, 59, 37],\n  [4, 36, 16, 4, 37, 17],\n  [4, 36, 12, 4, 37, 13],\n  [2, 86, 68, 2, 87, 69],\n  [4, 69, 43, 1, 70, 44],\n  [6, 43, 19, 2, 44, 20],\n  [6, 43, 15, 2, 44, 16],\n  [4, 101, 81],\n  [1, 80, 50, 4, 81, 51],\n  [4, 50, 22, 4, 51, 23],\n  [3, 36, 12, 8, 37, 13],\n  [2, 116, 92, 2, 117, 93],\n  [6, 58, 36, 2, 59, 37],\n  [4, 46, 20, 6, 47, 21],\n  [7, 42, 14, 4, 43, 15],\n  [4, 133, 107],\n  [8, 59, 37, 1, 60, 38],\n  [8, 44, 20, 4, 45, 21],\n  [12, 33, 11, 4, 34, 12],\n  [3, 145, 115, 1, 146, 116],\n  [4, 64, 40, 5, 65, 41],\n  [11, 36, 16, 5, 37, 17],\n  [11, 36, 12, 5, 37, 13],\n  [5, 109, 87, 1, 110, 88],\n  [5, 65, 41, 5, 66, 42],\n  [5, 54, 24, 7, 55, 25],\n  [11, 36, 12],\n  [5, 122, 98, 1, 123, 99],\n  [7, 73, 45, 3, 74, 46],\n  [15, 43, 19, 2, 44, 20],\n  [3, 45, 15, 13, 46, 16],\n  [1, 135, 107, 5, 136, 108],\n  [10, 74, 46, 1, 75, 47],\n  [1, 50, 22, 15, 51, 23],\n  [2, 42, 14, 17, 43, 15],\n  [5, 150, 120, 1, 151, 121],\n  [9, 69, 43, 4, 70, 44],\n  [17, 50, 22, 1, 51, 23],\n  [2, 42, 14, 19, 43, 15],\n  [3, 141, 113, 4, 142, 114],\n  [3, 70, 44, 11, 71, 45],\n  [17, 47, 21, 4, 48, 22],\n  [9, 39, 13, 16, 40, 14],\n  [3, 135, 107, 5, 136, 108],\n  [3, 67, 41, 13, 68, 42],\n  [15, 54, 24, 5, 55, 25],\n  [15, 43, 15, 10, 44, 16],\n  [4, 144, 116, 4, 145, 117],\n  [17, 68, 42],\n  [17, 50, 22, 6, 51, 23],\n  [19, 46, 16, 6, 47, 17],\n  [2, 139, 111, 7, 140, 112],\n  [17, 74, 46],\n  [7, 54, 24, 16, 55, 25],\n  [34, 37, 13],\n  [4, 151, 121, 5, 152, 122],\n  [4, 75, 47, 14, 76, 48],\n  [11, 54, 24, 14, 55, 25],\n  [16, 45, 15, 14, 46, 16],\n  [6, 147, 117, 4, 148, 118],\n  [6, 73, 45, 14, 74, 46],\n  [11, 54, 24, 16, 55, 25],\n  [30, 46, 16, 2, 47, 17],\n  [8, 132, 106, 4, 133, 107],\n  [8, 75, 47, 13, 76, 48],\n  [7, 54, 24, 22, 55, 25],\n  [22, 45, 15, 13, 46, 16],\n  [10, 142, 114, 2, 143, 115],\n  [19, 74, 46, 4, 75, 47],\n  [28, 50, 22, 6, 51, 23],\n  [33, 46, 16, 4, 47, 17],\n  [8, 152, 122, 4, 153, 123],\n  [22, 73, 45, 3, 74, 46],\n  [8, 53, 23, 26, 54, 24],\n  [12, 45, 15, 28, 46, 16],\n  [3, 147, 117, 10, 148, 118],\n  [3, 73, 45, 23, 74, 46],\n  [4, 54, 24, 31, 55, 25],\n  [11, 45, 15, 31, 46, 16],\n  [7, 146, 116, 7, 147, 117],\n  [21, 73, 45, 7, 74, 46],\n  [1, 53, 23, 37, 54, 24],\n  [19, 45, 15, 26, 46, 16],\n  [5, 145, 115, 10, 146, 116],\n  [19, 75, 47, 10, 76, 48],\n  [15, 54, 24, 25, 55, 25],\n  [23, 45, 15, 25, 46, 16],\n  [13, 145, 115, 3, 146, 116],\n  [2, 74, 46, 29, 75, 47],\n  [42, 54, 24, 1, 55, 25],\n  [23, 45, 15, 28, 46, 16],\n  [17, 145, 115],\n  [10, 74, 46, 23, 75, 47],\n  [10, 54, 24, 35, 55, 25],\n  [19, 45, 15, 35, 46, 16],\n  [17, 145, 115, 1, 146, 116],\n  [14, 74, 46, 21, 75, 47],\n  [29, 54, 24, 19, 55, 25],\n  [11, 45, 15, 46, 46, 16],\n  [13, 145, 115, 6, 146, 116],\n  [14, 74, 46, 23, 75, 47],\n  [44, 54, 24, 7, 55, 25],\n  [59, 46, 16, 1, 47, 17],\n  [12, 151, 121, 7, 152, 122],\n  [12, 75, 47, 26, 76, 48],\n  [39, 54, 24, 14, 55, 25],\n  [22, 45, 15, 41, 46, 16],\n  [6, 151, 121, 14, 152, 122],\n  [6, 75, 47, 34, 76, 48],\n  [46, 54, 24, 10, 55, 25],\n  [2, 45, 15, 64, 46, 16],\n  [17, 152, 122, 4, 153, 123],\n  [29, 74, 46, 14, 75, 47],\n  [49, 54, 24, 10, 55, 25],\n  [24, 45, 15, 46, 46, 16],\n  [4, 152, 122, 18, 153, 123],\n  [13, 74, 46, 32, 75, 47],\n  [48, 54, 24, 14, 55, 25],\n  [42, 45, 15, 32, 46, 16],\n  [20, 147, 117, 4, 148, 118],\n  [40, 75, 47, 7, 76, 48],\n  [43, 54, 24, 22, 55, 25],\n  [10, 45, 15, 67, 46, 16],\n  [19, 148, 118, 6, 149, 119],\n  [18, 75, 47, 31, 76, 48],\n  [34, 54, 24, 34, 55, 25],\n  [20, 45, 15, 61, 46, 16],\n];\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n  const rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n  if (rsBlock == undefined) {\n    throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);\n  }\n  const length = rsBlock.length / 3;\n  const list = [];\n  for (let i = 0; i < length; i++) {\n    const count = rsBlock[i * 3 + 0];\n    const totalCount = rsBlock[i * 3 + 1];\n    const dataCount = rsBlock[i * 3 + 2];\n    for (let j = 0; j < count; j++) {\n      list.push(new QRRSBlock(totalCount, dataCount));\n    }\n  }\n  return list;\n};\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n  switch (errorCorrectLevel) {\n    case QRErrorCorrectLevel.L:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n    case QRErrorCorrectLevel.M:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n    case QRErrorCorrectLevel.Q:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n    case QRErrorCorrectLevel.H:\n      return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n    default:\n      return undefined;\n  }\n};\nfunction QRBitBuffer() {\n  this.buffer = [];\n  this.length = 0;\n}\nQRBitBuffer.prototype = {\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8);\n    return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) == 1;\n  },\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) == 1);\n    }\n  },\n  getLengthInBits: function () {\n    return this.length;\n  },\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  },\n};\nconst QRCodeLimitLength = [\n  [17, 14, 11, 7],\n  [32, 26, 20, 14],\n  [53, 42, 32, 24],\n  [78, 62, 46, 34],\n  [106, 84, 60, 44],\n  [134, 106, 74, 58],\n  [154, 122, 86, 64],\n  [192, 152, 108, 84],\n  [230, 180, 130, 98],\n  [271, 213, 151, 119],\n  [321, 251, 177, 137],\n  [367, 287, 203, 155],\n  [425, 331, 241, 177],\n  [458, 362, 258, 194],\n  [520, 412, 292, 220],\n  [586, 450, 322, 250],\n  [644, 504, 364, 280],\n  [718, 560, 394, 310],\n  [792, 624, 442, 338],\n  [858, 666, 482, 382],\n  [929, 711, 509, 403],\n  [1003, 779, 565, 439],\n  [1091, 857, 611, 461],\n  [1171, 911, 661, 511],\n  [1273, 997, 715, 535],\n  [1367, 1059, 751, 593],\n  [1465, 1125, 805, 625],\n  [1528, 1190, 868, 658],\n  [1628, 1264, 908, 698],\n  [1732, 1370, 982, 742],\n  [1840, 1452, 1030, 790],\n  [1952, 1538, 1112, 842],\n  [2068, 1628, 1168, 898],\n  [2188, 1722, 1228, 958],\n  [2303, 1809, 1283, 983],\n  [2431, 1911, 1351, 1051],\n  [2563, 1989, 1423, 1093],\n  [2699, 2099, 1499, 1139],\n  [2809, 2213, 1579, 1219],\n  [2953, 2331, 1663, 1273],\n];\n\n/** Constructor */\nfunction QRCode(options) {\n  const instance = this;\n\n  //Default options\n  this.options = {\n    padding: 0,\n    width: 256,\n    height: 256,\n    typeNumber: 4,\n    color: '#000000',\n    background: '#ffffff',\n    ecl: 'M',\n  };\n\n  //In case the options is string\n  if (typeof options === 'string') {\n    options = {\n      content: options,\n    };\n  }\n\n  //Merge options\n  if (options) {\n    for (var i in options) {\n      this.options[i] = options[i];\n    }\n  }\n\n  if (typeof this.options.content !== 'string') {\n    throw new Error(\"Expected 'content' as string!\");\n  }\n\n  if (this.options.content.length === 0 /* || this.options.content.length > 7089 */) {\n    throw new Error(\"Expected 'content' to be non-empty!\");\n  }\n\n  if (!(this.options.padding >= 0)) {\n    throw new Error(\"Expected 'padding' value to be non-negative!\");\n  }\n\n  if (!(this.options.width > 0) || !(this.options.height > 0)) {\n    throw new Error(\"Expected 'width' or 'height' value to be higher than zero!\");\n  }\n\n  //Gets the error correction level\n  function _getErrorCorrectLevel(ecl) {\n    switch (ecl) {\n      case 'L':\n        return QRErrorCorrectLevel.L;\n\n      case 'M':\n        return QRErrorCorrectLevel.M;\n\n      case 'Q':\n        return QRErrorCorrectLevel.Q;\n\n      case 'H':\n        return QRErrorCorrectLevel.H;\n\n      default:\n        throw new Error('Unknwon error correction level: ' + ecl);\n    }\n  }\n\n  //Get type number\n  function _getTypeNumber(content, ecl) {\n    const length = _getUTF8Length(content);\n\n    let type = 1;\n    let limit = 0;\n    let i = 0;\n    const len = QRCodeLimitLength.length;\n    for (; i <= len; i++) {\n      const table = QRCodeLimitLength[i];\n      if (!table) {\n        throw new Error('Content too long: expected ' + limit + ' but got ' + length);\n      }\n\n      switch (ecl) {\n        case 'L':\n          limit = table[0];\n          break;\n\n        case 'M':\n          limit = table[1];\n          break;\n\n        case 'Q':\n          limit = table[2];\n          break;\n\n        case 'H':\n          limit = table[3];\n          break;\n\n        default:\n          throw new Error('Unknwon error correction level: ' + ecl);\n      }\n\n      if (length <= limit) {\n        break;\n      }\n\n      type++;\n    }\n\n    if (type > QRCodeLimitLength.length) {\n      throw new Error('Content too long');\n    }\n\n    return type;\n  }\n\n  //Gets text length\n  function _getUTF8Length(content) {\n    const result = encodeURI(content)\n      .toString()\n      .replace(/\\%[0-9a-fA-F]{2}/g, 'a');\n    return result.length + (result.length != content ? 3 : 0);\n  }\n\n  //Generate QR Code matrix\n  var content = this.options.content;\n  var type = _getTypeNumber(content, this.options.ecl);\n  var ecl = _getErrorCorrectLevel(this.options.ecl);\n  this.qrcode = new QRCodeModel(type, ecl);\n  this.qrcode.addData(content);\n  this.qrcode.make();\n}\n\n/** Generates QR Code as SVG image */\nQRCode.prototype.svg = function () {\n  const options = this.options || {};\n  const modules = this.qrcode.modules;\n\n  //Apply new lines and indents in SVG?\n  const pretty = typeof options.pretty != 'undefined' ? !!options.pretty : true;\n\n  const indent = pretty ? '  ' : '';\n  const EOL = pretty ? '\\r\\n' : '';\n  const width = options.width;\n  const height = options.height;\n  const length = modules.length;\n  const xsize = width / length;\n  const ysize = height / length;\n\n  //Apply <?xml...?> declaration in SVG?\n  const xmlDeclaration = typeof options.xmlDeclaration != 'undefined' ? !!options.xmlDeclaration : true;\n\n  //Rectangles representing modules\n  let modrect = '';\n\n  for (let y = 0; y < length; y++) {\n    for (let x = 0; x < length; x++) {\n      // Пропускаем угловые большие квадраты\n      if ((x < 8 && y < 8) || (x > length - 8 && y < 8) || (x < 8 && y > length - 8)) {\n        continue;\n      }\n\n      const module = modules[x][y];\n      if (module) {\n        let px = x * xsize;\n        let py = y * ysize;\n\n        // Round corners checking neighbors\n        let nc1 = !(getProp(modules, [x - 1, y]) || getProp(modules, [x, y - 1]));\n        let nc2 = !(getProp(modules, [x + 1, y]) || getProp(modules, [x, y - 1]));\n        let nc3 = !(getProp(modules, [x + 1, y]) || getProp(modules, [x, y + 1]));\n        let nc4 = !(getProp(modules, [x - 1, y]) || getProp(modules, [x, y + 1]));\n\n        const rv = (v) => Math.floor(v * 100) / 100;\n\n        function rightRoundedRect(x, y, width, height, radius, corners) {\n          x = rv(x);\n          y = rv(y);\n          radius = rv(radius);\n\n          let result = 'M' + x + ',' + y;\n          result += 'h' + rv(width - corners[1] * radius);\n          if (corners[1]) {\n            result += 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius;\n          }\n          result += 'v' + rv(height - (corners[1] + corners[2]) * radius);\n          if (corners[2]) {\n            result += 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius;\n          }\n          result += 'h' + -1 * rv(width - (corners[2] + corners[3]) * radius);\n          if (corners[3]) {\n            result += 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius;\n          }\n          result += 'v' + -rv(height - (corners[3] + corners[0]) * radius);\n          if (corners[0]) {\n            result += 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n          }\n\n          result += 'z';\n\n          return result;\n        }\n\n        modrect +=\n          indent +\n          `<path d=\"${rightRoundedRect(\n            px - xsize * 0.025,\n            py - ysize * 0.025,\n            xsize + xsize * 0.05,\n            ysize + ysize * 0.05,\n            (xsize + xsize * 0.05) / 2,\n            [nc1, nc2, nc3, nc4],\n          )}\" fill=\"${options.color}\" />${EOL}`;\n      }\n    }\n  }\n\n  let svg = '';\n  if (xmlDeclaration) {\n    svg += '<?xml version=\"1.0\" standalone=\"yes\"?>' + EOL;\n  }\n  svg += '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"' + width + '\" height=\"' + height + '\">' + EOL;\n\n  svg += modrect;\n\n  /* Добавляем круги в три угла */\n\n  // TopLeft\n  // prettier-ignore\n  svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n  // prettier-ignore\n  svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"${options.color}\" />`;\n\n  // TopRight\n  // prettier-ignore\n  svg += `<circle cx=\"${length * xsize - (xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n  // prettier-ignore\n  svg += `<circle cx=\"${length * xsize - (xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"${options.color}\" />`;\n\n  // BottomLeft\n  // prettier-ignore\n  svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${length * xsize - (xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n  // prettier-ignore\n  svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${length * xsize - (xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"${options.color}\" />`;\n\n  svg += '</svg>';\n\n  return svg;\n};\n\nexport default QRCode;\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst GitHubLink = () => {\n  return (\n    <div className={styles.main}>\n      <a href=\"https://github.com/avin/sexy-qr\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <svg className={styles.octicon} viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n          />\n        </svg>\n      </a>\n    </div>\n  );\n};\nexport default GitHubLink;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport QrCode from 'sexy-qr';\nimport styles from './App.module.scss';\nimport GitHubLink from './GitHubLink/GitHubLink';\n\nconst App = () => {\n  const [link, setLink] = useState('https://github.com/avin/sexy-qr');\n\n  const handleChangeLink = useCallback((e) => {\n    setLink(e.target.value);\n  }, []);\n\n  const qrCodeSrc = useMemo(() => {\n    if (!link) {\n      return null;\n    }\n    return `data:image/svg+xml;base64,${btoa(\n      new QrCode({\n        content: link,\n        ecl: 'M',\n        join: true,\n        color: '#182026',\n        width: 380,\n        height: 380,\n      }).svg(),\n    )}`;\n  }, [link]);\n\n  return (\n    <div className={styles.container}>\n      <input\n        type=\"text\"\n        onChange={handleChangeLink}\n        value={link}\n        className={styles.input}\n        placeholder=\"Encoding string...\"\n      />\n      <div className={styles.imageContainer}>\n        {qrCodeSrc ? (\n          <img src={qrCodeSrc} alt=\"QR\" className={styles.qr} />\n        ) : (\n          <div className={styles.notice}>Type string to encode</div>\n        )}\n      </div>\n      <GitHubLink />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2i36C\",\"input\":\"App_input__1k4p7\",\"imageContainer\":\"App_imageContainer__G3bKt\",\"notice\":\"App_notice__29bU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__1dPbY\",\"octicon\":\"styles_octicon__u8VXb\"};"],"sourceRoot":""}