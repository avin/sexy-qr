{"version":3,"sources":["../../src/QR8bitByte.ts","../../src/QRMode.ts","../../src/QRRSBlock.ts","../../src/QRErrorCorrectLevel.ts","../../src/QRBitBuffer.ts","../../src/QRMath.ts","../../src/QRPolynomial.ts","../../src/QRUtil.ts","../../src/QRMaskPattern.ts","../../src/QRCodeModel.ts","../../src/QRCodeLimitLength.ts","../../src/utils.ts","../../src/QRCode.ts","components/App/GitHubLink/GitHubLink.js","components/App/App.js","index.js","components/App/App.module.scss","components/App/GitHubLink/styles.module.scss"],"names":["QR8bitByte","data","mode","parsedData","this","i","l","length","byteArray","code","charCodeAt","push","Array","prototype","concat","apply","unshift","getLength","write","buffer","put","QRRSBlock","totalCount","dataCount","getRSBlocks","typeNumber","errorCorrectLevel","rsBlock","getRsBlockTable","Error","list","count","j","RS_BLOCK_TABLE","QRBitBuffer","get","index","bufIndex","Math","floor","num","putBit","getLengthInBits","bit","EXP_TABLE","LOG_TABLE","glog","n","gexp","QRPolynomial","shift","offset","multiply","e","QRMath","mod","ratio","PATTERN_POSITION_TABLE","getBCHDigit","digit","getMask","maskPattern","getErrorCorrectPolynomial","errorCorrectLength","a","type","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","darkCount","abs","QRCodeModel","modules","dataCache","dataList","addData","newData","make","makeImpl","getBestMaskPattern","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","QRUtil","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y","x","beginFill","moveTo","lineTo","endFill","pos","bits","d","inc","bitIndex","byteIndex","rsBlocks","totalDataCount","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","modPoly","modIndex","totalCodeCount","QRCodeLimitLength","getProp","object","keys","defaultVal","isArray","split","slice","QRCode","options","padding","size","circleCorners","color","background","ecl","dotRadius","content","pretty","xmlDeclaration","qrcode","result","encodeURI","toString","replace","limit","len","table","svg","px","py","nc1","nc2","nc3","nc4","rv","indent","EOL","width","height","xsize","ysize","modrect","v","radius","corners","GitHubLink","className","styles","main","href","target","rel","octicon","viewBox","version","aria-hidden","fillRule","App","useState","link","setLink","setSize","setColor","circles","setCircles","setEcl","setDotRadius","handleChangeColor","useCallback","value","handleChangeCircles","handleChangeLink","handleChangeSize","handleChangeEcl","handleChangeDotRadius","qrCodeSrc","useMemo","btoa","QrCode","join","Number","title","container","controls","style","htmlFor","id","onChange","input","placeholder","name","select","map","imageContainer","src","alt","qr","notice","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"kMAEaA,aAOX,WAAYC,QANZC,KCAgB,ODEhBD,iBAEAE,WAAa,GAGXC,KAAKH,KAAOA,EAKZ,IAFA,IAAII,EAAI,EACFC,EAAIF,KAAKH,KAAKM,OACbF,EAAIC,EAAGD,IAAK,CACjB,IAAMG,EAAY,GACZC,EAAOL,KAAKH,KAAKS,WAAWL,GAE9BI,EAAO,OACTD,EAAU,GAAK,KAAgB,QAAPC,KAAqB,GAC7CD,EAAU,GAAK,KAAgB,OAAPC,KAAoB,GAC5CD,EAAU,GAAK,KAAgB,KAAPC,KAAkB,EAC1CD,EAAU,GAAK,IAAe,GAAPC,GACdA,EAAO,MAChBD,EAAU,GAAK,KAAgB,MAAPC,KAAmB,GAC3CD,EAAU,GAAK,KAAgB,KAAPC,KAAkB,EAC1CD,EAAU,GAAK,IAAe,GAAPC,GACdA,EAAO,KAChBD,EAAU,GAAK,KAAgB,KAAPC,KAAkB,EAC1CD,EAAU,GAAK,IAAe,GAAPC,GAEvBD,EAAU,GAAKC,EAGjBL,KAAKD,WAAWQ,KAAKH,GAGvBJ,KAAKD,WAAaS,MAAMC,UAAUC,OAAOC,MAAM,GAAIX,KAAKD,YAEpDC,KAAKD,WAAWI,SAAWH,KAAKH,KAAKM,SACvCH,KAAKD,WAAWa,QAAQ,KACxBZ,KAAKD,WAAWa,QAAQ,KACxBZ,KAAKD,WAAWa,QAAQ,MAzC9B,2BA6CEC,qBACE,YAAYd,WAAWI,UAGzBW,eAAMC,GAGJ,IAFA,IAAId,EAAI,EACFC,EAAIF,KAAKD,WAAWI,OACnBF,EAAIC,EAAGD,IACZc,EAAOC,IAAIhB,KAAKD,WAAWE,GAAI,MArDxBL,GEAAqB,aAIX,WAAYC,EAAYC,QAHxBD,uBACAC,iBAGEnB,KAAKkB,WAAaA,EAClBlB,KAAKmB,UAAYA,SANrBF,EA4KSG,YAAP,SAAmBC,EAAYC,GAC7B,IAAMC,EAAUN,EAAUO,gBAAgBH,EAAYC,GACtD,YAAIC,EACF,MAAM,IAAIE,MAAM,6BAA+BJ,EAAa,sBAAwBC,GAItF,IAFA,IAAMnB,EAASoB,EAAQpB,OAAS,EAC1BuB,EAAO,GACJzB,EAAI,EAAGA,EAAIE,EAAQF,IAI1B,IAHA,IAAM0B,EAAQJ,EAAY,EAAJtB,GAChBiB,EAAaK,EAAY,EAAJtB,EAAQ,GAC7BkB,EAAYI,EAAY,EAAJtB,EAAQ,GACzB2B,EAAI,EAAGA,EAAID,EAAOC,IACzBF,EAAKnB,KAAK,IAAIU,EAAUC,EAAYC,IAGxC,OAAOO,KAGFF,gBAAP,SAAuBH,EAAYC,GACjC,OAAQA,GACN,KCjMD,EDkMG,OAAOL,EAAUY,eAAkC,GAAlBR,EAAa,IAChD,KClMD,EDmMG,OAAOJ,EAAUY,eAAkC,GAAlBR,EAAa,GAAS,GACzD,KCnMD,EDoMG,OAAOJ,EAAUY,eAAkC,GAAlBR,EAAa,GAAS,GACzD,KCpMD,EDqMG,OAAOJ,EAAUY,eAAkC,GAAlBR,EAAa,GAAS,GACzD,QACE,WAzMKJ,KASJY,eAAiB,CACtB,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,IAAK,IACT,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GACR,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,IAAK,IACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,IAAK,IACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,IAAK,KACT,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,GAAI,EAAG,IAAK,IACrB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,EAAG,GAAI,IACnB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,SE3KZC,aAKX,kBAJAf,OAAS,QAETZ,OAAS,EAHX,2BAOE4B,aAAIC,GACF,IAAMC,EAAWC,KAAKC,MAAMH,EAAQ,GACpC,OAA+D,IAAtDhC,KAAKe,OAAOkB,KAAe,EAAKD,EAAQ,EAAO,MAG1DhB,aAAIoB,EAAKjC,GACP,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAC1BD,KAAKqC,OAA4C,IAAnCD,IAASjC,EAASF,EAAI,EAAM,OAI9CqC,2BACE,YAAYnC,UAGdkC,gBAAOE,GACL,IAAMN,EAAWC,KAAKC,MAAMnC,KAAKG,OAAS,GACtCH,KAAKe,OAAOZ,QAAU8B,GACxBjC,KAAKe,OAAOR,KAAK,GAEfgC,IACFvC,KAAKe,OAAOkB,IAAa,MAASjC,KAAKG,OAAS,GAElDH,KAAKG,YA9BI2B,GA8BJ3B,EC9B8B,WAIrC,IAHA,IAAMqC,EAAY,IAAIhC,MAAM,KACtBiC,EAAY,IAAIjC,MAAM,KAEnBP,EAAI,EAAGA,EAAI,EAAGA,IACrBuC,EAAUvC,GAAK,GAAKA,EAEtB,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,IACvBuC,EAAUvC,GAAKuC,EAAUvC,EAAI,GAAKuC,EAAUvC,EAAI,GAAKuC,EAAUvC,EAAI,GAAKuC,EAAUvC,EAAI,GAExF,IAAK,IAAIA,EAAI,EAAGA,EAAI,IAAKA,IACvBwC,EAAUD,EAAUvC,IAAMA,EAG5B,MAAO,CAACuC,EAAWC,GAdkB,GAAzBD,OAAWC,OAiBZC,EAAO,SAACC,GACnB,GAAIA,EAAI,EACN,MAAM,IAAIlB,MAAM,QAAUkB,EAAI,KAEhC,OAAOF,EAAUE,IAGNC,EAAO,SAACD,GACnB,KAAOA,EAAI,GACTA,GAAK,IAEP,KAAOA,GAAK,KACVA,GAAK,IAEP,OAAOH,EAAUG,IC7BNE,aAGX,WAAYT,EAAKU,GACf,QAHFV,oBAGMA,EAAIjC,OACN,MAAM,IAAIsB,MAAMW,EAAIjC,OAAS,IAAM2C,GAGrC,IADA,IAAIC,EAAS,EACNA,EAASX,EAAIjC,QAA0B,IAAhBiC,EAAIW,IAChCA,IAEF/C,KAAKoC,IAAM,IAAI5B,MAAM4B,EAAIjC,OAAS4C,EAASD,GAC3C,IAAK,IAAI7C,EAAI,EAAGA,EAAImC,EAAIjC,OAAS4C,EAAQ9C,IACvCD,KAAKoC,IAAInC,GAAKmC,EAAInC,EAAI8C,GAb5B,2BAiBEhB,aAAIC,GACF,YAAYI,IAAIJ,MAGlBnB,qBACE,YAAYuB,IAAIjC,UAGlB6C,kBAASC,GAEP,IADA,IAAMb,EAAM,IAAI5B,MAAMR,KAAKa,YAAcoC,EAAEpC,YAAc,GAChDZ,EAAI,EAAGA,EAAID,KAAKa,YAAaZ,IACpC,IAAK,IAAI2B,EAAI,EAAGA,EAAIqB,EAAEpC,YAAae,IACjCQ,EAAInC,EAAI2B,IAAMsB,EAAYA,EAAYlD,KAAK+B,IAAI9B,IAAMiD,EAAYD,EAAElB,IAAIH,KAG3E,WAAWiB,EAAaT,EAAK,MAG/Be,aAAIF,GACF,GAAIjD,KAAKa,YAAcoC,EAAEpC,YAAc,EACrC,OAAOb,KAIT,IAFA,IAAMoD,EAAQF,EAAYlD,KAAK+B,IAAI,IAAMmB,EAAYD,EAAElB,IAAI,IACrDK,EAAM,IAAI5B,MAAMR,KAAKa,aAClBZ,EAAI,EAAGA,EAAID,KAAKa,YAAaZ,IACpCmC,EAAInC,GAAKD,KAAK+B,IAAI9B,GAEpB,IAAK,IAAIA,EAAI,EAAGA,EAAIgD,EAAEpC,YAAaZ,IACjCmC,EAAInC,IAAMiD,EAAYA,EAAYD,EAAElB,IAAI9B,IAAMmD,GAEhD,WAAWP,EAAaT,EAAK,GAAGe,IAAIF,MA/C3BJ,GCGAQ,EAAyB,CACpC,GACA,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,IACJ,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,IACR,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,IACZ,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,IAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,KAChB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,KACpB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACrB,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,KAC1B,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MASfC,EAAc,SAACzD,GAE1B,IADA,IAAI0D,EAAQ,EACI,IAAT1D,GACL0D,IACA1D,KAAU,EAEZ,OAAO0D,GAuBIC,EAAU,SAACC,EAAaxD,EAAG2B,GACtC,OAAQ6B,GACN,KCpFU,EDqFR,OAAQxD,EAAI2B,GAAK,GAAM,EACzB,KCrFU,EDsFR,OAAO3B,EAAI,GAAM,EACnB,KCtFU,EDuFR,OAAO2B,EAAI,GAAM,EACnB,KCvFU,EDwFR,OAAQ3B,EAAI2B,GAAK,GAAM,EACzB,KCxFU,EDyFR,OAAQM,KAAKC,MAAMlC,EAAI,GAAKiC,KAAKC,MAAMP,EAAI,IAAM,GAAM,EACzD,KCzFU,ED0FR,OAAS3B,EAAI2B,EAAK,EAAO3B,EAAI2B,EAAK,GAAO,EAC3C,KC1FU,ED2FR,OAAU3B,EAAI2B,EAAK,EAAO3B,EAAI2B,EAAK,GAAM,GAAM,EACjD,KC3FU,ED4FR,OAAU3B,EAAI2B,EAAK,GAAO3B,EAAI2B,GAAK,GAAM,GAAM,EACjD,QACE,UAAUH,MAAM,mBAAqBgC,KAI9BC,EAA4B,SAACC,GAExC,IADA,IAAIC,EAAI,IAAIf,EAAa,CAAC,GAAI,GACrB5C,EAAI,EAAGA,EAAI0D,EAAoB1D,IACtC2D,EAAIA,EAAEZ,SAAS,IAAIH,EAAa,CAAC,EAAGK,EAAYjD,IAAK,IAEvD,OAAO2D,GAGItB,EAAkB,SAACxC,EAAM+D,GACpC,GAAI,GAAKA,GAAQA,EAAO,GACtB,OAAQ/D,GACN,KNpHS,EMqHP,UACF,KNrHY,EMsHV,SACF,KNtHY,EMwHZ,KNvHQ,EMwHN,SACF,QACE,UAAU2B,MAAM,QAAU3B,WAErB+D,EAAO,GAChB,OAAQ/D,GACN,KNjIS,EMkIP,UACF,KNlIY,EMmIV,UACF,KNnIY,EMoIV,UACF,KNpIQ,EMqIN,UACF,QACE,UAAU2B,MAAM,QAAU3B,aAErB+D,EAAO,IAchB,MAAM,IAAIpC,MAAM,QAAUoC,GAb1B,OAAQ/D,GACN,KN9IS,EM+IP,UACF,KN/IY,EMgJV,UACF,KNhJY,EMiJV,UACF,KNjJQ,EMkJN,UACF,QACE,UAAU2B,MAAM,QAAU3B,MAOrBgE,EAAe,SAACC,GAG3B,IAFA,IAAMC,EAAcD,EAAOE,iBACvBC,EAAY,EACPC,EAAM,EAAGA,EAAMH,EAAaG,IACnC,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAaI,IAAO,CAG1C,IAFA,IAAIC,EAAY,EACVC,EAAOP,EAAOQ,OAAOJ,EAAKC,GACvBI,GAAK,EAAGA,GAAK,EAAGA,IACvB,KAAIL,EAAMK,EAAI,GAAKR,GAAeG,EAAMK,GAGxC,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IACnBL,EAAMK,EAAI,GAAKT,GAAeI,EAAMK,GAG9B,IAAND,GAAiB,IAANC,GAGXH,IAASP,EAAOQ,OAAOJ,EAAMK,EAAGJ,EAAMK,IACxCJ,IAIFA,EAAY,IACdH,GAAa,EAAIG,EAAY,GAInC,IAAK,IAAIF,EAAM,EAAGA,EAAMH,EAAc,EAAGG,IACvC,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAc,EAAGI,IAAO,CAC9C,IAAIzC,EAAQ,EACRoC,EAAOQ,OAAOJ,EAAKC,IAAMzC,IACzBoC,EAAOQ,OAAOJ,EAAM,EAAGC,IAAMzC,IAC7BoC,EAAOQ,OAAOJ,EAAKC,EAAM,IAAIzC,IAC7BoC,EAAOQ,OAAOJ,EAAM,EAAGC,EAAM,IAAIzC,IACvB,IAAVA,GAAyB,IAAVA,IACjBuC,GAAa,GAInB,IAAK,IAAIC,EAAM,EAAGA,EAAMH,EAAaG,IACnC,IAAK,IAAIC,EAAM,EAAGA,EAAMJ,EAAc,EAAGI,IAErCL,EAAOQ,OAAOJ,EAAKC,KAClBL,EAAOQ,OAAOJ,EAAKC,EAAM,IAC1BL,EAAOQ,OAAOJ,EAAKC,EAAM,IACzBL,EAAOQ,OAAOJ,EAAKC,EAAM,IACzBL,EAAOQ,OAAOJ,EAAKC,EAAM,KACxBL,EAAOQ,OAAOJ,EAAKC,EAAM,IAC1BL,EAAOQ,OAAOJ,EAAKC,EAAM,KAEzBF,GAAa,IAInB,IAAK,IAAIE,EAAM,EAAGA,EAAMJ,EAAaI,IACnC,IAAK,IAAID,EAAM,EAAGA,EAAMH,EAAc,EAAGG,IAErCJ,EAAOQ,OAAOJ,EAAKC,KAClBL,EAAOQ,OAAOJ,EAAM,EAAGC,IACxBL,EAAOQ,OAAOJ,EAAM,EAAGC,IACvBL,EAAOQ,OAAOJ,EAAM,EAAGC,IACvBL,EAAOQ,OAAOJ,EAAM,EAAGC,KACtBL,EAAOQ,OAAOJ,EAAM,EAAGC,IACxBL,EAAOQ,OAAOJ,EAAM,EAAGC,KAEvBF,GAAa,IAKnB,IADA,IAAIQ,EAAY,EACPN,EAAM,EAAGA,EAAMJ,EAAaI,IACnC,IAAK,IAAID,EAAM,EAAGA,EAAMH,EAAaG,IAC/BJ,EAAOQ,OAAOJ,EAAKC,IACrBM,IAMN,OADAR,EADchC,KAAKyC,IAAK,IAAMD,EAAaV,EAAcA,EAAc,IAAM,EACxD,IErOVY,aAQX,WAAYvD,EAAYC,QAPxBD,uBACAC,8BACAuD,QAAU,UACVb,YAAc,OACdc,UAAY,UACZC,SAAW,GAGT/E,KAAKqB,WAAaA,EAClBrB,KAAKsB,kBAAoBA,EAV7B,2BAaE0D,iBAAQnF,GACN,IAAMoF,EAAU,IAAIrF,EAAWC,GAC/BG,KAAK+E,SAASxE,KAAK0E,GACnBjF,KAAK8E,UAAY,MAAAnC,EAGnB4B,gBAAOJ,EAAKC,GACV,GAAID,EAAM,GAAKnE,KAAKgE,aAAeG,GAAOC,EAAM,GAAKpE,KAAKgE,aAAeI,EACvE,MAAM,IAAI3C,MAAM0C,EAAM,IAAMC,GAE9B,YAAYS,QAAQV,GAAKC,MAG3BH,0BACE,YAAYD,eAGdkB,gBACElF,KAAKmF,YAAgBnF,KAAKoF,yBAG5BD,kBAASE,EAAM5B,GACbzD,KAAKgE,YAAgC,EAAlBhE,KAAKqB,WAAiB,GACzCrB,KAAK6E,QAAU,IAAIrE,MAAMR,KAAKgE,aAC9B,IAAK,IAAIG,EAAM,EAAGA,EAAMnE,KAAKgE,YAAaG,IAAO,CAC/CnE,KAAK6E,QAAQV,GAAO,IAAI3D,MAAMR,KAAKgE,aACnC,IAAK,IAAII,EAAM,EAAGA,EAAMpE,KAAKgE,YAAaI,IACxCpE,KAAK6E,QAAQV,GAAKC,GAAO,KAG7BpE,KAAKsF,0BAA0B,EAAG,GAClCtF,KAAKsF,0BAA0BtF,KAAKgE,YAAc,EAAG,GACrDhE,KAAKsF,0BAA0B,EAAGtF,KAAKgE,YAAc,GACrDhE,KAAKuF,6BACLvF,KAAKwF,qBACLxF,KAAKyF,cAAcJ,EAAM5B,GACrBzD,KAAKqB,YAAc,GACrBrB,KAAK0F,gBAAgBL,GAED,MAAlBrF,KAAK8E,YACP9E,KAAK8E,UAAY9E,KAAK2F,WAAW3F,KAAKqB,WAAYrB,KAAKsB,kBAAmBtB,KAAK+E,WAEjF/E,KAAK4F,QAAQ5F,KAAK8E,UAAWrB,MAG/B6B,mCAA0BnB,EAAKC,GAC7B,IAAK,IAAII,GAAK,EAAGA,GAAK,EAAGA,IACvB,KAAIL,EAAMK,IAAM,GAAKxE,KAAKgE,aAAeG,EAAMK,GAC/C,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IACnBL,EAAMK,IAAM,GAAKzE,KAAKgE,aAAeI,EAAMK,IAC/CzE,KAAK6E,QAAQV,EAAMK,GAAGJ,EAAMK,GACzB,GAAKD,GAAKA,GAAK,IAAY,IAANC,GAAiB,IAANA,IAChC,GAAKA,GAAKA,GAAK,IAAY,IAAND,GAAiB,IAANA,IAChC,GAAKA,GAAKA,GAAK,GAAK,GAAKC,GAAKA,GAAK,MAK5CW,8BAGE,IAFA,IAAIS,EAAe,EACfC,EAAU,EACL7F,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1BD,KAAKmF,YAAelF,GACpB,IAAMiE,EAAY6B,EAAoB/F,OAC5B,IAANC,GAAW4F,EAAe3B,KAC5B2B,EAAe3B,EACf4B,EAAU7F,GAGd,OAAO6F,KAGTE,yBAAgBC,EAAWC,EAAeC,GACxC,IAAMC,EAAQH,EAAUI,qBAAqBH,EAAeC,GAE5DnG,KAAKkF,OACL,IAAK,IAAIf,EAAM,EAAGA,EAAMnE,KAAK6E,QAAQ1E,OAAQgE,IAE3C,IADA,IAAMmC,EAHG,EAGCnC,EACDC,EAAM,EAAGA,EAAMpE,KAAK6E,QAAQV,GAAKhE,OAAQiE,IAAO,CACvD,IAAMmC,EALC,EAKGnC,EACGpE,KAAK6E,QAAQV,GAAKC,KAE7BgC,EAAMI,UAAU,EAAG,KACnBJ,EAAMK,OAAOF,EAAGD,GAChBF,EAAMM,OAAOH,EAVR,EAUgBD,GACrBF,EAAMM,OAAOH,EAXR,EAWgBD,EAXhB,GAYLF,EAAMM,OAAOH,EAAGD,EAZX,GAaLF,EAAMO,WAIZ,OAAOP,KAGTZ,8BACE,IAAK,IAAIhB,EAAI,EAAGA,EAAIxE,KAAKgE,YAAc,EAAGQ,IACd,MAAtBxE,KAAK6E,QAAQL,GAAG,KAGpBxE,KAAK6E,QAAQL,GAAG,GAAKA,EAAI,GAAM,GAEjC,IAAK,IAAIC,EAAI,EAAGA,EAAIzE,KAAKgE,YAAc,EAAGS,IACd,MAAtBzE,KAAK6E,QAAQ,GAAGJ,KAGpBzE,KAAK6E,QAAQ,GAAGJ,GAAKA,EAAI,GAAM,MAInCc,sCAEE,IADA,IAAMqB,EFpDDvD,EEoDiCrD,KAAKqB,WFpDF,GEqDhCpB,EAAI,EAAGA,EAAI2G,EAAIzG,OAAQF,IAC9B,IAAK,IAAI2B,EAAI,EAAGA,EAAIgF,EAAIzG,OAAQyB,IAAK,CACnC,IAAMuC,EAAMyC,EAAI3G,GACVmE,EAAMwC,EAAIhF,GAChB,GAA8B,MAA1B5B,KAAK6E,QAAQV,GAAKC,GAGtB,IAAK,IAAII,GAAK,EAAGA,GAAK,EAAGA,IACvB,IAAK,IAAIC,GAAK,EAAGA,GAAK,EAAGA,IAErBzE,KAAK6E,QAAQV,EAAMK,GAAGJ,EAAMK,IADnB,IAAPD,GAAkB,IAANA,IAAkB,IAAPC,GAAkB,IAANA,GAAkB,IAAND,GAAiB,IAANC,MAWxEiB,yBAAgBL,GAEd,IADA,IAAMwB,EFnFsB,SAAChH,GAE/B,IADA,IAAIiH,EAAIjH,GAAQ,GACTyD,EAAYwD,GAAKxD,EAvBN,OAuB0B,GAC1CwD,GAxBgB,MAwBHxD,EAAYwD,GAAKxD,EAxBd,MA0BlB,OAAQzD,GAAQ,GAAMiH,EALQ,CEmFS9G,KAAKqB,YACjCpB,EAAI,EAAGA,EAAI,GAAIA,IACtBD,KAAK6E,QAAQ3C,KAAKC,MAAMlC,EAAI,IAAKA,EAAI,EAAKD,KAAKgE,YAAc,EAAI,IAAMqB,GAA8B,IAApBwB,GAAQ5G,EAAK,GAEhG,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACtBD,KAAK6E,QAAS5E,EAAI,EAAKD,KAAKgE,YAAc,EAAI,GAAG9B,KAAKC,MAAMlC,EAAI,KAAOoF,GAA8B,IAApBwB,GAAQ5G,EAAK,MAIlGwF,uBAAcJ,EAAM5B,GAGlB,IAFA,IACMoD,EFtGoB,SAAChH,GAE7B,IADA,IAAIiH,EAAIjH,GAAQ,GACTyD,EAAYwD,GAAKxD,EAjBN,OAiB0B,GAC1CwD,GAlBgB,MAkBHxD,EAAYwD,GAAKxD,EAlBd,MAoBlB,OAhBuB,OAgBdzD,GAAQ,GAAMiH,GALK,CEqGZ9G,KAAKsB,mBAAqB,EAAKmC,GAEpCxD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMkD,GAAOkC,GAA8B,IAApBwB,GAAQ5G,EAAK,GAChCA,EAAI,EACND,KAAK6E,QAAQ5E,GAAG,GAAKkD,EACZlD,EAAI,EACbD,KAAK6E,QAAQ5E,EAAI,GAAG,GAAKkD,EAEzBnD,KAAK6E,QAAQ7E,KAAKgE,YAAc,GAAK/D,GAAG,GAAKkD,EAGjD,IAAK,IAAIlD,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIkD,GAAOkC,GAA8B,IAApBwB,GAAQ5G,EAAK,GAC9BA,EAAI,EACND,KAAK6E,QAAQ,GAAG7E,KAAKgE,YAAc/D,EAAI,GAAKkD,EACnClD,EAAI,EACbD,KAAK6E,QAAQ,GAAG,GAAK5E,EAAI,EAAI,GAAKkD,EAElCnD,KAAK6E,QAAQ,GAAG,GAAK5E,EAAI,GAAKkD,EAGlCnD,KAAK6E,QAAQ7E,KAAKgE,YAAc,GAAG,IAAMqB,KAG3CO,iBAAQ/F,EAAM4D,GAKZ,IAJA,IAAIsD,GAAO,EACP5C,EAAMnE,KAAKgE,YAAc,EACzBgD,EAAW,EACXC,EAAY,EACP7C,EAAMpE,KAAKgE,YAAc,EAAGI,EAAM,EAAGA,GAAO,EAEnD,IADY,IAARA,GAAWA,MACF,CACX,IAAK,IAAIK,EAAI,EAAGA,EAAI,EAAGA,IACrB,GAAkC,MAA9BzE,KAAK6E,QAAQV,GAAKC,EAAMK,GAAY,CACtC,IAAIH,KACA2C,EAAYpH,EAAKM,SACnBmE,EAAgD,IAAvCzE,EAAKoH,KAAeD,EAAY,IAE9BjB,EAAetC,EAAaU,EAAKC,EAAMK,KAElDH,GAAQA,GAEVtE,KAAK6E,QAAQV,GAAKC,EAAMK,GAAKH,GAEX,KADlB0C,IAEEC,IACAD,EAAW,GAKjB,IADA7C,GAAO4C,GACG,GAAK/G,KAAKgE,aAAeG,EAAK,CACtCA,GAAO4C,EACPA,GAAOA,EACP,WAMRpB,oBAAWtE,EAAYC,EAAmByD,GAGxC,IAFA,IAAMmC,EAAWjG,EAAUG,YAAYC,EAAYC,GAC7CP,EAAS,IAAIe,EACV7B,EAAI,EAAGA,EAAI8E,EAAS5E,OAAQF,IAAK,CACxC,IAAMJ,EAAOkF,EAAS9E,GACtBc,EAAOC,IAAInB,EAAKC,KAAM,GACtBiB,EAAOC,IAAInB,EAAKgB,YAAakF,EAAuBlG,EAAKC,KAAMuB,IAC/DxB,EAAKiB,MAAMC,GAGb,IADA,IAAIoG,EAAiB,EACZlH,EAAI,EAAGA,EAAIiH,EAAS/G,OAAQF,IACnCkH,GAAkBD,EAASjH,GAAGkB,UAEhC,GAAIJ,EAAOuB,kBAAqC,EAAjB6E,EAC7B,MAAM,IAAI1F,MAAM,0BAA4BV,EAAOuB,kBAAoB,IAAuB,EAAjB6E,EAAqB,KAKpG,IAHIpG,EAAOuB,kBAAoB,GAAsB,EAAjB6E,GAClCpG,EAAOC,IAAI,EAAG,GAETD,EAAOuB,kBAAoB,GAAM,GACtCvB,EAAOsB,WAET,OACMtB,EAAOuB,mBAAsC,EAAjB6E,IAGhCpG,EAAOC,IArPA,IAqPU,GACbD,EAAOuB,mBAAsC,EAAjB6E,KAGhCpG,EAAOC,IAxPA,GAwPU,GAEnB,YAAYoG,YAAYrG,EAAQmG,MAGlCE,qBAAYrG,EAAQmG,GAMlB,IALA,IAAInE,EAAS,EACTsE,EAAa,EACbC,EAAa,EACXC,EAAS,IAAI/G,MAAM0G,EAAS/G,QAC5BqH,EAAS,IAAIhH,MAAM0G,EAAS/G,QACzBqE,EAAI,EAAGA,EAAI0C,EAAS/G,OAAQqE,IAAK,CACxC,IAAMiD,EAAUP,EAAS1C,GAAGrD,UACtBuG,EAAUR,EAAS1C,GAAGtD,WAAauG,EACzCJ,EAAanF,KAAKyF,IAAIN,EAAYI,GAClCH,EAAapF,KAAKyF,IAAIL,EAAYI,GAClCH,EAAO/C,GAAK,IAAIhE,MAAMiH,GACtB,IAAK,IAAIxH,EAAI,EAAGA,EAAIsH,EAAO/C,GAAGrE,OAAQF,IACpCsH,EAAO/C,GAAGvE,GAAK,IAAOc,EAAOA,OAAOd,EAAI8C,GAE1CA,GAAU0E,EACV,IAAMG,EAAS7B,EAAiC2B,GAE1CG,EADU,IAAIhF,EAAa0E,EAAO/C,GAAIoD,EAAO/G,YAAc,GACzCsC,IAAIyE,GAC5BJ,EAAOhD,GAAK,IAAIhE,MAAMoH,EAAO/G,YAAc,GAC3C,IAAK,IAAIZ,EAAI,EAAGA,EAAIuH,EAAOhD,GAAGrE,OAAQF,IAAK,CACzC,IAAM6H,EAAW7H,EAAI4H,EAAQhH,YAAc2G,EAAOhD,GAAGrE,OACrDqH,EAAOhD,GAAGvE,GAAK6H,GAAY,EAAID,EAAQ9F,IAAI+F,GAAY,GAI3D,IADA,IAAIC,EAAiB,EACZ9H,EAAI,EAAGA,EAAIiH,EAAS/G,OAAQF,IACnC8H,GAAkBb,EAASjH,GAAGiB,WAIhC,IAFA,IAAMrB,EAAO,IAAIW,MAAMuH,GACnB/F,EAAQ,EACH/B,EAAI,EAAGA,EAAIoH,EAAYpH,IAC9B,IAAK,IAAIuE,EAAI,EAAGA,EAAI0C,EAAS/G,OAAQqE,IAC/BvE,EAAIsH,EAAO/C,GAAGrE,SAChBN,EAAKmC,KAAWuF,EAAO/C,GAAGvE,IAIhC,IAAK,IAAIA,EAAI,EAAGA,EAAIqH,EAAYrH,IAC9B,IAAK,IAAIuE,EAAI,EAAGA,EAAI0C,EAAS/G,OAAQqE,IAC/BvE,EAAIuH,EAAOhD,GAAGrE,SAChBN,EAAKmC,KAAWwF,EAAOhD,GAAGvE,IAIhC,OAAOJ,KAxSE+E,GCTAoD,EAAoB,CAC/B,CAAC,GAAI,GAAI,GAAI,GACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,GAAI,GAAI,GAAI,IACb,CAAC,IAAK,GAAI,GAAI,IACd,CAAC,IAAK,IAAK,GAAI,IACf,CAAC,IAAK,IAAK,GAAI,IACf,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,KAAM,IAAK,IAAK,KACjB,CAAC,KAAM,IAAK,IAAK,KACjB,CAAC,KAAM,IAAK,IAAK,KACjB,CAAC,KAAM,IAAK,IAAK,KACjB,CAAC,KAAM,KAAM,IAAK,KAClB,CAAC,KAAM,KAAM,IAAK,KAClB,CAAC,KAAM,KAAM,IAAK,KAClB,CAAC,KAAM,KAAM,IAAK,KAClB,CAAC,KAAM,KAAM,IAAK,KAClB,CAAC,KAAM,KAAM,KAAM,KACnB,CAAC,KAAM,KAAM,KAAM,KACnB,CAAC,KAAM,KAAM,KAAM,KACnB,CAAC,KAAM,KAAM,KAAM,KACnB,CAAC,KAAM,KAAM,KAAM,KACnB,CAAC,KAAM,KAAM,KAAM,MACnB,CAAC,KAAM,KAAM,KAAM,MACnB,CAAC,KAAM,KAAM,KAAM,MACnB,CAAC,KAAM,KAAM,KAAM,MACnB,CAAC,KAAM,KAAM,KAAM,gBCxCLC,EAAQC,EAAQC,EAAMC,GAGpC,gBAHoCA,eAEpCF,EAASA,GADTC,EAAO3H,MAAM6H,QAAQF,GAAQA,EAAOA,EAAKG,MAAM,MAC1B,MACPH,EAAKhI,OAAS,EACnB8H,EAAQC,EAAQC,EAAKI,MAAM,aAE7BL,EAAuBE,EAAaF,ECDhCM,iBAkBX,WAAYC,GAWV,QA5BFA,QAAU,CACRC,QAAS,EACTC,KAAM,IACNC,iBACAvH,WAAY,EACZwH,MAAO,UACPC,WAAY,UACZC,IAAK,IACLC,UAAW,GACXC,QAAS,GAETC,UACAC,mBAAgB,KAGlBC,cAMyB,iBAAZX,IACTA,EAAU,CACRQ,QAASR,IAKTA,EACF,IAAK,IAAIxI,KAAKwI,EACZzI,KAAKyI,QAAQxI,GAAKwI,EAAQxI,GAI9B,GAAoC,sBAApBwI,QAAQQ,QACtB,MAAM,IAAIxH,MAAM,iCAGlB,GAAoC,IAAhCzB,KAAKyI,QAAQQ,QAAQ9I,OACvB,MAAM,IAAIsB,MAAM,uCAGlB,KAAMzB,KAAKyI,QAAQC,SAAW,GAC5B,MAAM,IAAIjH,MAAM,gDAGlB,KAAMzB,KAAKyI,QAAQE,KAAO,GACxB,MAAM,IAAIlH,MAAM,6DAiFlB,IAAIwH,EAAUjJ,KAAKyI,QAAQQ,QACvBpF,EA1DJ,SAAwBoF,EAASF,GAO/B,IANA,IAAM5I,EAgDR,SAAwB8I,GACtB,IAAMI,EAASC,UAAUL,GACtBM,WACAC,QAAQ,mBAAoB,KAC/B,OAAOH,EAAOlJ,QAAUkJ,EAAOlJ,SAAW8I,EAAU,EAAI,GAJ1D,CAhDgCA,GAE1BpF,EAAO,EACP4F,EAAQ,EACRxJ,EAAI,EACFyJ,EAAM1B,EAAkB7H,OACvBF,GAAKyJ,EAAKzJ,IAAK,CACpB,IAAM0J,EAAQ3B,EAAkB/H,GAChC,IAAK0J,EACH,MAAM,IAAIlI,MAAM,8BAAgCgI,EAAQ,YAActJ,GAGxE,OAAQ4I,GACN,IAAK,IACHU,EAAQE,EAAM,GACd,MAEF,IAAK,IACHF,EAAQE,EAAM,GACd,MAEF,IAAK,IACHF,EAAQE,EAAM,GACd,MAEF,IAAK,IACHF,EAAQE,EAAM,GACd,MAEF,QACE,UAAUlI,MAAM,mCAAqCsH,GAGzD,GAAI5I,GAAUsJ,EACZ,MAGF5F,IAGF,GAAIA,EAAOmE,EAAkB7H,OAC3B,MAAM,IAAIsB,MAAM,oBAGlB,OAAOoC,EA7CT,CA0D0BoF,EAASjJ,KAAKyI,QAAQM,KAC5CA,EA/EJ,SAA+BA,GAC7B,OAAQA,GACN,IAAK,IACH,OT3DL,ES6DG,IAAK,IACH,OT7DL,ES+DG,IAAK,IACH,OT/DL,ESiEG,IAAK,IACH,OTjEL,ESmEG,QACE,UAAUtH,MAAM,mCAAqCsH,IAf3D,CA+EgC/I,KAAKyI,QAAQM,KAC7C/I,KAAKoJ,OAAS,IAAIxE,EAAYf,EAAMkF,GACpC/I,KAAKoJ,OAAOpE,QAAQiE,GACpBjJ,KAAKoJ,OAAOlE,0BAGd0E,eAqBE,QAUUC,EACAC,EAGAC,EACAC,EACAC,EACAC,EAEEC,EAvCN1B,EAAUzI,KAAKyI,QACf5D,EAAU7E,KAAKoJ,OAAOvE,QAGtBqE,WAAgBT,EAAQS,UAA0BT,EAAQS,OAE1DkB,EAASlB,EAAS,KAAO,GACzBmB,EAAMnB,EAAS,OAAS,GACxBoB,EAAQ7B,EAAQE,KAChB4B,EAAS9B,EAAQE,KACjBxI,EAAS0E,EAAQ1E,OACjBqK,EAAQF,EAAQnK,EAChBsK,EAAQF,EAASpK,EAGjBgJ,EAAiBV,EAAQU,eAG3BuB,EAAU,GAELpE,EAAI,EAAGA,EAAInG,EAAQmG,IAC1B,IAAK,IAAIC,EAAI,EAAGA,EAAIpG,EAAQoG,IACtBvG,KAAKyI,QAAQG,gBACVrC,EAAI,GAAKD,EAAI,GAAOC,EAAIpG,EAAS,GAAKmG,EAAI,GAAOC,EAAI,GAAKD,EAAInG,EAAS,IAK/D0E,EAAQ0B,GAAGD,KAEpBuD,EAAKtD,EAAIiE,EACTV,EAAKxD,EAAImE,EAGTV,IAAQ9B,EAAQpD,EAAS,CAAC0B,EAAI,EAAGD,KAAO2B,EAAQpD,EAAS,CAAC0B,EAAGD,EAAI,KACjE0D,IAAQ/B,EAAQpD,EAAS,CAAC0B,EAAI,EAAGD,KAAO2B,EAAQpD,EAAS,CAAC0B,EAAGD,EAAI,KACjE2D,IAAQhC,EAAQpD,EAAS,CAAC0B,EAAI,EAAGD,KAAO2B,EAAQpD,EAAS,CAAC0B,EAAGD,EAAI,KACjE4D,IAAQjC,EAAQpD,EAAS,CAAC0B,EAAI,EAAGD,KAAO2B,EAAQpD,EAAS,CAAC0B,EAAGD,EAAI,KAE/D6D,EAAK,SAACQ,UAAMzI,KAAKC,MAAU,IAAJwI,GAAW,KAgCxCD,GACEN,cA/BuB,SAAC7D,EAAGD,EAAGgE,EAAOC,EAAQK,EAAQC,GACrDtE,EAAI4D,EAAG5D,GACPD,EAAI6D,EAAG7D,GACPsE,EAAST,EAAGS,GAEZ,IAAIvB,EAAS,IAAM9C,EAAI,IAAMD,EAoB7B,OAnBA+C,GAAU,IAAMc,EAAGG,EAAQO,EAAQ,GAAKD,GACpCC,EAAQ,KACVxB,GAAU,IAAMuB,EAAS,IAAMA,EAAS,UAAYA,EAAS,IAAMA,GAErEvB,GAAU,IAAMc,EAAGI,GAAUM,EAAQ,GAAKA,EAAQ,IAAMD,GACpDC,EAAQ,KACVxB,GAAU,IAAMuB,EAAS,IAAMA,EAAS,WAAaA,EAAS,IAAMA,GAEtEvB,GAAU,KAAO,EAAIc,EAAGG,GAASO,EAAQ,GAAKA,EAAQ,IAAMD,GACxDC,EAAQ,KACVxB,GAAU,IAAMuB,EAAS,IAAMA,EAAS,WAAaA,EAAS,KAAOA,GAEvEvB,GAAU,KAAOc,EAAGI,GAAUM,EAAQ,GAAKA,EAAQ,IAAMD,GACrDC,EAAQ,KACVxB,GAAU,IAAMuB,EAAS,IAAMA,EAAS,UAAYA,EAAS,KAAOA,GAGtEvB,EAAU,IAvBa,CAiCrBQ,EAAa,KAARW,EACLV,EAAa,KAARW,EACLD,EAAgB,IAARA,EACRC,EAAgB,IAARA,GACPD,EAAgB,IAARA,GARQtI,KAAKyF,IAAI,IAAM,KADrBc,QAAQO,UACgB,GASnC,CAACe,EAAKC,EAAKC,EAAKC,UACXG,GAKf,IAAIT,EAAM,GA2BV,OA1BIT,IACFS,4CAAgDS,GAElDT,mEAAuEU,eAAkBC,aAAiB9B,EAAQI,WAAUwB,EAE5HT,GAAOc,EAKH1K,KAAKyI,QAAQG,gBAEfgB,kBAA+B,EAARY,EAAa,WAAmB,EAARA,EAAa,UAAkB,EAARA,eAAuB/B,EAAQI,yBAAwB2B,qBAC7HZ,kBAA+B,EAARY,EAAa,WAAmB,EAARA,EAAa,UAAUA,eAAmB/B,EAAQI,yBAAwB2B,QAGzHZ,mBAAsBzJ,EAASqK,EAAiB,EAARA,EAAa,YAAmB,EAARA,EAAa,UAAkB,EAARA,eAAuB/B,EAAQI,yBAAwB2B,qBAC9IZ,mBAAsBzJ,EAASqK,EAAiB,EAARA,EAAa,YAAmB,EAARA,EAAa,UAAUA,eAAmB/B,EAAQI,yBAAwB2B,QAG1IZ,kBAA+B,EAARY,EAAa,YAAUrK,EAASqK,EAAiB,EAARA,EAAa,WAAkB,EAARA,eAAuB/B,EAAQI,yBAAwB2B,qBAC9IZ,kBAA+B,EAARY,EAAa,YAAUrK,EAASqK,EAAiB,EAARA,EAAa,WAAUA,eAAmB/B,EAAQI,yBAAwB2B,SAG5IZ,EAAO,YAxPEpB,G,uCCYEsC,EAdI,WACjB,OACE,qBAAKC,UAAWC,IAAOC,KAAvB,SACE,mBAAGC,KAAK,kCAAkCC,OAAO,SAASC,IAAI,sBAA9D,SACE,qBAAKL,UAAWC,IAAOK,QAASC,QAAQ,YAAYC,QAAQ,MAAMC,cAAY,OAA9E,SACE,sBACEC,SAAS,UACT3E,EAAE,skBCqJC4E,EA1JH,WAAO,IAAD,EACQC,mBAAS,mCADjB,mBACTC,EADS,KACHC,EADG,OAEQF,mBAAS,OAFjB,mBAEThD,EAFS,KAEHmD,EAFG,OAGUH,mBAAS,WAHnB,mBAGT9C,EAHS,KAGFkD,EAHE,OAIcJ,mBAAS,QAJvB,mBAITK,EAJS,KAIAC,EAJA,OAKMN,mBAAS,KALf,mBAKT5C,EALS,KAKJmD,EALI,OAMkBP,mBAAS,IAN3B,mBAMT3C,EANS,KAMEmD,EANF,KAQVC,EAAoBC,uBAAY,SAACpJ,GACrC8I,EAAS9I,EAAEkI,OAAOmB,SACjB,IACGC,EAAsBF,uBAAY,SAACpJ,GACvCgJ,EAAWhJ,EAAEkI,OAAOmB,SACnB,IACGE,EAAmBH,uBAAY,SAACpJ,GACpC4I,EAAQ5I,EAAEkI,OAAOmB,SAChB,IAEGG,EAAmBJ,uBAAY,SAACpJ,GACpC6I,EAAQ7I,EAAEkI,OAAOmB,SAChB,IAEGI,EAAkBL,uBAAY,SAACpJ,GACnCiJ,EAAOjJ,EAAEkI,OAAOmB,SACf,IACGK,EAAwBN,uBAAY,SAACpJ,GACzCkJ,EAAalJ,EAAEkI,OAAOmB,SACrB,IAEGM,EAAYC,mBAAQ,WACxB,OAAKjB,EAGC,6BAAN,OAAoCkB,KAClC,IAAIC,EAAO,CACT9D,QAAS2C,EACT7C,IAAKA,EACLiE,MAAM,EACNnE,MAAOA,EACPD,cAA2B,SAAZoD,EACfrD,KAAMsE,OAAOtE,IAAS,EACtBK,UAAWA,IACVY,QAXI,OAaR,CAACgC,EAAM7C,EAAKC,EAAWL,EAAMqD,EAASnD,IAEzC,OACE,gCACE,qBAAKkC,UAAWC,IAAOkC,MAAvB,SACE,mBAAGhC,KAAK,kCAAR,uBAGF,sBAAKH,UAAWC,IAAOmC,UAAvB,UACE,qBAAKpC,UAAWC,IAAOoC,SAAvB,SACE,sBAAKC,MAAO,CAAE/C,MAAO,QAArB,UACE,uBAAOgD,QAAQ,OAAf,mBACA,uBACEC,GAAG,OACH1J,KAAK,OACL2J,SAAUhB,EACVF,MAAOV,EACPb,UAAWC,IAAOyC,MAClBC,YAAY,4BAKlB,sBAAK3C,UAAWC,IAAOoC,SAAvB,UACE,gCACE,uBAAOE,QAAQ,UAAf,sBACA,yBACEK,KAAK,UACLJ,GAAG,UACHxC,UAAWC,IAAO4C,OAClBJ,SAAUjB,EACVD,MAAON,EALT,UAOE,wBAAQM,MAAM,OAAd,iBACA,wBAAQA,MAAM,QAAd,sBAIJ,gCACE,uBAAOgB,QAAQ,MAAf,kBACA,wBACEK,KAAK,MACLJ,GAAG,MACHxC,UAAWC,IAAO4C,OAClBJ,SAAUd,EACVJ,MAAOvD,EALT,SAOG,CAAC,IAAK,IAAK,IAAK,KAAK8E,KAAI,SAAClD,GAAD,OACxB,wBAAQ2B,MAAO3B,EAAf,SACGA,GADoBA,WAO7B,gCACE,uBAAO2C,QAAQ,YAAf,wBACA,wBACEK,KAAK,YACLJ,GAAG,YACHxC,UAAWC,IAAO4C,OAClBJ,SAAUb,EACVL,MAAOtD,EALT,SAOG,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI6E,KAAI,SAAClD,GAAD,OAC9C,wBAAQ2B,MAAO3B,EAAf,SACGA,GADoBA,WAO7B,gCACE,uBAAO2C,QAAQ,OAAf,mBACA,uBACEC,GAAG,OACH1J,KAAK,MACL2J,SAAUf,EACVH,MAAO3D,EACPoC,UAAWC,IAAOyC,MAClBC,YAAY,YAGhB,gCACE,uBAAOJ,QAAQ,QAAf,oBACA,uBACEC,GAAG,QACH1J,KAAK,QACL2J,SAAUpB,EACVE,MAAOzD,EACPkC,UAAWC,IAAOyC,MAClBC,YAAY,eAKlB,qBAAK3C,UAAWC,IAAO8C,eAAvB,SACGlB,EACC,qBAAKmB,IAAKnB,EAAWoB,IAAI,KAAKjD,UAAWC,IAAOiD,KAEhD,qBAAKlD,UAAWC,IAAOkD,OAAvB,qCAIJ,cAAC,EAAD,WCpJRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,MAAQ,mBAAmB,UAAY,uBAAuB,SAAW,sBAAsB,MAAQ,mBAAmB,MAAQ,mBAAmB,OAAS,oBAAoB,eAAiB,4BAA4B,OAAS,sB,kBCA1PD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,QAAU,2B","file":"static/js/main.7a2f9af4.chunk.js","sourcesContent":["import { QRMode } from './QRMode';\n\nexport class QR8bitByte {\n  mode = QRMode.MODE_8BIT_BYTE;\n\n  data: string;\n\n  parsedData = [];\n\n  constructor(data) {\n    this.data = data;\n\n    // Added to support UTF-8 Characters\n    let i = 0;\n    const l = this.data.length;\n    for (; i < l; i++) {\n      const byteArray = [];\n      const code = this.data.charCodeAt(i);\n\n      if (code > 0x10000) {\n        byteArray[0] = 0xf0 | ((code & 0x1c0000) >>> 18);\n        byteArray[1] = 0x80 | ((code & 0x3f000) >>> 12);\n        byteArray[2] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[3] = 0x80 | (code & 0x3f);\n      } else if (code > 0x800) {\n        byteArray[0] = 0xe0 | ((code & 0xf000) >>> 12);\n        byteArray[1] = 0x80 | ((code & 0xfc0) >>> 6);\n        byteArray[2] = 0x80 | (code & 0x3f);\n      } else if (code > 0x80) {\n        byteArray[0] = 0xc0 | ((code & 0x7c0) >>> 6);\n        byteArray[1] = 0x80 | (code & 0x3f);\n      } else {\n        byteArray[0] = code;\n      }\n\n      this.parsedData.push(byteArray);\n    }\n\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n    if (this.parsedData.length !== this.data.length) {\n      this.parsedData.unshift(191);\n      this.parsedData.unshift(187);\n      this.parsedData.unshift(239);\n    }\n  }\n\n  getLength() {\n    return this.parsedData.length;\n  }\n\n  write(buffer) {\n    let i = 0;\n    const l = this.parsedData.length;\n    for (; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  }\n}\n","export const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n};\n\nexport type QRMode = typeof QRMode[keyof typeof QRMode];\n","import { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\n\nexport class QRRSBlock {\n  totalCount!: number;\n  dataCount!: number;\n\n  constructor(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n  }\n\n  static RS_BLOCK_TABLE = [\n    [1, 26, 19],\n    [1, 26, 16],\n    [1, 26, 13],\n    [1, 26, 9],\n    [1, 44, 34],\n    [1, 44, 28],\n    [1, 44, 22],\n    [1, 44, 16],\n    [1, 70, 55],\n    [1, 70, 44],\n    [2, 35, 17],\n    [2, 35, 13],\n    [1, 100, 80],\n    [2, 50, 32],\n    [2, 50, 24],\n    [4, 25, 9],\n    [1, 134, 108],\n    [2, 67, 43],\n    [2, 33, 15, 2, 34, 16],\n    [2, 33, 11, 2, 34, 12],\n    [2, 86, 68],\n    [4, 43, 27],\n    [4, 43, 19],\n    [4, 43, 15],\n    [2, 98, 78],\n    [4, 49, 31],\n    [2, 32, 14, 4, 33, 15],\n    [4, 39, 13, 1, 40, 14],\n    [2, 121, 97],\n    [2, 60, 38, 2, 61, 39],\n    [4, 40, 18, 2, 41, 19],\n    [4, 40, 14, 2, 41, 15],\n    [2, 146, 116],\n    [3, 58, 36, 2, 59, 37],\n    [4, 36, 16, 4, 37, 17],\n    [4, 36, 12, 4, 37, 13],\n    [2, 86, 68, 2, 87, 69],\n    [4, 69, 43, 1, 70, 44],\n    [6, 43, 19, 2, 44, 20],\n    [6, 43, 15, 2, 44, 16],\n    [4, 101, 81],\n    [1, 80, 50, 4, 81, 51],\n    [4, 50, 22, 4, 51, 23],\n    [3, 36, 12, 8, 37, 13],\n    [2, 116, 92, 2, 117, 93],\n    [6, 58, 36, 2, 59, 37],\n    [4, 46, 20, 6, 47, 21],\n    [7, 42, 14, 4, 43, 15],\n    [4, 133, 107],\n    [8, 59, 37, 1, 60, 38],\n    [8, 44, 20, 4, 45, 21],\n    [12, 33, 11, 4, 34, 12],\n    [3, 145, 115, 1, 146, 116],\n    [4, 64, 40, 5, 65, 41],\n    [11, 36, 16, 5, 37, 17],\n    [11, 36, 12, 5, 37, 13],\n    [5, 109, 87, 1, 110, 88],\n    [5, 65, 41, 5, 66, 42],\n    [5, 54, 24, 7, 55, 25],\n    [11, 36, 12],\n    [5, 122, 98, 1, 123, 99],\n    [7, 73, 45, 3, 74, 46],\n    [15, 43, 19, 2, 44, 20],\n    [3, 45, 15, 13, 46, 16],\n    [1, 135, 107, 5, 136, 108],\n    [10, 74, 46, 1, 75, 47],\n    [1, 50, 22, 15, 51, 23],\n    [2, 42, 14, 17, 43, 15],\n    [5, 150, 120, 1, 151, 121],\n    [9, 69, 43, 4, 70, 44],\n    [17, 50, 22, 1, 51, 23],\n    [2, 42, 14, 19, 43, 15],\n    [3, 141, 113, 4, 142, 114],\n    [3, 70, 44, 11, 71, 45],\n    [17, 47, 21, 4, 48, 22],\n    [9, 39, 13, 16, 40, 14],\n    [3, 135, 107, 5, 136, 108],\n    [3, 67, 41, 13, 68, 42],\n    [15, 54, 24, 5, 55, 25],\n    [15, 43, 15, 10, 44, 16],\n    [4, 144, 116, 4, 145, 117],\n    [17, 68, 42],\n    [17, 50, 22, 6, 51, 23],\n    [19, 46, 16, 6, 47, 17],\n    [2, 139, 111, 7, 140, 112],\n    [17, 74, 46],\n    [7, 54, 24, 16, 55, 25],\n    [34, 37, 13],\n    [4, 151, 121, 5, 152, 122],\n    [4, 75, 47, 14, 76, 48],\n    [11, 54, 24, 14, 55, 25],\n    [16, 45, 15, 14, 46, 16],\n    [6, 147, 117, 4, 148, 118],\n    [6, 73, 45, 14, 74, 46],\n    [11, 54, 24, 16, 55, 25],\n    [30, 46, 16, 2, 47, 17],\n    [8, 132, 106, 4, 133, 107],\n    [8, 75, 47, 13, 76, 48],\n    [7, 54, 24, 22, 55, 25],\n    [22, 45, 15, 13, 46, 16],\n    [10, 142, 114, 2, 143, 115],\n    [19, 74, 46, 4, 75, 47],\n    [28, 50, 22, 6, 51, 23],\n    [33, 46, 16, 4, 47, 17],\n    [8, 152, 122, 4, 153, 123],\n    [22, 73, 45, 3, 74, 46],\n    [8, 53, 23, 26, 54, 24],\n    [12, 45, 15, 28, 46, 16],\n    [3, 147, 117, 10, 148, 118],\n    [3, 73, 45, 23, 74, 46],\n    [4, 54, 24, 31, 55, 25],\n    [11, 45, 15, 31, 46, 16],\n    [7, 146, 116, 7, 147, 117],\n    [21, 73, 45, 7, 74, 46],\n    [1, 53, 23, 37, 54, 24],\n    [19, 45, 15, 26, 46, 16],\n    [5, 145, 115, 10, 146, 116],\n    [19, 75, 47, 10, 76, 48],\n    [15, 54, 24, 25, 55, 25],\n    [23, 45, 15, 25, 46, 16],\n    [13, 145, 115, 3, 146, 116],\n    [2, 74, 46, 29, 75, 47],\n    [42, 54, 24, 1, 55, 25],\n    [23, 45, 15, 28, 46, 16],\n    [17, 145, 115],\n    [10, 74, 46, 23, 75, 47],\n    [10, 54, 24, 35, 55, 25],\n    [19, 45, 15, 35, 46, 16],\n    [17, 145, 115, 1, 146, 116],\n    [14, 74, 46, 21, 75, 47],\n    [29, 54, 24, 19, 55, 25],\n    [11, 45, 15, 46, 46, 16],\n    [13, 145, 115, 6, 146, 116],\n    [14, 74, 46, 23, 75, 47],\n    [44, 54, 24, 7, 55, 25],\n    [59, 46, 16, 1, 47, 17],\n    [12, 151, 121, 7, 152, 122],\n    [12, 75, 47, 26, 76, 48],\n    [39, 54, 24, 14, 55, 25],\n    [22, 45, 15, 41, 46, 16],\n    [6, 151, 121, 14, 152, 122],\n    [6, 75, 47, 34, 76, 48],\n    [46, 54, 24, 10, 55, 25],\n    [2, 45, 15, 64, 46, 16],\n    [17, 152, 122, 4, 153, 123],\n    [29, 74, 46, 14, 75, 47],\n    [49, 54, 24, 10, 55, 25],\n    [24, 45, 15, 46, 46, 16],\n    [4, 152, 122, 18, 153, 123],\n    [13, 74, 46, 32, 75, 47],\n    [48, 54, 24, 14, 55, 25],\n    [42, 45, 15, 32, 46, 16],\n    [20, 147, 117, 4, 148, 118],\n    [40, 75, 47, 7, 76, 48],\n    [43, 54, 24, 22, 55, 25],\n    [10, 45, 15, 67, 46, 16],\n    [19, 148, 118, 6, 149, 119],\n    [18, 75, 47, 31, 76, 48],\n    [34, 54, 24, 34, 55, 25],\n    [20, 45, 15, 61, 46, 16],\n  ];\n\n  static getRSBlocks(typeNumber, errorCorrectLevel) {\n    const rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n    if (rsBlock === undefined) {\n      throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);\n    }\n    const length = rsBlock.length / 3;\n    const list = [];\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n      for (let j = 0; j < count; j++) {\n        list.push(new QRRSBlock(totalCount, dataCount));\n      }\n    }\n    return list;\n  }\n\n  static getRsBlockTable(typeNumber, errorCorrectLevel) {\n    switch (errorCorrectLevel) {\n      case QRErrorCorrectLevel.L:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4];\n      case QRErrorCorrectLevel.M:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectLevel.Q:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectLevel.H:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default:\n        return undefined;\n    }\n  }\n}\n","export const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n};\n\nexport type QRErrorCorrectLevel = typeof QRErrorCorrectLevel[keyof typeof QRErrorCorrectLevel];\n","export class QRBitBuffer {\n  buffer = [];\n\n  length = 0;\n\n  constructor() {}\n\n  get(index) {\n    const bufIndex = Math.floor(index / 8);\n    return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) === 1;\n  }\n\n  put(num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  getLengthInBits() {\n    return this.length;\n  }\n\n  putBit(bit) {\n    const bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  }\n}\n","export const [EXP_TABLE, LOG_TABLE] = (() => {\n  const EXP_TABLE = new Array(256);\n  const LOG_TABLE = new Array(256);\n\n  for (let i = 0; i < 8; i++) {\n    EXP_TABLE[i] = 1 << i;\n  }\n  for (let i = 8; i < 256; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n  }\n  for (let i = 0; i < 255; i++) {\n    LOG_TABLE[EXP_TABLE[i]] = i;\n  }\n\n  return [EXP_TABLE, LOG_TABLE];\n})();\n\nexport const glog = (n) => {\n  if (n < 1) {\n    throw new Error('glog(' + n + ')');\n  }\n  return LOG_TABLE[n];\n};\n\nexport const gexp = (n) => {\n  while (n < 0) {\n    n += 255;\n  }\n  while (n >= 256) {\n    n -= 255;\n  }\n  return EXP_TABLE[n];\n};\n","import * as QRMath from './QRMath';\n\nexport class QRPolynomial {\n  num: number[];\n\n  constructor(num, shift) {\n    if (num.length === undefined) {\n      throw new Error(num.length + '/' + shift);\n    }\n    let offset = 0;\n    while (offset < num.length && num[offset] === 0) {\n      offset++;\n    }\n    this.num = new Array(num.length - offset + shift);\n    for (let i = 0; i < num.length - offset; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  get(index) {\n    return this.num[index];\n  }\n\n  getLength() {\n    return this.num.length;\n  }\n\n  multiply(e) {\n    const num = new Array(this.getLength() + e.getLength() - 1);\n    for (let i = 0; i < this.getLength(); i++) {\n      for (let j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n      }\n    }\n    return new QRPolynomial(num, 0);\n  }\n\n  mod(e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n    const ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n    const num = new Array(this.getLength());\n    for (let i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n    for (let i = 0; i < e.getLength(); i++) {\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n    }\n    return new QRPolynomial(num, 0).mod(e);\n  }\n}\n","import { QRMaskPattern } from './QRMaskPattern';\nimport { QRPolynomial } from './QRPolynomial';\nimport { QRMode } from './QRMode';\nimport * as QRMath from './QRMath';\n\nexport const PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\n\nexport const G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n\nexport const G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n\nexport const G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\nexport const getBCHDigit = (data) => {\n  let digit = 0;\n  while (data !== 0) {\n    digit++;\n    data >>>= 1;\n  }\n  return digit;\n};\n\nexport const getBCHTypeInfo = (data) => {\n  let d = data << 10;\n  while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n    d ^= G15 << (getBCHDigit(d) - getBCHDigit(G15));\n  }\n  return ((data << 10) | d) ^ G15_MASK;\n};\n\nexport const getBCHTypeNumber = (data) => {\n  let d = data << 12;\n  while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n    d ^= G18 << (getBCHDigit(d) - getBCHDigit(G18));\n  }\n  return (data << 12) | d;\n};\n\nexport const getPatternPosition = (typeNumber) => {\n  return PATTERN_POSITION_TABLE[typeNumber - 1];\n};\n\nexport const getMask = (maskPattern, i, j) => {\n  switch (maskPattern) {\n    case QRMaskPattern.PATTERN000:\n      return (i + j) % 2 === 0;\n    case QRMaskPattern.PATTERN001:\n      return i % 2 === 0;\n    case QRMaskPattern.PATTERN010:\n      return j % 3 === 0;\n    case QRMaskPattern.PATTERN011:\n      return (i + j) % 3 === 0;\n    case QRMaskPattern.PATTERN100:\n      return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN101:\n      return ((i * j) % 2) + ((i * j) % 3) === 0;\n    case QRMaskPattern.PATTERN110:\n      return (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN111:\n      return (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n    default:\n      throw new Error('bad maskPattern:' + maskPattern);\n  }\n};\n\nexport const getErrorCorrectPolynomial = (errorCorrectLength) => {\n  let a = new QRPolynomial([1], 0);\n  for (let i = 0; i < errorCorrectLength; i++) {\n    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n  }\n  return a;\n};\n\nexport const getLengthInBits = (mode, type) => {\n  if (1 <= type && type < 10) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 10;\n      case QRMode.MODE_ALPHA_NUM:\n        return 9;\n      case QRMode.MODE_8BIT_BYTE:\n        return 8;\n      case QRMode.MODE_KANJI:\n        return 8;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 27) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 12;\n      case QRMode.MODE_ALPHA_NUM:\n        return 11;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 10;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 41) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 14;\n      case QRMode.MODE_ALPHA_NUM:\n        return 13;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 12;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else {\n    throw new Error('type:' + type);\n  }\n};\n\nexport const getLostPoint = (qrCode) => {\n  const moduleCount = qrCode.getModuleCount();\n  let lostPoint = 0;\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount; col++) {\n      let sameCount = 0;\n      const dark = qrCode.isDark(row, col);\n      for (let r = -1; r <= 1; r++) {\n        if (row + r < 0 || moduleCount <= row + r) {\n          continue;\n        }\n        for (let c = -1; c <= 1; c++) {\n          if (col + c < 0 || moduleCount <= col + c) {\n            continue;\n          }\n          if (r === 0 && c === 0) {\n            continue;\n          }\n          if (dark === qrCode.isDark(row + r, col + c)) {\n            sameCount++;\n          }\n        }\n      }\n      if (sameCount > 5) {\n        lostPoint += 3 + sameCount - 5;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount - 1; row++) {\n    for (let col = 0; col < moduleCount - 1; col++) {\n      let count = 0;\n      if (qrCode.isDark(row, col)) count++;\n      if (qrCode.isDark(row + 1, col)) count++;\n      if (qrCode.isDark(row, col + 1)) count++;\n      if (qrCode.isDark(row + 1, col + 1)) count++;\n      if (count === 0 || count === 4) {\n        lostPoint += 3;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount - 6; col++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row, col + 1) &&\n        qrCode.isDark(row, col + 2) &&\n        qrCode.isDark(row, col + 3) &&\n        qrCode.isDark(row, col + 4) &&\n        !qrCode.isDark(row, col + 5) &&\n        qrCode.isDark(row, col + 6)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount - 6; row++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row + 1, col) &&\n        qrCode.isDark(row + 2, col) &&\n        qrCode.isDark(row + 3, col) &&\n        qrCode.isDark(row + 4, col) &&\n        !qrCode.isDark(row + 5, col) &&\n        qrCode.isDark(row + 6, col)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  let darkCount = 0;\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount; row++) {\n      if (qrCode.isDark(row, col)) {\n        darkCount++;\n      }\n    }\n  }\n  const ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n  lostPoint += ratio * 10;\n  return lostPoint;\n};\n","export const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n};\n\nexport type QRMaskPattern = typeof QRMaskPattern[keyof typeof QRMaskPattern];\n","import { QR8bitByte } from './QR8bitByte';\nimport { QRRSBlock } from './QRRSBlock';\nimport { QRBitBuffer } from './QRBitBuffer';\nimport { QRPolynomial } from './QRPolynomial';\nimport * as QRUtil from './QRUtil';\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\nexport class QRCodeModel {\n  typeNumber!: number;\n  errorCorrectLevel!: number;\n  modules = null;\n  moduleCount = 0;\n  dataCache = null;\n  dataList = [];\n\n  constructor(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n  }\n\n  addData(data) {\n    const newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  }\n\n  isDark(row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + ',' + col);\n    }\n    return this.modules[row][col];\n  }\n\n  getModuleCount() {\n    return this.moduleCount;\n  }\n\n  make() {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n\n  makeImpl(test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for (let row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n      for (let col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null;\n      }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n    if (this.dataCache == null) {\n      this.dataCache = this.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  setupPositionProbePattern(row, col) {\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n        this.modules[row + r][col + c] =\n          (0 <= r && r <= 6 && (c === 0 || c === 6)) ||\n          (0 <= c && c <= 6 && (r === 0 || r === 6)) ||\n          (2 <= r && r <= 4 && 2 <= c && c <= 4);\n      }\n    }\n  }\n\n  getBestMaskPattern() {\n    let minLostPoint = 0;\n    let pattern = 0;\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      const lostPoint = QRUtil.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n    return pattern;\n  }\n\n  createMovieClip(target_mc, instance_name, depth) {\n    const qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    const cs = 1;\n    this.make();\n    for (let row = 0; row < this.modules.length; row++) {\n      const y = row * cs;\n      for (let col = 0; col < this.modules[row].length; col++) {\n        const x = col * cs;\n        const dark = this.modules[row][col];\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n    return qr_mc;\n  }\n\n  setupTimingPattern() {\n    for (let r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n      this.modules[r][6] = r % 2 === 0;\n    }\n    for (let c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n      this.modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  setupPositionAdjustPattern() {\n    const pos = QRUtil.getPatternPosition(this.typeNumber);\n    for (let i = 0; i < pos.length; i++) {\n      for (let j = 0; j < pos.length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            if (r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0)) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  setupTypeNumber(test) {\n    const bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    for (let i = 0; i < 18; i++) {\n      this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = !test && ((bits >> i) & 1) === 1;\n    }\n    for (let i = 0; i < 18; i++) {\n      this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = !test && ((bits >> i) & 1) === 1;\n    }\n  }\n\n  setupTypeInfo(test, maskPattern) {\n    const data = (this.errorCorrectLevel << 3) | maskPattern;\n    const bits = QRUtil.getBCHTypeInfo(data);\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    }\n    for (let i = 0; i < 15; i++) {\n      var mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    }\n    this.modules[this.moduleCount - 8][8] = !test;\n  }\n\n  mapData(data, maskPattern) {\n    let inc = -1;\n    let row = this.moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n    for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col === 6) col--;\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            let dark = false;\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n            const mask = QRUtil.getMask(maskPattern, row, col - c);\n            if (mask) {\n              dark = !dark;\n            }\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n        row += inc;\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  createData(typeNumber, errorCorrectLevel, dataList) {\n    const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new QRBitBuffer();\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n      buffer.put(data.mode, 4);\n      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');\n    }\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n      buffer.put(0, 4);\n    }\n    while (buffer.getLengthInBits() % 8 !== 0) {\n      buffer.putBit(false);\n    }\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  createBytes(buffer, rsBlocks) {\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n    const dcdata = new Array(rsBlocks.length);\n    const ecdata = new Array(rsBlocks.length);\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n      dcdata[r] = new Array(dcCount);\n      for (let i = 0; i < dcdata[r].length; i++) {\n        dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n      }\n      offset += dcCount;\n      const rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n      ecdata[r] = new Array(rsPoly.getLength() - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.getLength() - ecdata[r].length;\n        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n      }\n    }\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n    const data = new Array(totalCodeCount);\n    let index = 0;\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n    return data;\n  }\n}\n","export const QRCodeLimitLength = [\n  [17, 14, 11, 7],\n  [32, 26, 20, 14],\n  [53, 42, 32, 24],\n  [78, 62, 46, 34],\n  [106, 84, 60, 44],\n  [134, 106, 74, 58],\n  [154, 122, 86, 64],\n  [192, 152, 108, 84],\n  [230, 180, 130, 98],\n  [271, 213, 151, 119],\n  [321, 251, 177, 137],\n  [367, 287, 203, 155],\n  [425, 331, 241, 177],\n  [458, 362, 258, 194],\n  [520, 412, 292, 220],\n  [586, 450, 322, 250],\n  [644, 504, 364, 280],\n  [718, 560, 394, 310],\n  [792, 624, 442, 338],\n  [858, 666, 482, 382],\n  [929, 711, 509, 403],\n  [1003, 779, 565, 439],\n  [1091, 857, 611, 461],\n  [1171, 911, 661, 511],\n  [1273, 997, 715, 535],\n  [1367, 1059, 751, 593],\n  [1465, 1125, 805, 625],\n  [1528, 1190, 868, 658],\n  [1628, 1264, 908, 698],\n  [1732, 1370, 982, 742],\n  [1840, 1452, 1030, 790],\n  [1952, 1538, 1112, 842],\n  [2068, 1628, 1168, 898],\n  [2188, 1722, 1228, 958],\n  [2303, 1809, 1283, 983],\n  [2431, 1911, 1351, 1051],\n  [2563, 1989, 1423, 1093],\n  [2699, 2099, 1499, 1139],\n  [2809, 2213, 1579, 1219],\n  [2953, 2331, 1663, 1273],\n];\n","export function getProp(object, keys, defaultVal = undefined) {\n  keys = Array.isArray(keys) ? keys : keys.split('.');\n  object = object[keys[0]];\n  if (object && keys.length > 1) {\n    return getProp(object, keys.slice(1));\n  }\n  return object === undefined ? defaultVal : object;\n}\n","import { QRCodeModel } from './QRCodeModel';\nimport { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\nimport { QRCodeLimitLength } from './QRCodeLimitLength';\nimport { getProp } from './utils';\n\nexport class QRCode {\n  options = {\n    padding: 0,\n    size: 256,\n    circleCorners: false,\n    typeNumber: 4,\n    color: '#000000',\n    background: '#ffffff',\n    ecl: 'M',\n    dotRadius: 50,\n    content: '',\n    // SVG?\n    pretty: false,\n    xmlDeclaration: false,\n  };\n\n  qrcode: QRCodeModel;\n\n  constructor(options) {\n    const instance = this;\n\n    //In case the options is string\n    if (typeof options === 'string') {\n      options = {\n        content: options,\n      };\n    }\n\n    //Merge options\n    if (options) {\n      for (var i in options) {\n        this.options[i] = options[i];\n      }\n    }\n\n    if (typeof this.options.content !== 'string') {\n      throw new Error(\"Expected 'content' as string!\");\n    }\n\n    if (this.options.content.length === 0 /* || this.options.content.length > 7089 */) {\n      throw new Error(\"Expected 'content' to be non-empty!\");\n    }\n\n    if (!(this.options.padding >= 0)) {\n      throw new Error(\"Expected 'padding' value to be non-negative!\");\n    }\n\n    if (!(this.options.size > 0)) {\n      throw new Error(\"Expected 'size' or 'height' value to be higher than zero!\");\n    }\n\n    //Gets the error correction level\n    function _getErrorCorrectLevel(ecl) {\n      switch (ecl) {\n        case 'L':\n          return QRErrorCorrectLevel.L;\n\n        case 'M':\n          return QRErrorCorrectLevel.M;\n\n        case 'Q':\n          return QRErrorCorrectLevel.Q;\n\n        case 'H':\n          return QRErrorCorrectLevel.H;\n\n        default:\n          throw new Error('Unknwon error correction level: ' + ecl);\n      }\n    }\n\n    //Get type number\n    function _getTypeNumber(content, ecl) {\n      const length = _getUTF8Length(content);\n\n      let type = 1;\n      let limit = 0;\n      let i = 0;\n      const len = QRCodeLimitLength.length;\n      for (; i <= len; i++) {\n        const table = QRCodeLimitLength[i];\n        if (!table) {\n          throw new Error('Content too long: expected ' + limit + ' but got ' + length);\n        }\n\n        switch (ecl) {\n          case 'L':\n            limit = table[0];\n            break;\n\n          case 'M':\n            limit = table[1];\n            break;\n\n          case 'Q':\n            limit = table[2];\n            break;\n\n          case 'H':\n            limit = table[3];\n            break;\n\n          default:\n            throw new Error('Unknwon error correction level: ' + ecl);\n        }\n\n        if (length <= limit) {\n          break;\n        }\n\n        type++;\n      }\n\n      if (type > QRCodeLimitLength.length) {\n        throw new Error('Content too long');\n      }\n\n      return type;\n    }\n\n    //Gets text length\n    function _getUTF8Length(content) {\n      const result = encodeURI(content)\n        .toString()\n        .replace(/%[0-9a-fA-F]{2}/g, 'a');\n      return result.length + (result.length !== content ? 3 : 0);\n    }\n\n    //Generate QR Code matrix\n    var content = this.options.content;\n    var type = _getTypeNumber(content, this.options.ecl);\n    var ecl = _getErrorCorrectLevel(this.options.ecl);\n    this.qrcode = new QRCodeModel(type, ecl);\n    this.qrcode.addData(content);\n    this.qrcode.make();\n  }\n\n  svg() {\n    const options = this.options;\n    const modules = this.qrcode.modules;\n\n    //Apply new lines and indents in SVG?\n    const pretty = typeof options.pretty != 'undefined' ? !!options.pretty : true;\n\n    const indent = pretty ? '  ' : '';\n    const EOL = pretty ? '\\r\\n' : '';\n    const width = options.size;\n    const height = options.size;\n    const length = modules.length;\n    const xsize = width / length;\n    const ysize = height / length;\n\n    //Apply <?xml...?> declaration in SVG?\n    const xmlDeclaration = options.xmlDeclaration;\n\n    //Rectangles representing modules\n    let modrect = '';\n\n    for (let y = 0; y < length; y++) {\n      for (let x = 0; x < length; x++) {\n        if (this.options.circleCorners) {\n          if ((x < 8 && y < 8) || (x > length - 8 && y < 8) || (x < 8 && y > length - 8)) {\n            continue;\n          }\n        }\n\n        const module = modules[x][y];\n        if (module) {\n          let px = x * xsize;\n          let py = y * ysize;\n\n          // Round corners checking neighbors\n          let nc1 = !(getProp(modules, [x - 1, y]) || getProp(modules, [x, y - 1]));\n          let nc2 = !(getProp(modules, [x + 1, y]) || getProp(modules, [x, y - 1]));\n          let nc3 = !(getProp(modules, [x + 1, y]) || getProp(modules, [x, y + 1]));\n          let nc4 = !(getProp(modules, [x - 1, y]) || getProp(modules, [x, y + 1]));\n\n          const rv = (v) => Math.floor(v * 100) / 100;\n\n          const rightRoundedRect = (x, y, width, height, radius, corners) => {\n            x = rv(x);\n            y = rv(y);\n            radius = rv(radius);\n\n            let result = 'M' + x + ',' + y;\n            result += 'h' + rv(width - corners[1] * radius);\n            if (corners[1]) {\n              result += 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius;\n            }\n            result += 'v' + rv(height - (corners[1] + corners[2]) * radius);\n            if (corners[2]) {\n              result += 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius;\n            }\n            result += 'h' + -1 * rv(width - (corners[2] + corners[3]) * radius);\n            if (corners[3]) {\n              result += 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius;\n            }\n            result += 'v' + -rv(height - (corners[3] + corners[0]) * radius);\n            if (corners[0]) {\n              result += 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius;\n            }\n\n            result += 'z';\n\n            return result;\n          };\n\n          const r = this.options.dotRadius;\n          const radiusFactor = Math.max(100 / r, 2);\n          modrect +=\n            indent +\n            `<path d=\"${rightRoundedRect(\n              px - xsize * 0.025,\n              py - ysize * 0.025,\n              xsize + xsize * 0.05,\n              ysize + ysize * 0.05,\n              (xsize + xsize * 0.05) / radiusFactor,\n              [nc1, nc2, nc3, nc4],\n            )}\"/>${EOL}`;\n        }\n      }\n    }\n\n    let svg = '';\n    if (xmlDeclaration) {\n      svg += `<?xml version=\"1.0\" standalone=\"yes\"?>${EOL}`;\n    }\n    svg += `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"${width}\" height=\"${height}\" fill=\"${options.color}\">${EOL}`;\n\n    svg += modrect;\n\n    /* Circles in corners */\n\n    // prettier-ignore\n    if (this.options.circleCorners) {\n      // TopLeft\n      svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n      svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\"/>`;\n\n      // TopRight\n      svg += `<circle cx=\"${length * xsize - (xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n      svg += `<circle cx=\"${length * xsize - (xsize * 7) / 2}\" cy=\"${(xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\"/>`;\n\n      // BottomLeft\n      svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${length * xsize - (xsize * 7) / 2}\" r=\"${(xsize * 3)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\" fill=\"none\" />`;\n      svg += `<circle cx=\"${(xsize * 7) / 2}\" cy=\"${length * xsize - (xsize * 7) / 2}\" r=\"${(xsize)}\" stroke=\"${options.color}\" stroke-width=\"${xsize}\"/>`;\n    }\n\n    svg += '</svg>';\n\n    return svg;\n  }\n}\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst GitHubLink = () => {\n  return (\n    <div className={styles.main}>\n      <a href=\"https://github.com/avin/sexy-qr\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <svg className={styles.octicon} viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n          />\n        </svg>\n      </a>\n    </div>\n  );\n};\nexport default GitHubLink;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport QrCode from 'sexy-qr';\nimport styles from './App.module.scss';\nimport GitHubLink from './GitHubLink/GitHubLink';\n\nconst App = () => {\n  const [link, setLink] = useState('https://github.com/avin/sexy-qr');\n  const [size, setSize] = useState('380');\n  const [color, setColor] = useState('#182026');\n  const [circles, setCircles] = useState('true');\n  const [ecl, setEcl] = useState('M');\n  const [dotRadius, setDotRadius] = useState(35);\n\n  const handleChangeColor = useCallback((e) => {\n    setColor(e.target.value);\n  }, []);\n  const handleChangeCircles = useCallback((e) => {\n    setCircles(e.target.value);\n  }, []);\n  const handleChangeLink = useCallback((e) => {\n    setLink(e.target.value);\n  }, []);\n\n  const handleChangeSize = useCallback((e) => {\n    setSize(e.target.value);\n  }, []);\n\n  const handleChangeEcl = useCallback((e) => {\n    setEcl(e.target.value);\n  }, []);\n  const handleChangeDotRadius = useCallback((e) => {\n    setDotRadius(e.target.value);\n  }, []);\n\n  const qrCodeSrc = useMemo(() => {\n    if (!link) {\n      return null;\n    }\n    return `data:image/svg+xml;base64,${btoa(\n      new QrCode({\n        content: link,\n        ecl: ecl,\n        join: true,\n        color: color,\n        circleCorners: circles === 'true',\n        size: Number(size) || 1,\n        dotRadius: dotRadius,\n      }).svg(),\n    )}`;\n  }, [link, ecl, dotRadius, size, circles, color]);\n\n  return (\n    <div>\n      <div className={styles.title}>\n        <a href=\"https://github.com/avin/sexy-qr\">Sexy-QR</a>\n      </div>\n\n      <div className={styles.container}>\n        <div className={styles.controls}>\n          <div style={{ width: '100%' }}>\n            <label htmlFor=\"link\">Link:</label>\n            <input\n              id=\"link\"\n              type=\"text\"\n              onChange={handleChangeLink}\n              value={link}\n              className={styles.input}\n              placeholder=\"Encoding string...\"\n            />\n          </div>\n        </div>\n\n        <div className={styles.controls}>\n          <div>\n            <label htmlFor=\"circles\">Circles:</label>\n            <select\n              name=\"circles\"\n              id=\"circles\"\n              className={styles.select}\n              onChange={handleChangeCircles}\n              value={circles}\n            >\n              <option value=\"true\">Yes</option>\n              <option value=\"false\">No</option>\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"ecl\">ECL:</label>\n            <select\n              name=\"ecl\"\n              id=\"ecl\"\n              className={styles.select}\n              onChange={handleChangeEcl}\n              value={ecl}\n            >\n              {['L', 'M', 'Q', 'H'].map((v) => (\n                <option value={v} key={v}>\n                  {v}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"dotRadius\">DotRadius:</label>\n            <select\n              name=\"dotRadius\"\n              id=\"dotRadius\"\n              className={styles.select}\n              onChange={handleChangeDotRadius}\n              value={dotRadius}\n            >\n              {[0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50].map((v) => (\n                <option value={v} key={v}>\n                  {v}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div>\n            <label htmlFor=\"size\">Size:</label>\n            <input\n              id=\"size\"\n              type=\"tel\"\n              onChange={handleChangeSize}\n              value={size}\n              className={styles.input}\n              placeholder=\"Size\"\n            />\n          </div>\n          <div>\n            <label htmlFor=\"color\">Color:</label>\n            <input\n              id=\"color\"\n              type=\"color\"\n              onChange={handleChangeColor}\n              value={color}\n              className={styles.input}\n              placeholder=\"#000\"\n            />\n          </div>\n        </div>\n\n        <div className={styles.imageContainer}>\n          {qrCodeSrc ? (\n            <img src={qrCodeSrc} alt=\"QR\" className={styles.qr} />\n          ) : (\n            <div className={styles.notice}>Type string to encode</div>\n          )}\n        </div>\n\n        <GitHubLink />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2C-7r\",\"container\":\"App_container__2i36C\",\"controls\":\"App_controls__26tu4\",\"label\":\"App_label__LI5Ny\",\"input\":\"App_input__1k4p7\",\"select\":\"App_select__3olHI\",\"imageContainer\":\"App_imageContainer__G3bKt\",\"notice\":\"App_notice__29bU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__1dPbY\",\"octicon\":\"styles_octicon__u8VXb\"};"],"sourceRoot":""}