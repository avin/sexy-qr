{"version":3,"sources":["../../src/QR8bitByte.ts","../../src/QRMode.ts","../../src/QRErrorCorrectLevel.ts","../../src/QRRSBlock.ts","../../src/QRBitBuffer.ts","../../src/QRMath.ts","../../src/QRPolynomial.ts","../../src/QRUtil.ts","../../src/QRMaskPattern.ts","../../src/QRCodeModel.ts","../../src/QRCodeLimitLength.ts","../../src/utils.ts","../../src/QRCode.ts","../../src/QRSvg.ts","components/App/GitHubLink/GitHubLink.js","components/App/App.js","components/App/svglogo.js","index.js","components/App/App.module.scss","components/App/GitHubLink/styles.module.scss"],"names":["QR8bitByte","data","mode","parsedData","this","i","l","length","code","charCodeAt","push","Array","prototype","concat","apply","unshift","getLength","write","buffer","put","QRErrorCorrectLevel","L","M","Q","H","QRRSBlock","totalCount","dataCount","getRSBlocks","typeNumber","errorCorrectLevel","rsBlock","getRsBlockTable","Error","list","count","j","RS_BLOCK_TABLE","QRBitBuffer","get","index","bufIndex","Math","floor","num","putBit","getLengthInBits","bit","EXP_TABLE","LOG_TABLE","glog","n","gexp","QRPolynomial","shift","offset","multiply","e","QRMath","mod","ratio","PATTERN_POSITION_TABLE","getBCHDigit","digit","getMask","maskPattern","getErrorCorrectPolynomial","errorCorrectLength","a","type","getLostPoint","qrCode","moduleCount","getModuleCount","lostPoint","row","col","sameCount","dark","isDark","r","c","darkCount","abs","QRCodeModel","modules","dataCache","dataList","addData","newData","make","makeImpl","getBestMaskPattern","test","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","minLostPoint","pattern","QRUtil","createMovieClip","target_mc","instance_name","depth","qr_mc","createEmptyMovieClip","y","x","beginFill","moveTo","lineTo","endFill","pos","bits","d","inc","bitIndex","byteIndex","rsBlocks","totalDataCount","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","modPoly","modIndex","totalCodeCount","QRCodeLimitLength","getProp","object","keys","defaultVal","isArray","split","slice","round","val","precision","neighborOffsets","contour","QRCode","options","ecl","content","qrcode","getTypeNumber","getErrorCorrectLevel","result","undefined","encodeURI","toString","replace","limit","len","table","emptyCenter","emptySize","size","halfSize","halfEmptySize","matrix","findNeighbors","cell","pride","expectCells","neighborCoord","find","neighborCell","QRSvg","radiusFactor","roundOuterCorners","roundInnerCorners","cornerBlocksAsCircles","fill","paths","matrixSize","lines","lastUniqId","pointSize","cornerBlockRadiusFactor","forEach","rowIdx","idx","blockId","isCornerBlock","detectBlocks","detectLines","generatePaths","currCell","cells","_this","getUniqId","pathRadius","min","cornerBlockPathRadius","_this2","processed","p1","p2","cr","Object","key","line","proc","py","px","oCell","resultSeg","nextSeg","filter","seg","sort","b","crops","checkCrops","notProcessedSeg","cropResult","reverse","map","op2","getDir","getSubPath","prevSeg","xmcr","xpcr","ymcr","ypcr","segDir","prevSegDir","path","String","entries","f","lineIdx","segIdx","_this3","offsetSize","oy","centerX","centerY","outerRadius","innerRadius","svgAdditionalContent","additionalContent","preContent","join","postContent","GitHubLink","className","styles","main","href","target","rel","octicon","viewBox","version","aria-hidden","fillRule","App","useState","setContent","setSize","setFill","circles","setCircles","setRoundOuterCorners","setRoundInnerCorners","setAdditionalContent","setEcl","setRadiusFactor","setCornerBlockRadiusFactor","handleChangeAdditionalContent","useCallback","value","handleChangeFill","handleChangeCircles","handleChangeRoundOuterCorners","handleChangeRoundInnerCorners","handleChangeContent","handleChangeSize","handleChangeEcl","handleChangeRadiusFactor","handleChangeCornerBlockRadiusFactor","svgCode","useMemo","emptyCenterSize","Number","qrSvg","start","logoSrc","btoa","svg","handleDownload","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","top","downloadContainer","title","width","paddingLeft","paddingRight","htmlFor","id","onChange","input","placeholder","controls","name","select","v","range","step","imageContainer","dangerouslySetInnerHTML","__html","notice","onClick","downloadButton","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,EAAG,IAAK,KACtB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,EAAG,IAAK,IAAK,GAAI,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,KACV,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IACrB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,IACpB,CAAC,GAAI,IAAK,IAAK,EAAG,IAAK,KACvB,CAAC,G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","file":"static/js/main.ab1a17f6.chunk.js","sourcesContent":["import { QRMode } from './QRMode';\n\nexport class QR8bitByte {\n  mode = QRMode.MODE_8BIT_BYTE;\n\n  data: string;\n\n  parsedData: (number[] | number)[] = [];\n\n  constructor(data) {\n    this.data = data;\n\n    // Added to support UTF-8 Characters\n    let i = 0;\n    const l = this.data.length;\n    for (; i < l; i++) {\n      const code = this.data.charCodeAt(i);\n\n      let byteArray: number[];\n      if (code > 0x10000) {\n        // prettier-ignore\n        byteArray = [\n          0xf0 | ((code & 0x1c0000) >>> 18),\n          0x80 | ((code & 0x3f000) >>> 12),\n          0x80 | ((code & 0xfc0) >>> 6),\n          0x80 | (code & 0x3f),\n        ];\n      } else if (code > 0x800) {\n        // prettier-ignore\n        byteArray = [\n          0xe0 | ((code & 0xf000) >>> 12),\n          0x80 | ((code & 0xfc0) >>> 6),\n          0x80 | (code & 0x3f),\n        ]\n      } else if (code > 0x80) {\n        // prettier-ignore\n        byteArray = [\n          0xc0 | ((code & 0x7c0) >>> 6),\n          0x80 | (code & 0x3f),\n        ]\n      } else {\n        byteArray = [code];\n      }\n\n      this.parsedData.push(byteArray);\n    }\n\n    this.parsedData = Array.prototype.concat.apply([], this.parsedData);\n\n    if (this.parsedData.length !== this.data.length) {\n      this.parsedData.unshift(191);\n      this.parsedData.unshift(187);\n      this.parsedData.unshift(239);\n    }\n  }\n\n  getLength() {\n    return this.parsedData.length;\n  }\n\n  write(buffer) {\n    let i = 0;\n    const l = this.parsedData.length;\n    for (; i < l; i++) {\n      buffer.put(this.parsedData[i], 8);\n    }\n  }\n}\n","export const QRMode = {\n  MODE_NUMBER: 1 << 0,\n  MODE_ALPHA_NUM: 1 << 1,\n  MODE_8BIT_BYTE: 1 << 2,\n  MODE_KANJI: 1 << 3,\n};\n\nexport type QRMode = typeof QRMode[keyof typeof QRMode];\n","export const QRErrorCorrectLevel = {\n  L: 1,\n  M: 0,\n  Q: 3,\n  H: 2,\n};\n\nexport type QRErrorCorrectLevel = typeof QRErrorCorrectLevel[keyof typeof QRErrorCorrectLevel];\n","import { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\n\nexport class QRRSBlock {\n  totalCount!: number;\n  dataCount!: number;\n\n  constructor(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n  }\n\n  static RS_BLOCK_TABLE = [\n    [1, 26, 19],\n    [1, 26, 16],\n    [1, 26, 13],\n    [1, 26, 9],\n    [1, 44, 34],\n    [1, 44, 28],\n    [1, 44, 22],\n    [1, 44, 16],\n    [1, 70, 55],\n    [1, 70, 44],\n    [2, 35, 17],\n    [2, 35, 13],\n    [1, 100, 80],\n    [2, 50, 32],\n    [2, 50, 24],\n    [4, 25, 9],\n    [1, 134, 108],\n    [2, 67, 43],\n    [2, 33, 15, 2, 34, 16],\n    [2, 33, 11, 2, 34, 12],\n    [2, 86, 68],\n    [4, 43, 27],\n    [4, 43, 19],\n    [4, 43, 15],\n    [2, 98, 78],\n    [4, 49, 31],\n    [2, 32, 14, 4, 33, 15],\n    [4, 39, 13, 1, 40, 14],\n    [2, 121, 97],\n    [2, 60, 38, 2, 61, 39],\n    [4, 40, 18, 2, 41, 19],\n    [4, 40, 14, 2, 41, 15],\n    [2, 146, 116],\n    [3, 58, 36, 2, 59, 37],\n    [4, 36, 16, 4, 37, 17],\n    [4, 36, 12, 4, 37, 13],\n    [2, 86, 68, 2, 87, 69],\n    [4, 69, 43, 1, 70, 44],\n    [6, 43, 19, 2, 44, 20],\n    [6, 43, 15, 2, 44, 16],\n    [4, 101, 81],\n    [1, 80, 50, 4, 81, 51],\n    [4, 50, 22, 4, 51, 23],\n    [3, 36, 12, 8, 37, 13],\n    [2, 116, 92, 2, 117, 93],\n    [6, 58, 36, 2, 59, 37],\n    [4, 46, 20, 6, 47, 21],\n    [7, 42, 14, 4, 43, 15],\n    [4, 133, 107],\n    [8, 59, 37, 1, 60, 38],\n    [8, 44, 20, 4, 45, 21],\n    [12, 33, 11, 4, 34, 12],\n    [3, 145, 115, 1, 146, 116],\n    [4, 64, 40, 5, 65, 41],\n    [11, 36, 16, 5, 37, 17],\n    [11, 36, 12, 5, 37, 13],\n    [5, 109, 87, 1, 110, 88],\n    [5, 65, 41, 5, 66, 42],\n    [5, 54, 24, 7, 55, 25],\n    [11, 36, 12],\n    [5, 122, 98, 1, 123, 99],\n    [7, 73, 45, 3, 74, 46],\n    [15, 43, 19, 2, 44, 20],\n    [3, 45, 15, 13, 46, 16],\n    [1, 135, 107, 5, 136, 108],\n    [10, 74, 46, 1, 75, 47],\n    [1, 50, 22, 15, 51, 23],\n    [2, 42, 14, 17, 43, 15],\n    [5, 150, 120, 1, 151, 121],\n    [9, 69, 43, 4, 70, 44],\n    [17, 50, 22, 1, 51, 23],\n    [2, 42, 14, 19, 43, 15],\n    [3, 141, 113, 4, 142, 114],\n    [3, 70, 44, 11, 71, 45],\n    [17, 47, 21, 4, 48, 22],\n    [9, 39, 13, 16, 40, 14],\n    [3, 135, 107, 5, 136, 108],\n    [3, 67, 41, 13, 68, 42],\n    [15, 54, 24, 5, 55, 25],\n    [15, 43, 15, 10, 44, 16],\n    [4, 144, 116, 4, 145, 117],\n    [17, 68, 42],\n    [17, 50, 22, 6, 51, 23],\n    [19, 46, 16, 6, 47, 17],\n    [2, 139, 111, 7, 140, 112],\n    [17, 74, 46],\n    [7, 54, 24, 16, 55, 25],\n    [34, 37, 13],\n    [4, 151, 121, 5, 152, 122],\n    [4, 75, 47, 14, 76, 48],\n    [11, 54, 24, 14, 55, 25],\n    [16, 45, 15, 14, 46, 16],\n    [6, 147, 117, 4, 148, 118],\n    [6, 73, 45, 14, 74, 46],\n    [11, 54, 24, 16, 55, 25],\n    [30, 46, 16, 2, 47, 17],\n    [8, 132, 106, 4, 133, 107],\n    [8, 75, 47, 13, 76, 48],\n    [7, 54, 24, 22, 55, 25],\n    [22, 45, 15, 13, 46, 16],\n    [10, 142, 114, 2, 143, 115],\n    [19, 74, 46, 4, 75, 47],\n    [28, 50, 22, 6, 51, 23],\n    [33, 46, 16, 4, 47, 17],\n    [8, 152, 122, 4, 153, 123],\n    [22, 73, 45, 3, 74, 46],\n    [8, 53, 23, 26, 54, 24],\n    [12, 45, 15, 28, 46, 16],\n    [3, 147, 117, 10, 148, 118],\n    [3, 73, 45, 23, 74, 46],\n    [4, 54, 24, 31, 55, 25],\n    [11, 45, 15, 31, 46, 16],\n    [7, 146, 116, 7, 147, 117],\n    [21, 73, 45, 7, 74, 46],\n    [1, 53, 23, 37, 54, 24],\n    [19, 45, 15, 26, 46, 16],\n    [5, 145, 115, 10, 146, 116],\n    [19, 75, 47, 10, 76, 48],\n    [15, 54, 24, 25, 55, 25],\n    [23, 45, 15, 25, 46, 16],\n    [13, 145, 115, 3, 146, 116],\n    [2, 74, 46, 29, 75, 47],\n    [42, 54, 24, 1, 55, 25],\n    [23, 45, 15, 28, 46, 16],\n    [17, 145, 115],\n    [10, 74, 46, 23, 75, 47],\n    [10, 54, 24, 35, 55, 25],\n    [19, 45, 15, 35, 46, 16],\n    [17, 145, 115, 1, 146, 116],\n    [14, 74, 46, 21, 75, 47],\n    [29, 54, 24, 19, 55, 25],\n    [11, 45, 15, 46, 46, 16],\n    [13, 145, 115, 6, 146, 116],\n    [14, 74, 46, 23, 75, 47],\n    [44, 54, 24, 7, 55, 25],\n    [59, 46, 16, 1, 47, 17],\n    [12, 151, 121, 7, 152, 122],\n    [12, 75, 47, 26, 76, 48],\n    [39, 54, 24, 14, 55, 25],\n    [22, 45, 15, 41, 46, 16],\n    [6, 151, 121, 14, 152, 122],\n    [6, 75, 47, 34, 76, 48],\n    [46, 54, 24, 10, 55, 25],\n    [2, 45, 15, 64, 46, 16],\n    [17, 152, 122, 4, 153, 123],\n    [29, 74, 46, 14, 75, 47],\n    [49, 54, 24, 10, 55, 25],\n    [24, 45, 15, 46, 46, 16],\n    [4, 152, 122, 18, 153, 123],\n    [13, 74, 46, 32, 75, 47],\n    [48, 54, 24, 14, 55, 25],\n    [42, 45, 15, 32, 46, 16],\n    [20, 147, 117, 4, 148, 118],\n    [40, 75, 47, 7, 76, 48],\n    [43, 54, 24, 22, 55, 25],\n    [10, 45, 15, 67, 46, 16],\n    [19, 148, 118, 6, 149, 119],\n    [18, 75, 47, 31, 76, 48],\n    [34, 54, 24, 34, 55, 25],\n    [20, 45, 15, 61, 46, 16],\n  ];\n\n  static getRSBlocks(typeNumber, errorCorrectLevel) {\n    const rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n    if (rsBlock === undefined) {\n      throw new Error('bad rs block @ typeNumber:' + typeNumber + '/errorCorrectLevel:' + errorCorrectLevel);\n    }\n    const length = rsBlock.length / 3;\n    const list: QRRSBlock[] = [];\n    for (let i = 0; i < length; i++) {\n      const count = rsBlock[i * 3];\n      const totalCount = rsBlock[i * 3 + 1];\n      const dataCount = rsBlock[i * 3 + 2];\n      for (let j = 0; j < count; j++) {\n        list.push(new QRRSBlock(totalCount, dataCount));\n      }\n    }\n    return list;\n  }\n\n  static getRsBlockTable(typeNumber, errorCorrectLevel) {\n    switch (errorCorrectLevel) {\n      case QRErrorCorrectLevel.L:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4];\n      case QRErrorCorrectLevel.M:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectLevel.Q:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectLevel.H:\n        return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default:\n        return undefined;\n    }\n  }\n}\n","export class QRBitBuffer {\n  buffer: number[] = [];\n\n  length = 0;\n\n  constructor() {}\n\n  get(index) {\n    const bufIndex = Math.floor(index / 8);\n    return ((this.buffer[bufIndex] >>> (7 - (index % 8))) & 1) === 1;\n  }\n\n  put(num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1);\n    }\n  }\n\n  getLengthInBits() {\n    return this.length;\n  }\n\n  putBit(bit) {\n    const bufIndex = Math.floor(this.length / 8);\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0);\n    }\n    if (bit) {\n      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n    }\n    this.length++;\n  }\n}\n","export const [EXP_TABLE, LOG_TABLE] = (() => {\n  const EXP_TABLE = new Array(256);\n  const LOG_TABLE = new Array(256);\n\n  for (let i = 0; i < 8; i++) {\n    EXP_TABLE[i] = 1 << i;\n  }\n  for (let i = 8; i < 256; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 4] ^ EXP_TABLE[i - 5] ^ EXP_TABLE[i - 6] ^ EXP_TABLE[i - 8];\n  }\n  for (let i = 0; i < 255; i++) {\n    LOG_TABLE[EXP_TABLE[i]] = i;\n  }\n\n  return [EXP_TABLE, LOG_TABLE];\n})();\n\nexport const glog = (n) => {\n  if (n < 1) {\n    throw new Error('glog(' + n + ')');\n  }\n  return LOG_TABLE[n];\n};\n\nexport const gexp = (n) => {\n  while (n < 0) {\n    n += 255;\n  }\n  while (n >= 256) {\n    n -= 255;\n  }\n  return EXP_TABLE[n];\n};\n","import * as QRMath from './QRMath';\n\nexport class QRPolynomial {\n  num: number[];\n\n  constructor(num, shift) {\n    if (num.length === undefined) {\n      throw new Error(num.length + '/' + shift);\n    }\n    let offset = 0;\n    while (offset < num.length && num[offset] === 0) {\n      offset++;\n    }\n    this.num = new Array(num.length - offset + shift);\n    for (let i = 0; i < num.length - offset; i++) {\n      this.num[i] = num[i + offset];\n    }\n  }\n\n  get(index) {\n    return this.num[index];\n  }\n\n  getLength() {\n    return this.num.length;\n  }\n\n  multiply(e) {\n    const num = new Array(this.getLength() + e.getLength() - 1);\n    for (let i = 0; i < this.getLength(); i++) {\n      for (let j = 0; j < e.getLength(); j++) {\n        num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n      }\n    }\n    return new QRPolynomial(num, 0);\n  }\n\n  mod(e) {\n    if (this.getLength() - e.getLength() < 0) {\n      return this;\n    }\n    const ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n    const num = new Array(this.getLength());\n    for (let i = 0; i < this.getLength(); i++) {\n      num[i] = this.get(i);\n    }\n    for (let i = 0; i < e.getLength(); i++) {\n      num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n    }\n    return new QRPolynomial(num, 0).mod(e);\n  }\n}\n","import { QRMaskPattern } from './QRMaskPattern';\nimport { QRPolynomial } from './QRPolynomial';\nimport { QRMode } from './QRMode';\nimport * as QRMath from './QRMath';\n\nexport const PATTERN_POSITION_TABLE = [\n  [],\n  [6, 18],\n  [6, 22],\n  [6, 26],\n  [6, 30],\n  [6, 34],\n  [6, 22, 38],\n  [6, 24, 42],\n  [6, 26, 46],\n  [6, 28, 50],\n  [6, 30, 54],\n  [6, 32, 58],\n  [6, 34, 62],\n  [6, 26, 46, 66],\n  [6, 26, 48, 70],\n  [6, 26, 50, 74],\n  [6, 30, 54, 78],\n  [6, 30, 56, 82],\n  [6, 30, 58, 86],\n  [6, 34, 62, 90],\n  [6, 28, 50, 72, 94],\n  [6, 26, 50, 74, 98],\n  [6, 30, 54, 78, 102],\n  [6, 28, 54, 80, 106],\n  [6, 32, 58, 84, 110],\n  [6, 30, 58, 86, 114],\n  [6, 34, 62, 90, 118],\n  [6, 26, 50, 74, 98, 122],\n  [6, 30, 54, 78, 102, 126],\n  [6, 26, 52, 78, 104, 130],\n  [6, 30, 56, 82, 108, 134],\n  [6, 34, 60, 86, 112, 138],\n  [6, 30, 58, 86, 114, 142],\n  [6, 34, 62, 90, 118, 146],\n  [6, 30, 54, 78, 102, 126, 150],\n  [6, 24, 50, 76, 102, 128, 154],\n  [6, 28, 54, 80, 106, 132, 158],\n  [6, 32, 58, 84, 110, 136, 162],\n  [6, 26, 54, 82, 110, 138, 166],\n  [6, 30, 58, 86, 114, 142, 170],\n];\n\nexport const G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n\nexport const G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n\nexport const G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\nexport const getBCHDigit = (data) => {\n  let digit = 0;\n  while (data !== 0) {\n    digit++;\n    data >>>= 1;\n  }\n  return digit;\n};\n\nexport const getBCHTypeInfo = (data) => {\n  let d = data << 10;\n  while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n    d ^= G15 << (getBCHDigit(d) - getBCHDigit(G15));\n  }\n  return ((data << 10) | d) ^ G15_MASK;\n};\n\nexport const getBCHTypeNumber = (data) => {\n  let d = data << 12;\n  while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n    d ^= G18 << (getBCHDigit(d) - getBCHDigit(G18));\n  }\n  return (data << 12) | d;\n};\n\nexport const getPatternPosition = (typeNumber) => {\n  return PATTERN_POSITION_TABLE[typeNumber - 1];\n};\n\nexport const getMask = (maskPattern, i, j) => {\n  switch (maskPattern) {\n    case QRMaskPattern.PATTERN000:\n      return (i + j) % 2 === 0;\n    case QRMaskPattern.PATTERN001:\n      return i % 2 === 0;\n    case QRMaskPattern.PATTERN010:\n      return j % 3 === 0;\n    case QRMaskPattern.PATTERN011:\n      return (i + j) % 3 === 0;\n    case QRMaskPattern.PATTERN100:\n      return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN101:\n      return ((i * j) % 2) + ((i * j) % 3) === 0;\n    case QRMaskPattern.PATTERN110:\n      return (((i * j) % 2) + ((i * j) % 3)) % 2 === 0;\n    case QRMaskPattern.PATTERN111:\n      return (((i * j) % 3) + ((i + j) % 2)) % 2 === 0;\n    default:\n      throw new Error('bad maskPattern:' + maskPattern);\n  }\n};\n\nexport const getErrorCorrectPolynomial = (errorCorrectLength) => {\n  let a = new QRPolynomial([1], 0);\n  for (let i = 0; i < errorCorrectLength; i++) {\n    a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n  }\n  return a;\n};\n\nexport const getLengthInBits = (mode, type) => {\n  if (1 <= type && type < 10) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 10;\n      case QRMode.MODE_ALPHA_NUM:\n        return 9;\n      case QRMode.MODE_8BIT_BYTE:\n        return 8;\n      case QRMode.MODE_KANJI:\n        return 8;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 27) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 12;\n      case QRMode.MODE_ALPHA_NUM:\n        return 11;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 10;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else if (type < 41) {\n    switch (mode) {\n      case QRMode.MODE_NUMBER:\n        return 14;\n      case QRMode.MODE_ALPHA_NUM:\n        return 13;\n      case QRMode.MODE_8BIT_BYTE:\n        return 16;\n      case QRMode.MODE_KANJI:\n        return 12;\n      default:\n        throw new Error('mode:' + mode);\n    }\n  } else {\n    throw new Error('type:' + type);\n  }\n};\n\nexport const getLostPoint = (qrCode) => {\n  const moduleCount = qrCode.getModuleCount();\n  let lostPoint = 0;\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount; col++) {\n      let sameCount = 0;\n      const dark = qrCode.isDark(row, col);\n      for (let r = -1; r <= 1; r++) {\n        if (row + r < 0 || moduleCount <= row + r) {\n          continue;\n        }\n        for (let c = -1; c <= 1; c++) {\n          if (col + c < 0 || moduleCount <= col + c) {\n            continue;\n          }\n          if (r === 0 && c === 0) {\n            continue;\n          }\n          if (dark === qrCode.isDark(row + r, col + c)) {\n            sameCount++;\n          }\n        }\n      }\n      if (sameCount > 5) {\n        lostPoint += 3 + sameCount - 5;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount - 1; row++) {\n    for (let col = 0; col < moduleCount - 1; col++) {\n      let count = 0;\n      if (qrCode.isDark(row, col)) count++;\n      if (qrCode.isDark(row + 1, col)) count++;\n      if (qrCode.isDark(row, col + 1)) count++;\n      if (qrCode.isDark(row + 1, col + 1)) count++;\n      if (count === 0 || count === 4) {\n        lostPoint += 3;\n      }\n    }\n  }\n  for (let row = 0; row < moduleCount; row++) {\n    for (let col = 0; col < moduleCount - 6; col++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row, col + 1) &&\n        qrCode.isDark(row, col + 2) &&\n        qrCode.isDark(row, col + 3) &&\n        qrCode.isDark(row, col + 4) &&\n        !qrCode.isDark(row, col + 5) &&\n        qrCode.isDark(row, col + 6)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount - 6; row++) {\n      if (\n        qrCode.isDark(row, col) &&\n        !qrCode.isDark(row + 1, col) &&\n        qrCode.isDark(row + 2, col) &&\n        qrCode.isDark(row + 3, col) &&\n        qrCode.isDark(row + 4, col) &&\n        !qrCode.isDark(row + 5, col) &&\n        qrCode.isDark(row + 6, col)\n      ) {\n        lostPoint += 40;\n      }\n    }\n  }\n  let darkCount = 0;\n  for (let col = 0; col < moduleCount; col++) {\n    for (let row = 0; row < moduleCount; row++) {\n      if (qrCode.isDark(row, col)) {\n        darkCount++;\n      }\n    }\n  }\n  const ratio = Math.abs((100 * darkCount) / moduleCount / moduleCount - 50) / 5;\n  lostPoint += ratio * 10;\n  return lostPoint;\n};\n","export const QRMaskPattern = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7,\n};\n\nexport type QRMaskPattern = typeof QRMaskPattern[keyof typeof QRMaskPattern];\n","import { QR8bitByte } from './QR8bitByte';\nimport { QRRSBlock } from './QRRSBlock';\nimport { QRBitBuffer } from './QRBitBuffer';\nimport { QRPolynomial } from './QRPolynomial';\nimport * as QRUtil from './QRUtil';\n\nconst PAD0 = 0xec;\nconst PAD1 = 0x11;\n\nexport class QRCodeModel {\n  typeNumber!: number;\n  errorCorrectLevel!: number;\n  modules: (boolean | null)[][] = [];\n  moduleCount = 0;\n  dataCache: number[] | null = null;\n  dataList: QR8bitByte[] = [];\n\n  constructor(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n  }\n\n  addData(data) {\n    const newData = new QR8bitByte(data);\n    this.dataList.push(newData);\n    this.dataCache = null;\n  }\n\n  isDark(row, col) {\n    if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n      throw new Error(row + ',' + col);\n    }\n    return this.modules[row][col];\n  }\n\n  getModuleCount() {\n    return this.moduleCount;\n  }\n\n  make() {\n    this.makeImpl(false, this.getBestMaskPattern());\n  }\n\n  makeImpl(test, maskPattern) {\n    this.moduleCount = this.typeNumber * 4 + 17;\n    this.modules = new Array(this.moduleCount);\n    for (let row = 0; row < this.moduleCount; row++) {\n      this.modules[row] = new Array(this.moduleCount);\n      for (let col = 0; col < this.moduleCount; col++) {\n        this.modules[row][col] = null;\n      }\n    }\n    this.setupPositionProbePattern(0, 0);\n    this.setupPositionProbePattern(this.moduleCount - 7, 0);\n    this.setupPositionProbePattern(0, this.moduleCount - 7);\n    this.setupPositionAdjustPattern();\n    this.setupTimingPattern();\n    this.setupTypeInfo(test, maskPattern);\n    if (this.typeNumber >= 7) {\n      this.setupTypeNumber(test);\n    }\n    if (this.dataCache == null) {\n      this.dataCache = this.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n    }\n    this.mapData(this.dataCache, maskPattern);\n  }\n\n  setupPositionProbePattern(row, col) {\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || this.moduleCount <= row + r) continue;\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || this.moduleCount <= col + c) continue;\n        this.modules[row + r][col + c] =\n          (0 <= r && r <= 6 && (c === 0 || c === 6)) ||\n          (0 <= c && c <= 6 && (r === 0 || r === 6)) ||\n          (2 <= r && r <= 4 && 2 <= c && c <= 4);\n      }\n    }\n  }\n\n  getBestMaskPattern() {\n    let minLostPoint = 0;\n    let pattern = 0;\n    for (let i = 0; i < 8; i++) {\n      this.makeImpl(true, i);\n      const lostPoint = QRUtil.getLostPoint(this);\n      if (i === 0 || minLostPoint > lostPoint) {\n        minLostPoint = lostPoint;\n        pattern = i;\n      }\n    }\n    return pattern;\n  }\n\n  createMovieClip(target_mc, instance_name, depth) {\n    const qr_mc = target_mc.createEmptyMovieClip(instance_name, depth);\n    const cs = 1;\n    this.make();\n    for (let row = 0; row < this.modules.length; row++) {\n      const y = row * cs;\n      for (let col = 0; col < this.modules[row].length; col++) {\n        const x = col * cs;\n        const dark = this.modules[row][col];\n        if (dark) {\n          qr_mc.beginFill(0, 100);\n          qr_mc.moveTo(x, y);\n          qr_mc.lineTo(x + cs, y);\n          qr_mc.lineTo(x + cs, y + cs);\n          qr_mc.lineTo(x, y + cs);\n          qr_mc.endFill();\n        }\n      }\n    }\n    return qr_mc;\n  }\n\n  setupTimingPattern() {\n    for (let r = 8; r < this.moduleCount - 8; r++) {\n      if (this.modules[r][6] != null) {\n        continue;\n      }\n      this.modules[r][6] = r % 2 === 0;\n    }\n    for (let c = 8; c < this.moduleCount - 8; c++) {\n      if (this.modules[6][c] != null) {\n        continue;\n      }\n      this.modules[6][c] = c % 2 === 0;\n    }\n  }\n\n  setupPositionAdjustPattern() {\n    const pos = QRUtil.getPatternPosition(this.typeNumber);\n    for (let i = 0; i < pos.length; i++) {\n      for (let j = 0; j < pos.length; j++) {\n        const row = pos[i];\n        const col = pos[j];\n        if (this.modules[row][col] != null) {\n          continue;\n        }\n        for (let r = -2; r <= 2; r++) {\n          for (let c = -2; c <= 2; c++) {\n            if (r === -2 || r === 2 || c === -2 || c === 2 || (r === 0 && c === 0)) {\n              this.modules[row + r][col + c] = true;\n            } else {\n              this.modules[row + r][col + c] = false;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  setupTypeNumber(test) {\n    const bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n    for (let i = 0; i < 18; i++) {\n      this.modules[Math.floor(i / 3)][(i % 3) + this.moduleCount - 8 - 3] = !test && ((bits >> i) & 1) === 1;\n    }\n    for (let i = 0; i < 18; i++) {\n      this.modules[(i % 3) + this.moduleCount - 8 - 3][Math.floor(i / 3)] = !test && ((bits >> i) & 1) === 1;\n    }\n  }\n\n  setupTypeInfo(test, maskPattern) {\n    const data = (this.errorCorrectLevel << 3) | maskPattern;\n    const bits = QRUtil.getBCHTypeInfo(data);\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 6) {\n        this.modules[i][8] = mod;\n      } else if (i < 8) {\n        this.modules[i + 1][8] = mod;\n      } else {\n        this.modules[this.moduleCount - 15 + i][8] = mod;\n      }\n    }\n    for (let i = 0; i < 15; i++) {\n      const mod = !test && ((bits >> i) & 1) === 1;\n      if (i < 8) {\n        this.modules[8][this.moduleCount - i - 1] = mod;\n      } else if (i < 9) {\n        this.modules[8][15 - i - 1 + 1] = mod;\n      } else {\n        this.modules[8][15 - i - 1] = mod;\n      }\n    }\n    this.modules[this.moduleCount - 8][8] = !test;\n  }\n\n  mapData(data, maskPattern) {\n    let inc = -1;\n    let row = this.moduleCount - 1;\n    let bitIndex = 7;\n    let byteIndex = 0;\n    for (let col = this.moduleCount - 1; col > 0; col -= 2) {\n      if (col === 6) col--;\n      while (true) {\n        for (let c = 0; c < 2; c++) {\n          if (this.modules[row][col - c] == null) {\n            let dark = false;\n            if (byteIndex < data.length) {\n              dark = ((data[byteIndex] >>> bitIndex) & 1) === 1;\n            }\n            const mask = QRUtil.getMask(maskPattern, row, col - c);\n            if (mask) {\n              dark = !dark;\n            }\n            this.modules[row][col - c] = dark;\n            bitIndex--;\n            if (bitIndex === -1) {\n              byteIndex++;\n              bitIndex = 7;\n            }\n          }\n        }\n        row += inc;\n        if (row < 0 || this.moduleCount <= row) {\n          row -= inc;\n          inc = -inc;\n          break;\n        }\n      }\n    }\n  }\n\n  createData(typeNumber, errorCorrectLevel, dataList) {\n    const rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n    const buffer = new QRBitBuffer();\n    for (let i = 0; i < dataList.length; i++) {\n      const data = dataList[i];\n      buffer.put(data.mode, 4);\n      buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n      data.write(buffer);\n    }\n    let totalDataCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalDataCount += rsBlocks[i].dataCount;\n    }\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n      throw new Error('code length overflow. (' + buffer.getLengthInBits() + '>' + totalDataCount * 8 + ')');\n    }\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n      buffer.put(0, 4);\n    }\n    while (buffer.getLengthInBits() % 8 !== 0) {\n      buffer.putBit(false);\n    }\n    while (true) {\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD0, 8);\n      if (buffer.getLengthInBits() >= totalDataCount * 8) {\n        break;\n      }\n      buffer.put(PAD1, 8);\n    }\n    return this.createBytes(buffer, rsBlocks);\n  }\n\n  createBytes(buffer, rsBlocks) {\n    let offset = 0;\n    let maxDcCount = 0;\n    let maxEcCount = 0;\n    const dcdata = new Array(rsBlocks.length);\n    const ecdata = new Array(rsBlocks.length);\n    for (let r = 0; r < rsBlocks.length; r++) {\n      const dcCount = rsBlocks[r].dataCount;\n      const ecCount = rsBlocks[r].totalCount - dcCount;\n      maxDcCount = Math.max(maxDcCount, dcCount);\n      maxEcCount = Math.max(maxEcCount, ecCount);\n      dcdata[r] = new Array(dcCount);\n      for (let i = 0; i < dcdata[r].length; i++) {\n        dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n      }\n      offset += dcCount;\n      const rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n      const rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n      const modPoly = rawPoly.mod(rsPoly);\n      ecdata[r] = new Array(rsPoly.getLength() - 1);\n      for (let i = 0; i < ecdata[r].length; i++) {\n        const modIndex = i + modPoly.getLength() - ecdata[r].length;\n        ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n      }\n    }\n    let totalCodeCount = 0;\n    for (let i = 0; i < rsBlocks.length; i++) {\n      totalCodeCount += rsBlocks[i].totalCount;\n    }\n    const data = new Array(totalCodeCount);\n    let index = 0;\n    for (let i = 0; i < maxDcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < dcdata[r].length) {\n          data[index++] = dcdata[r][i];\n        }\n      }\n    }\n    for (let i = 0; i < maxEcCount; i++) {\n      for (let r = 0; r < rsBlocks.length; r++) {\n        if (i < ecdata[r].length) {\n          data[index++] = ecdata[r][i];\n        }\n      }\n    }\n    return data;\n  }\n}\n","export const QRCodeLimitLength = [\n  [17, 14, 11, 7],\n  [32, 26, 20, 14],\n  [53, 42, 32, 24],\n  [78, 62, 46, 34],\n  [106, 84, 60, 44],\n  [134, 106, 74, 58],\n  [154, 122, 86, 64],\n  [192, 152, 108, 84],\n  [230, 180, 130, 98],\n  [271, 213, 151, 119],\n  [321, 251, 177, 137],\n  [367, 287, 203, 155],\n  [425, 331, 241, 177],\n  [458, 362, 258, 194],\n  [520, 412, 292, 220],\n  [586, 450, 322, 250],\n  [644, 504, 364, 280],\n  [718, 560, 394, 310],\n  [792, 624, 442, 338],\n  [858, 666, 482, 382],\n  [929, 711, 509, 403],\n  [1003, 779, 565, 439],\n  [1091, 857, 611, 461],\n  [1171, 911, 661, 511],\n  [1273, 997, 715, 535],\n  [1367, 1059, 751, 593],\n  [1465, 1125, 805, 625],\n  [1528, 1190, 868, 658],\n  [1628, 1264, 908, 698],\n  [1732, 1370, 982, 742],\n  [1840, 1452, 1030, 790],\n  [1952, 1538, 1112, 842],\n  [2068, 1628, 1168, 898],\n  [2188, 1722, 1228, 958],\n  [2303, 1809, 1283, 983],\n  [2431, 1911, 1351, 1051],\n  [2563, 1989, 1423, 1093],\n  [2699, 2099, 1499, 1139],\n  [2809, 2213, 1579, 1219],\n  [2953, 2331, 1663, 1273],\n];\n","export const getProp = (object, keys, defaultVal = undefined) => {\n  keys = Array.isArray(keys) ? keys : keys.split('.');\n  object = object[keys[0]];\n  if (object && keys.length > 1) {\n    return getProp(object, keys.slice(1));\n  }\n  return object === undefined ? defaultVal : object;\n};\n\nexport const round = (val: number, precision = 1e1) => {\n  return Math.round(val * precision) / precision;\n};\n\nexport const neighborOffsets = [\n  [-1, 0],\n  [0, -1],\n  [1, 0],\n  [0, 1],\n];\n\nexport const contour = [\n  [\n    [0, 0],\n    [0, 1],\n  ],\n  [\n    [0, 0],\n    [1, 0],\n  ],\n  [\n    [1, 0],\n    [1, 1],\n  ],\n  [\n    [0, 1],\n    [1, 1],\n  ],\n];\n\nexport const getUTF8Length = (content) => {\n  const result = encodeURI(content)\n    .toString()\n    .replace(/%[0-9a-fA-F]{2}/g, 'a');\n  return result.length + (result.length !== content ? 3 : 0);\n};\n","import { QRCodeModel } from './QRCodeModel';\nimport { QRErrorCorrectLevel } from './QRErrorCorrectLevel';\nimport { QRCodeLimitLength } from './QRCodeLimitLength';\nimport { getUTF8Length } from './utils';\n\ntype QRCodeOptions = {\n  ecl: 'L' | 'M' | 'Q' | 'H';\n  content: string;\n};\n\nexport class QRCode {\n  options: QRCodeOptions = {\n    ecl: 'M',\n    content: '',\n  };\n\n  private readonly qrcode!: QRCodeModel;\n\n  constructor(options: Partial<QRCodeOptions>) {\n    for (const i in options) {\n      this.options[i] = options[i];\n    }\n\n    if (this.options.content.length === 0) {\n      throw new Error(\"Expected 'content' to be non-empty!\");\n    }\n\n    const content = this.options.content;\n    const type = this.getTypeNumber(content, this.options.ecl);\n    const ecl = this.getErrorCorrectLevel(this.options.ecl);\n    this.qrcode = new QRCodeModel(type, ecl);\n    this.qrcode.addData(content);\n    this.qrcode.make();\n  }\n\n  private getErrorCorrectLevel(ecl) {\n    const result = QRErrorCorrectLevel[ecl];\n\n    if (result == undefined) {\n      throw new Error('Unknwon error correction level: ' + ecl);\n    }\n\n    return result;\n  }\n\n  private getTypeNumber(content, ecl) {\n    const length = getUTF8Length(content);\n\n    let type = 1;\n    let limit = 0;\n    let i = 0;\n    const len = QRCodeLimitLength.length;\n    for (; i <= len; i++) {\n      const table = QRCodeLimitLength[i];\n      if (!table) {\n        throw new Error('Content too long: expected ' + limit + ' but got ' + length);\n      }\n\n      switch (ecl) {\n        case 'L':\n          limit = table[0];\n          break;\n\n        case 'M':\n          limit = table[1];\n          break;\n\n        case 'Q':\n          limit = table[2];\n          break;\n\n        case 'H':\n          limit = table[3];\n          break;\n\n        default:\n          throw new Error('Unknwon error correction level: ' + ecl);\n      }\n\n      if (length <= limit) {\n        break;\n      }\n\n      type++;\n    }\n\n    if (type > QRCodeLimitLength.length) {\n      throw new Error('Content too long');\n    }\n\n    return type;\n  }\n\n  emptyCenter(emptySize: number) {\n    const { size } = this;\n\n    const halfSize = size / 2;\n    const halfEmptySize = emptySize / 2;\n\n    for (let y = 0; y < size; y++) {\n      for (let x = 0; x < size; x++) {\n        if (\n          y >= halfSize - halfEmptySize &&\n          y < halfSize + halfEmptySize &&\n          x >= halfSize - halfEmptySize &&\n          x < halfSize + halfEmptySize\n        ) {\n          this.matrix[y][x] = false;\n        }\n\n      }\n    }\n  }\n\n  get matrix() {\n    return this.qrcode.modules;\n  }\n\n  get size() {\n    return this.qrcode.moduleCount;\n  }\n}\n","import { getProp, round, neighborOffsets, contour } from './utils';\nimport { QRCode } from './QRCode';\n\ntype QRSvgOptions = {\n  size: number;\n  radiusFactor: number;\n  cornerBlockRadiusFactor?: number;\n  roundOuterCorners: boolean;\n  roundInnerCorners: boolean;\n  cornerBlocksAsCircles: boolean;\n  fill: string;\n  preContent?: string | ((QRSvg) => string);\n  postContent?: string | ((QRSvg) => string);\n};\n\ntype Pride = 1 | 0;\n\ntype Cell = {\n  pride: Pride;\n  x: number;\n  y: number;\n  blockId?: string;\n  isCornerBlock: boolean;\n};\n\ntype LineSegment = {\n  processed: boolean;\n  p1: { x: number; y: number };\n  p2: { x: number; y: number };\n  cell: Cell;\n  cr: number;\n};\n\ntype LineSegmentsWithCrops = LineSegment[] & { crops?: LineSegment[][] };\n\nconst findNeighbors = (matrix: Cell[][], cell: Cell, pride: Pride, expectCells: Cell[] = []) => {\n  expectCells.push(cell);\n\n  for (const offset of neighborOffsets) {\n    const neighborCoord = { x: cell.x + offset[0], y: cell.y + offset[1] };\n\n    if (!expectCells.find((i) => i.x === neighborCoord.x && i.y === neighborCoord.y)) {\n      const neighborCell = getProp(matrix, [neighborCoord.y, neighborCoord.x]);\n\n      if (neighborCell && neighborCell.pride === pride) {\n        const pride = neighborCell.pride;\n        findNeighbors(matrix, neighborCell, pride, expectCells);\n      }\n    }\n  }\n};\n\nexport class QRSvg {\n  private options: QRSvgOptions = {\n    size: 0,\n    radiusFactor: 0.75,\n    roundOuterCorners: true,\n    roundInnerCorners: true,\n    cornerBlocksAsCircles: false,\n    fill: 'currentColor',\n  };\n\n  private matrix!: Cell[][];\n\n  paths: string[] = [];\n\n  private readonly matrixSize!: number;\n\n  private lines: Record<string, LineSegmentsWithCrops> = {};\n\n  private lastUniqId = 0;\n\n  readonly pointSize!: number;\n\n  constructor(qrCode: QRCode, options: Partial<QRSvgOptions>) {\n    for (const i in options) {\n      this.options[i] = options[i];\n    }\n\n    if (this.options.cornerBlockRadiusFactor === undefined) {\n      this.options.cornerBlockRadiusFactor = this.options.radiusFactor;\n    }\n\n    if (!(this.options.size > 0)) {\n      throw new Error(\"Expected 'size' value to be higher than zero!\");\n    }\n\n    this.matrixSize = qrCode.size;\n    this.pointSize = this.options.size / this.matrixSize;\n\n    this.matrix = (() => {\n      const result: Cell[][] = [];\n      qrCode.matrix.forEach((row, rowIdx) => {\n        result[rowIdx] = [];\n        row.forEach((val, idx) => {\n          result[rowIdx][idx] = {\n            pride: val ? 1 : 0,\n            x: idx,\n            y: rowIdx,\n            blockId: undefined,\n            isCornerBlock: false,\n          } as Cell;\n        });\n      });\n      return result;\n    })();\n\n    this.detectBlocks();\n    this.detectLines();\n    this.generatePaths();\n  }\n\n  private detectBlocks() {\n    const { matrixSize, matrix } = this;\n\n    for (let y = 0; y < matrixSize; y++) {\n      for (let x = 0; x < matrixSize; x++) {\n        const currCell = matrix[y][x];\n        if (currCell.blockId === undefined && currCell.pride === 1) {\n          const cells: Cell[] = [];\n          findNeighbors(matrix, currCell, 1, cells);\n          const blockId = this.getUniqId();\n          cells.forEach((cell) => {\n            const { x, y } = cell;\n            cell.blockId = blockId;\n\n            if ((x < 8 && y < 8) || (x > this.matrixSize - 8 && y < 8) || (x < 8 && y > this.matrixSize - 8)) {\n              cell.isCornerBlock = true;\n            }\n          });\n        }\n      }\n    }\n  }\n\n  private detectLines() {\n    const { lines, matrixSize, matrix } = this;\n\n    const pathRadius = (this.pointSize / 2) * Math.min(this.options.radiusFactor, 10);\n    const cornerBlockPathRadius = (this.pointSize / 2) * Math.min(this.options.cornerBlockRadiusFactor as number, 10);\n\n    for (let y = 0; y < matrixSize; y++) {\n      for (let x = 0; x < matrixSize; x++) {\n        const cell = matrix[y][x];\n        if (cell.blockId === undefined) {\n          continue;\n        }\n\n        if (cell.isCornerBlock && this.options.cornerBlocksAsCircles) {\n          continue;\n        }\n\n        neighborOffsets.forEach((offset, idx) => {\n          const neighborCell = getProp(matrix, [y + offset[0], x + offset[1]]);\n          if (!neighborCell || neighborCell.blockId !== cell.blockId) {\n            if (cell.blockId) {\n              lines[cell.blockId] = lines[cell.blockId] || [];\n              lines[cell.blockId].push({\n                processed: false,\n                p1: { y: y + contour[idx][0][0], x: x + contour[idx][0][1] },\n                p2: { y: y + contour[idx][1][0], x: x + contour[idx][1][1] },\n                cell,\n                cr: cell.isCornerBlock ? cornerBlockPathRadius : pathRadius,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    Object.keys(lines).forEach((key) => {\n      const line = lines[key];\n\n      const proc = (py, px, result, oCell) => {\n        const nextSegs = line\n          .filter((seg) => {\n            if (!seg.processed) {\n              if ((seg.p1.y === py && seg.p1.x === px) || (seg.p2.y === py && seg.p2.x === px)) {\n                return true;\n              }\n            }\n            return false;\n          })\n          .sort((a, b) => {\n            if (a.cell === oCell) {\n              return -1;\n            }\n            return 1;\n          });\n\n        const nextSeg = nextSegs[0];\n\n        if (nextSeg) {\n          nextSeg.processed = true;\n          let resultSeg;\n          if (nextSeg.p1.y === py && nextSeg.p1.x === px) {\n            resultSeg = { p1: nextSeg.p1, p2: nextSeg.p2, cr: nextSeg.cr };\n          } else if (nextSeg.p2.y === py && nextSeg.p2.x === px) {\n            resultSeg = { p1: nextSeg.p2, p2: nextSeg.p1, cr: nextSeg.cr };\n          }\n          result.push(resultSeg);\n          proc(resultSeg.p2.y, resultSeg.p2.x, result, nextSeg.cell);\n        }\n      };\n      line[0].processed = true;\n      const result: LineSegmentsWithCrops = [line[0]];\n      proc(line[0].p2.y, line[0].p2.x, result, line[0].cell);\n      lines[key] = result;\n      lines[key].crops = [];\n\n      let checkCrops = true;\n      while (checkCrops) {\n        const notProcessedSeg = line.find((i) => !i.processed);\n        if (notProcessedSeg) {\n          notProcessedSeg.processed = true;\n          const cropResult = [notProcessedSeg];\n          proc(notProcessedSeg.p2.y, notProcessedSeg.p2.x, cropResult, notProcessedSeg.cell);\n          cropResult.reverse();\n          cropResult.map((seg) => {\n            const op2 = seg.p2;\n            seg.p2 = seg.p1;\n            seg.p1 = op2;\n            return seg;\n          });\n          lines[key]?.crops?.push(cropResult);\n        } else {\n          checkCrops = false;\n        }\n      }\n    });\n  }\n\n  private getDir(seg) {\n    if (seg.p1.x === seg.p2.x) {\n      if (seg.p1.y > seg.p2.y) {\n        return 'sn';\n      }\n      return 'ns';\n    }\n    if (seg.p1.y === seg.p2.y) {\n      if (seg.p1.x > seg.p2.x) {\n        return 'ew';\n      }\n      return 'we';\n    }\n  }\n\n  private getSubPath(seg, prevSeg, roundOuterCorners, roundInnerCorners) {\n    const { pointSize } = this;\n\n    let {\n      p1: { x, y },\n      cr,\n    } = seg;\n\n    x = x * pointSize;\n    y = y * pointSize;\n\n    const xmcr = round(x - cr);\n    const xpcr = round(x + cr);\n\n    const ymcr = round(y - cr);\n    const ypcr = round(y + cr);\n\n    x = round(x);\n    y = round(y);\n\n    const segDir = this.getDir(seg);\n    const prevSegDir = this.getDir(prevSeg);\n\n    let path = '';\n    if (cr && roundOuterCorners && prevSegDir === 'we' && segDir === 'ns') {\n      path += `L${xmcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ypcr}`;\n    } else if (cr && roundOuterCorners && prevSegDir === 'ns' && segDir === 'ew') {\n      path += `L${x} ${ymcr} `;\n      path += `Q${x} ${y} ${xmcr} ${y}`;\n    } else if (cr && roundOuterCorners && prevSegDir === 'ew' && segDir === 'sn') {\n      path += `L${xpcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ymcr}`;\n    } else if (cr && roundOuterCorners && prevSegDir === 'sn' && segDir === 'we') {\n      path += `L${x} ${ypcr} `;\n      path += `Q${x} ${y} ${xpcr} ${y}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'sn' && segDir === 'ew') {\n      path += `L${x} ${ypcr} `;\n      path += `Q${x} ${y} ${xmcr} ${y}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'ew' && segDir === 'ns') {\n      path += `L${xpcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ypcr}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'ns' && segDir === 'we') {\n      path += `L${x} ${ymcr} `;\n      path += `Q${x} ${y} ${xpcr} ${y}`;\n    } else if (cr && roundInnerCorners && prevSegDir === 'we' && segDir === 'sn') {\n      path += `L${xmcr} ${y} `;\n      path += `Q${x} ${y} ${x} ${ymcr}`;\n    } else {\n      path += `L${x} ${y} `;\n    }\n    return path;\n  }\n\n  private getUniqId() {\n    return String(this.lastUniqId++);\n  }\n\n  private generatePaths() {\n    const {\n      pointSize,\n      options: { roundOuterCorners, roundInnerCorners, cornerBlocksAsCircles },\n    } = this;\n\n    const { lines } = this;\n    const paths: string[] = [];\n\n    Object.keys(lines).forEach((key) => {\n      let path = '';\n      for (const [lineIdx, line] of [lines[key], ...(lines[key].crops as LineSegment[][])].entries()) {\n        for (const [segIdx, seg] of line.entries()) {\n          let {\n            p1: { x, y },\n            cr,\n          } = seg;\n\n          x = x * pointSize;\n          y = y * pointSize;\n\n          const xpcr = round(x + cr);\n          const ypcr = round(y + cr);\n\n          x = round(x);\n          y = round(y);\n\n          const prevSeg = line[segIdx - 1] || line[line.length - 1];\n          const nextSeg = line[segIdx + 1] || line[0];\n\n          const segDir = this.getDir(seg);\n          const prevSegDir = this.getDir(prevSeg);\n\n          if (segIdx === 0) {\n            if (roundOuterCorners) {\n              if (lineIdx === 0) {\n                path += `M${xpcr} ${y} `;\n              } else {\n                path += `M${x} ${ypcr} `;\n              }\n            } else {\n              path += `M${x} ${y} `;\n            }\n          } else if (segIdx === line.length - 1) {\n            path += this.getSubPath(seg, prevSeg, roundOuterCorners, roundInnerCorners);\n            path += this.getSubPath(nextSeg, seg, roundOuterCorners, roundInnerCorners);\n            path += 'Z';\n          } else if (prevSegDir !== segDir) {\n            path += this.getSubPath(seg, prevSeg, roundOuterCorners, roundInnerCorners);\n          }\n        }\n      }\n      paths.push(`<path d=\"${path}\"/>`);\n    });\n\n    if (cornerBlocksAsCircles) {\n      const offsetSize = this.pointSize * this.matrixSize - this.pointSize * 7;\n      [\n        [0, 0],\n        [offsetSize, 0],\n        [0, offsetSize],\n      ].forEach(([ox, oy]) => {\n        const centerX = round((this.pointSize * 7) / 2 + ox);\n        const centerY = round((this.pointSize * 7) / 2 + oy);\n\n        let outerRadius = round((this.pointSize * 7) / 2);\n        const innerRadius = round((this.pointSize * 7) / 2 - this.pointSize);\n\n        // Big circle\n        paths.push(`<path d=\"\\\nM ${centerX} ${centerY - outerRadius} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY + outerRadius)} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY - outerRadius)} \\\nZ \\\nM ${centerX} ${centerY - innerRadius} \\\nA ${innerRadius} ${innerRadius} 0 1 1 ${centerX} ${round(centerY + innerRadius)} \\\nA ${innerRadius} ${innerRadius} 0 1 1 ${centerX} ${round(centerY - innerRadius)} \\\nZ\" />`);\n\n        // Small circle\n        outerRadius = round((this.pointSize * 7) / 2 - this.pointSize * 2);\n        paths.push(`<path d=\"\\\nM ${centerX} ${centerY - outerRadius} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY + outerRadius)} \\\nA ${outerRadius} ${outerRadius} 0 1 0 ${centerX} ${round(centerY - outerRadius)} \\\nZ\" />`);\n      });\n    }\n\n    this.paths = paths;\n  }\n\n  private svgAdditionalContent(additionalContent): string {\n    if (typeof additionalContent === 'function') {\n      return additionalContent(this);\n    }\n\n    if (typeof additionalContent === 'string') {\n      return additionalContent;\n    }\n\n    return additionalContent || '';\n  }\n\n  get svg() {\n    const { size, fill } = this.options;\n\n    return `\\\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${size} ${size}\" width=\"${size}\" height=\"${size}\" fill=\"${fill}\">\n${this.svgAdditionalContent(this.options.preContent)}\n${this.paths.join('\\n')}\n${this.svgAdditionalContent(this.options.postContent)}\n</svg>`;\n  }\n}\n","import React from 'react';\nimport styles from './styles.module.scss';\n\nconst GitHubLink = () => {\n  return (\n    <div className={styles.main}>\n      <a href=\"https://github.com/avin/sexy-qr\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <svg className={styles.octicon} viewBox=\"0 0 16 16\" version=\"1.1\" aria-hidden=\"true\">\n          <path\n            fillRule=\"evenodd\"\n            d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z\"\n          />\n        </svg>\n      </a>\n    </div>\n  );\n};\nexport default GitHubLink;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { QRCode, QRSvg } from 'sexy-qr';\nimport styles from './App.module.scss';\nimport GitHubLink from './GitHubLink/GitHubLink';\nimport svgLogo from './svglogo';\n\nconst App = () => {\n  const [content, setContent] = useState('https://github.com/avin/sexy-qr');\n  const [size, setSize] = useState('380');\n  const [fill, setFill] = useState('#182026');\n  const [circles, setCircles] = useState('false');\n  const [roundOuterCorners, setRoundOuterCorners] = useState('true');\n  const [roundInnerCorners, setRoundInnerCorners] = useState('true');\n  const [additionalContent, setAdditionalContent] = useState('false');\n  const [ecl, setEcl] = useState('M');\n  const [radiusFactor, setRadiusFactor] = useState('0.7');\n  const [cornerBlockRadiusFactor, setCornerBlockRadiusFactor] = useState('2.0');\n\n  const handleChangeAdditionalContent = useCallback((e) => {\n    setAdditionalContent(e.target.value);\n  }, []);\n\n  const handleChangeFill = useCallback((e) => {\n    setFill(e.target.value);\n  }, []);\n\n  const handleChangeCircles = useCallback((e) => {\n    setCircles(e.target.value);\n  }, []);\n\n  const handleChangeRoundOuterCorners = useCallback((e) => {\n    setRoundOuterCorners(e.target.value);\n  }, []);\n\n  const handleChangeRoundInnerCorners = useCallback((e) => {\n    setRoundInnerCorners(e.target.value);\n  }, []);\n\n  const handleChangeContent = useCallback((e) => {\n    setContent(e.target.value);\n  }, []);\n\n  const handleChangeSize = useCallback((e) => {\n    setSize(e.target.value);\n  }, []);\n\n  const handleChangeEcl = useCallback((e) => {\n    setEcl(e.target.value);\n  }, []);\n\n  const handleChangeRadiusFactor = useCallback((e) => {\n    setRadiusFactor(e.target.value);\n  }, []);\n\n  const handleChangeCornerBlockRadiusFactor = useCallback((e) => {\n    setCornerBlockRadiusFactor(e.target.value);\n  }, []);\n\n  const svgCode = useMemo(() => {\n    if (!content) {\n      return null;\n    }\n\n    const qrCode = new QRCode({\n      content,\n      ecl,\n    });\n\n    const emptyCenterSize = 2 * Math.round(qrCode.size / 4 / 2) - 1;\n    const additionalContentFunc = (qrSvg) => {\n      const start = (qrSvg.matrixSize / 2 - emptyCenterSize / 2) * qrSvg.pointSize + qrSvg.pointSize / 2;\n      const size = emptyCenterSize * qrSvg.pointSize - qrSvg.pointSize;\n      const logoSrc = `data:image/svg+xml;base64,${btoa(svgLogo)}`;\n      return `<image x=\"${start}\" y=\"${start}\" width=\"${size}\" height=\"${size}\" href=\"${logoSrc}\" />`;\n    };\n\n    if (additionalContent === 'true') {\n      qrCode.emptyCenter(emptyCenterSize);\n    }\n\n    const qrSvg = new QRSvg(qrCode, {\n      fill: fill,\n      cornerBlocksAsCircles: circles === 'true',\n      roundOuterCorners: roundOuterCorners === 'true',\n      roundInnerCorners: roundInnerCorners === 'true',\n      size: Number(size) || 1,\n      radiusFactor,\n      cornerBlockRadiusFactor,\n      preContent: `<!-- QR Content: ${content} -->`,\n      postContent: additionalContent === 'true' ? additionalContentFunc : undefined,\n    });\n    return qrSvg.svg;\n  }, [\n    content,\n    ecl,\n    radiusFactor,\n    cornerBlockRadiusFactor,\n    size,\n    circles,\n    fill,\n    roundOuterCorners,\n    roundInnerCorners,\n    additionalContent,\n  ]);\n\n  const handleDownload = useCallback(() => {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(svgCode));\n    element.setAttribute('download', 'qrcode.svg');\n    element.style.display = 'none';\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }, [svgCode]);\n\n  return (\n    <div>\n      <div className={styles.top}>\n        <div className={styles.downloadContainer}>\n          <div className={styles.title}>\n            <a href=\"https://github.com/avin/sexy-qr\">Sexy-QR</a>\n          </div>\n        </div>\n        <div>\n          <div style={{ width: '100%', paddingLeft: 30, paddingRight: 30 }}>\n            <label htmlFor=\"content\">Content:</label>\n            <input\n              id=\"content\"\n              type=\"text\"\n              onChange={handleChangeContent}\n              value={content}\n              className={styles.input}\n              placeholder=\"Encoding string...\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div className={styles.main}>\n        <div>\n          <div className={styles.controls}>\n            <div>\n              <label htmlFor=\"circles\">CornerBlocksAsCircles:</label>\n              <select\n                name=\"circles\"\n                id=\"circles\"\n                className={styles.select}\n                onChange={handleChangeCircles}\n                value={circles}\n              >\n                <option value=\"true\">Yes</option>\n                <option value=\"false\">No</option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"circles\">RoundOuterCorners:</label>\n              <select\n                name=\"roundOuterCorners\"\n                id=\"roundOuterCorners\"\n                className={styles.select}\n                onChange={handleChangeRoundOuterCorners}\n                value={roundOuterCorners}\n              >\n                <option value=\"true\">Yes</option>\n                <option value=\"false\">No</option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"circles\">RoundInnerCorners:</label>\n              <select\n                name=\"roundInnerCorners\"\n                id=\"roundInnerCorners\"\n                className={styles.select}\n                onChange={handleChangeRoundInnerCorners}\n                value={roundInnerCorners}\n              >\n                <option value=\"true\">Yes</option>\n                <option value=\"false\">No</option>\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"ecl\">ECL:</label>\n              <select name=\"ecl\" id=\"ecl\" className={styles.select} onChange={handleChangeEcl} value={ecl}>\n                {['L', 'M', 'Q', 'H'].map((v) => (\n                  <option value={v} key={v}>\n                    {v}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            <div>\n              <label htmlFor=\"radiusFactor\">RadiusFactor:</label>\n              <input\n                className={styles.range}\n                type=\"range\"\n                id=\"radiusFactor\"\n                name=\"radiusFactor\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.1\"\n                value={radiusFactor}\n                onChange={handleChangeRadiusFactor}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"cornerBlockRadiusFactor\">CornerBlockRadiusFactor:</label>\n              <input\n                className={styles.range}\n                type=\"range\"\n                id=\"cornerBlockRadiusFactor\"\n                name=\"cornerBlockRadiusFactor\"\n                min=\"0\"\n                max=\"3\"\n                step=\"0.1\"\n                value={cornerBlockRadiusFactor}\n                onChange={handleChangeCornerBlockRadiusFactor}\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"size\">Size:</label>\n              <input\n                id=\"size\"\n                type=\"tel\"\n                onChange={handleChangeSize}\n                value={size}\n                className={styles.input}\n                placeholder=\"Size\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"fill\">Fill:</label>\n              <input\n                id=\"fill\"\n                type=\"color\"\n                onChange={handleChangeFill}\n                value={fill}\n                className={styles.input}\n                placeholder=\"#000\"\n              />\n            </div>\n\n            <div>\n              <label htmlFor=\"circles\">AdditionalContent:</label>\n              <select\n                name=\"additionalContent\"\n                id=\"additionalContent\"\n                className={styles.select}\n                onChange={handleChangeAdditionalContent}\n                value={additionalContent}\n              >\n                <option value=\"true\">Yes</option>\n                <option value=\"false\">No</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div>\n          <div className={styles.imageContainer}>\n            {svgCode ? (\n              <div>\n                <div dangerouslySetInnerHTML={{ __html: svgCode }} />\n              </div>\n            ) : (\n              <div className={styles.notice}>Type string to encode</div>\n            )}\n\n            <button onClick={handleDownload} className={styles.downloadButton}>\n              Download SVG\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <GitHubLink />\n    </div>\n  );\n};\n\nexport default App;\n","const svg = `\\\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\">\n  <title>SVG Logo</title>\n  <a xlink:href=\"http://www.w3.org/Graphics/SVG/\" target=\"_parent\" xlink:title=\"W3C SVG Working Group home page\">\n    <rect id=\"background\" fill=\"#FF9900\" width=\"100\" height=\"100\" rx=\"4\" ry=\"4\"/>\n    <rect id=\"top-left\" fill=\"#FFB13B\" width=\"50\" height=\"50\" rx=\"4\" ry=\"4\"/>\n    <rect id=\"bottom-right\" x=\"50\" y=\"50\" fill=\"#DE8500\" width=\"50\" height=\"50\" rx=\"4\" ry=\"4\"/>\n    <g id=\"circles\" fill=\"#FF9900\">\n      <circle id=\"n\" cx=\"50\" cy=\"18.4\" r=\"18.4\"/>\n      <circle id=\"ne\" cx=\"72.4\" cy=\"27.6\" r=\"18.4\"/>\n      <circle id=\"e\" cx=\"81.6\" cy=\"50\" r=\"18.4\"/>\n      <circle id=\"se\" cx=\"72.4\" cy=\"72.4\" r=\"18.4\"/>\n      <circle id=\"s\" cx=\"50\" cy=\"81.6\" r=\"18.4\"/>\n      <circle id=\"sw\" cx=\"27.6\" cy=\"72.4\" r=\"18.4\"/>\n      <circle id=\"w\" cx=\"18.4\" cy=\"50\" r=\"18.4\"/>\n      <circle id=\"nw\" cx=\"27.6\" cy=\"27.6\" r=\"18.4\"/>\n    </g>\n    <g id=\"stars\">\n      <path id=\"black-star\" d=\"M63.086,18.385c0-7.227-5.859-13.086-13.1-13.086c-7.235,0-13.096,5.859-13.096,13.086   c-5.1-5.11-13.395-5.11-18.497,0c-5.119,5.12-5.119,13.408,0,18.524c-7.234,0-13.103,5.859-13.103,13.085   c0,7.23,5.87,13.098,13.103,13.098c-5.119,5.11-5.119,13.395,0,18.515c5.102,5.104,13.397,5.104,18.497,0   c0,7.228,5.86,13.083,13.096,13.083c7.24,0,13.1-5.855,13.1-13.083c5.118,5.104,13.416,5.104,18.513,0   c5.101-5.12,5.101-13.41,0-18.515c7.216,0,13.081-5.869,13.081-13.098c0-7.227-5.865-13.085-13.081-13.085   c5.101-5.119,5.101-13.406,0-18.524C76.502,13.275,68.206,13.275,63.086,18.385z\"/>\n      <path id=\"white-star\" fill=\"#FFFFFF\" d=\"M55.003,23.405v14.488L65.26,27.64c0-1.812,0.691-3.618,2.066-5.005   c2.78-2.771,7.275-2.771,10.024,0c2.771,2.766,2.771,7.255,0,10.027c-1.377,1.375-3.195,2.072-5.015,2.072L62.101,44.982H76.59   c1.29-1.28,3.054-2.076,5.011-2.076c3.9,0,7.078,3.179,7.078,7.087c0,3.906-3.178,7.088-7.078,7.088   c-1.957,0-3.721-0.798-5.011-2.072H62.1l10.229,10.244c1.824,0,3.642,0.694,5.015,2.086c2.774,2.759,2.774,7.25,0,10.01   c-2.75,2.774-7.239,2.774-10.025,0c-1.372-1.372-2.064-3.192-2.064-5.003L55,62.094v14.499c1.271,1.276,2.084,3.054,2.084,5.013   c0,3.906-3.177,7.077-7.098,7.077c-3.919,0-7.094-3.167-7.094-7.077c0-1.959,0.811-3.732,2.081-5.013V62.094L34.738,72.346   c0,1.812-0.705,3.627-2.084,5.003c-2.769,2.772-7.251,2.772-10.024,0c-2.775-2.764-2.775-7.253,0-10.012   c1.377-1.39,3.214-2.086,5.012-2.086l10.257-10.242H23.414c-1.289,1.276-3.072,2.072-5.015,2.072c-3.917,0-7.096-3.18-7.096-7.088   s3.177-7.087,7.096-7.087c1.94,0,3.725,0.796,5.015,2.076h14.488L27.646,34.736c-1.797,0-3.632-0.697-5.012-2.071   c-2.775-2.772-2.775-7.26,0-10.027c2.773-2.771,7.256-2.771,10.027,0c1.375,1.386,2.083,3.195,2.083,5.005l10.235,10.252V23.407   c-1.27-1.287-2.082-3.053-2.082-5.023c0-3.908,3.175-7.079,7.096-7.079c3.919,0,7.097,3.168,7.097,7.079   C57.088,20.356,56.274,22.119,55.003,23.405z\"/>\n    </g>\n\n    <g id=\"svg-textbox\">\n      <path id=\"text-backdrop\" fill=\"black\" d=\"M5.3,50 H94.68 V90 Q94.68,95 89.68,95 H10.3 Q5.3,95 5.3,90 Z\"/>\n      <path id=\"shine\" fill=\"#3F3F3F\" d=\"M14.657,54.211h71.394c2.908,0,5.312,2.385,5.312,5.315v17.91     c-27.584-3.403-54.926-8.125-82.011-7.683V59.526C9.353,56.596,11.743,54.211,14.657,54.211L14.657,54.211z\"/>\n      <g id=\"svg-text\">\n         <title>SVG</title>\n         <path id=\"S\" fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"0.5035\" d=\"M18.312,72.927c-2.103-2.107-3.407-5.028-3.407-8.253   c0-6.445,5.223-11.672,11.666-11.672c6.446,0,11.667,5.225,11.667,11.672h-6.832c0-2.674-2.168-4.837-4.835-4.837   c-2.663,0-4.838,2.163-4.838,4.837c0,1.338,0.549,2.536,1.415,3.42l0,0c0.883,0.874,2.101,1.405,3.423,1.405v0.012   c3.232,0,6.145,1.309,8.243,3.416l0,0c2.118,2.111,3.424,5.034,3.424,8.248c0,6.454-5.221,11.68-11.667,11.68   c-6.442,0-11.666-5.222-11.666-11.68h6.828c0,2.679,2.175,4.835,4.838,4.835c2.667,0,4.835-2.156,4.835-4.835   c0-1.329-0.545-2.527-1.429-3.407l0,0c-0.864-0.88-2.082-1.418-3.406-1.418l0,0C23.341,76.35,20.429,75.036,18.312,72.927   L18.312,72.927L18.312,72.927z\"/>\n         <polygon id=\"V\" fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"0.5035\" points=\"61.588,53.005 53.344,92.854 46.494,92.854    38.236,53.005 45.082,53.005 49.92,76.342 54.755,53.005  \"/>\n         <path id=\"G\" fill=\"#FFFFFF\" stroke=\"#000000\" stroke-width=\"0.5035\" d=\"M73.255,69.513h11.683v11.664l0,0   c0,6.452-5.226,11.678-11.669,11.678c-6.441,0-11.666-5.226-11.666-11.678l0,0V64.676h-0.017C61.586,58.229,66.827,53,73.253,53   c6.459,0,11.683,5.225,11.683,11.676h-6.849c0-2.674-2.152-4.837-4.834-4.837c-2.647,0-4.82,2.163-4.82,4.837v16.501l0,0   c0,2.675,2.173,4.837,4.82,4.837c2.682,0,4.834-2.162,4.834-4.827v-0.012v-4.827h-4.834L73.255,69.513L73.255,69.513z\"/>\n      </g>\n    </g>\n  </a>\n</svg>`;\n\nexport default svg;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2C-7r\",\"container\":\"App_container__2i36C\",\"controls\":\"App_controls__26tu4\",\"top\":\"App_top__24U_Z\",\"main\":\"App_main__aDOxM\",\"label\":\"App_label__LI5Ny\",\"input\":\"App_input__1k4p7\",\"select\":\"App_select__3olHI\",\"range\":\"App_range__3TT8M\",\"imageContainer\":\"App_imageContainer__G3bKt\",\"notice\":\"App_notice__29bU7\",\"downloadContainer\":\"App_downloadContainer__3KHbY\",\"downloadButton\":\"App_downloadButton__3Zk_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__1dPbY\",\"octicon\":\"styles_octicon__u8VXb\"};"],"sourceRoot":""}